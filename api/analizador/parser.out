Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COR_D
    COR_I

Grammar

Rule 0     S' -> ini
Rule 1     ini -> intrucciones_global
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> asignacion PUNTOCOMA
Rule 5     instruccion -> if
Rule 6     instruccion -> match
Rule 7     instruccion -> while
Rule 8     instruccion -> loop
Rule 9     instruccion -> break PUNTOCOMA
Rule 10    instruccion -> continue PUNTOCOMA
Rule 11    instruccion -> return PUNTOCOMA
Rule 12    instruccion -> print PUNTOCOMA
Rule 13    instruccion -> llamada PUNTOCOMA
Rule 14    instruccion -> mod_struct PUNTOCOMA
Rule 15    instruccion_no_pt -> if
Rule 16    instruccion_no_pt -> match
Rule 17    instruccion_no_pt -> print
Rule 18    instruccion_no_pt -> while
Rule 19    instruccion_no_pt -> loop
Rule 20    instruccion_no_pt -> break
Rule 21    instruccion_no_pt -> continue
Rule 22    instruccion_no_pt -> return
Rule 23    instruccion_no_pt -> llamada
Rule 24    intrucciones_global -> intrucciones_global ins_global
Rule 25    intrucciones_global -> ins_global
Rule 26    ins_global -> funcion
Rule 27    ins_global -> struct
Rule 28    print -> PRINT NOT PAR_I expresion PAR_D
Rule 29    print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D
Rule 30    exp_list -> exp_list COMA expresion
Rule 31    exp_list -> expresion
Rule 32    funcion -> FN ID PAR_I lista_param PAR_D statement
Rule 33    funcion -> FN ID PAR_I PAR_D statement
Rule 34    funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
Rule 35    funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement
Rule 36    lista_param -> lista_param COMA ID D_PUNTO tipo
Rule 37    lista_param -> ID D_PUNTO tipo
Rule 38    return -> RETURN expresion
Rule 39    return -> RETURN
Rule 40    llamada -> ID PAR_I PAR_D
Rule 41    llamada -> ID PAR_I exp_list PAR_D
Rule 42    struct -> STRUCT ID LLV_I lista_campos LLV_D
Rule 43    lista_campos -> lista_campos COMA campo
Rule 44    lista_campos -> campo
Rule 45    campo -> ID D_PUNTO tipo
Rule 46    campo -> ID D_PUNTO ID
Rule 47    instancia -> ID LLV_I lista_atributo LLV_D
Rule 48    lista_atributo -> lista_atributo COMA ID D_PUNTO expresion
Rule 49    lista_atributo -> ID D_PUNTO expresion
Rule 50    if -> IF expresion statement
Rule 51    if -> IF expresion statement else
Rule 52    else -> ELSE statement
Rule 53    else -> ELSE if
Rule 54    statement -> LLV_I instrucciones LLV_D
Rule 55    statement -> LLV_I LLV_D
Rule 56    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 57    exp_else -> ELSE LLV_I expresion LLV_D
Rule 58    exp_else -> ELSE exp_if
Rule 59    match -> MATCH expresion LLV_I case_list LLV_D
Rule 60    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 61    case_list -> case_list case
Rule 62    case_list -> case
Rule 63    case -> exp_list IGUAL MAYOR statement
Rule 64    case -> exp_list IGUAL MAYOR instruccion_no_pt COMA
Rule 65    default -> GUION_B IGUAL MAYOR statement
Rule 66    default -> GUION_B IGUAL MAYOR instruccion
Rule 67    exp_list_c -> exp_list_c BARRA expresion
Rule 68    exp_list_c -> expresion
Rule 69    match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 70    match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 71    case_list_exp -> case_list_exp case_exp
Rule 72    case_list_exp -> case_exp
Rule 73    case_exp -> exp_list_c IGUAL MAYOR expresion
Rule 74    case_exp -> exp_list_c IGUAL MAYOR expresion COMA
Rule 75    default_exp -> GUION_B IGUAL MAYOR expresion
Rule 76    while -> WHILE expresion statement
Rule 77    break -> BREAK
Rule 78    break -> BREAK expresion
Rule 79    continue -> CONTINUE
Rule 80    loop -> LOOP statement
Rule 81    loop_exp -> LOOP statement
Rule 82    asignacion -> LET ID IGUAL expresion
Rule 83    asignacion -> LET MUT ID IGUAL expresion
Rule 84    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 85    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 86    asignacion -> ID IGUAL expresion
Rule 87    tipo -> INT
Rule 88    tipo -> FLOAT
Rule 89    tipo -> BOOL
Rule 90    tipo -> AMP STR
Rule 91    tipo -> STRING
Rule 92    tipo -> CHAR
Rule 93    tipo -> VOID
Rule 94    expresion -> expresion MAS expresion
Rule 95    expresion -> expresion MENOS expresion
Rule 96    expresion -> expresion MULTI expresion
Rule 97    expresion -> expresion DIV expresion
Rule 98    expresion -> expresion MODULO expresion
Rule 99    expresion -> MENOS expresion
Rule 100   expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 101   expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 102   expresion -> expresion PUNTO ABS PAR_I PAR_D
Rule 103   expresion -> expresion PUNTO SQRT PAR_I PAR_D
Rule 104   expresion -> expresion MAYOR expresion
Rule 105   expresion -> expresion MENOR expresion
Rule 106   expresion -> expresion MAYOR_I expresion
Rule 107   expresion -> expresion MENOR_I expresion
Rule 108   expresion -> expresion D_IGUAL expresion
Rule 109   expresion -> expresion NO_IGUAL expresion
Rule 110   expresion -> expresion OR expresion
Rule 111   expresion -> expresion AND expresion
Rule 112   expresion -> NOT expresion
Rule 113   expresion -> PAR_I expresion PAR_D
Rule 114   expresion -> ENTERO
Rule 115   expresion -> DECIMAL
Rule 116   expresion -> TRUE
Rule 117   expresion -> FALSE
Rule 118   expresion -> CHAR_S
Rule 119   expresion -> CADENA
Rule 120   expresion -> ID
Rule 121   expresion -> expresion PUNTO TO_STRING PAR_I PAR_D
Rule 122   mod_struct -> acceso_struct IGUAL expresion
Rule 123   acceso_struct_exp -> acceso_struct
Rule 124   acceso_struct -> acceso_struct PUNTO ID
Rule 125   acceso_struct -> ID PUNTO ID
Rule 126   expresion -> expresion AS tipo
Rule 127   expresion -> exp_if
Rule 128   expresion -> match_exp
Rule 129   expresion -> loop_exp
Rule 130   expresion -> llamada
Rule 131   expresion -> instancia
Rule 132   expresion -> acceso_struct_exp

Terminals, with rules where they appear

ABS                  : 102
AMP                  : 90
AND                  : 111
AS                   : 126
BARRA                : 67
BOOL                 : 89
BREAK                : 77 78
CADENA               : 29 119
CHAR                 : 92
CHAR_S               : 118
COMA                 : 29 30 36 43 48 64 74 100 101
CONTINUE             : 79
COR_D                : 
COR_I                : 
DECIMAL              : 115
DIV                  : 97
D_IGUAL              : 108
D_PUNTO              : 36 37 45 46 48 49 84 85 100 100 101 101
ELSE                 : 52 53 57 58
ENTERO               : 114
FALSE                : 117
FLOAT                : 88 101
FN                   : 32 33 34 35
GUION_B              : 65 66 75
ID                   : 32 33 34 35 36 37 40 41 42 45 46 46 47 48 49 82 83 84 85 86 120 124 125 125
IF                   : 50 51 56
IGUAL                : 63 64 65 66 73 74 75 82 83 84 85 86 122
INT                  : 87 100
LET                  : 82 83 84 85
LLV_D                : 42 47 54 55 56 57 59 60 69 70
LLV_I                : 42 47 54 55 56 57 59 60 69 70
LOOP                 : 80 81
MAS                  : 94
MATCH                : 59 60 69 70
MAYOR                : 34 35 63 64 65 66 73 74 75 104
MAYOR_I              : 106
MENOR                : 105
MENOR_I              : 107
MENOS                : 34 35 95 99
MODULO               : 98
MULTI                : 96
MUT                  : 83 85
NOT                  : 28 29 112
NO_IGUAL             : 109
OR                   : 110
PAR_D                : 28 29 32 33 34 35 40 41 100 101 102 103 113 121
PAR_I                : 28 29 32 33 34 35 40 41 100 101 102 103 113 121
POW_FLOAT            : 101
POW_INT              : 100
PRINT                : 28 29
PUNTO                : 102 103 121 124 125
PUNTOCOMA            : 4 9 10 11 12 13 14
RETURN               : 38 39
SQRT                 : 103
STR                  : 90
STRING               : 91
STRUCT               : 42
TO_STRING            : 121
TRUE                 : 116
VOID                 : 93
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

acceso_struct        : 122 123 124
acceso_struct_exp    : 132
asignacion           : 4
break                : 9 20
campo                : 43 44
case                 : 61 62
case_exp             : 71 72
case_list            : 59 60 61
case_list_exp        : 69 70 71
continue             : 10 21
default              : 60
default_exp          : 70
else                 : 51
exp_else             : 56
exp_if               : 58 127
exp_list             : 29 30 41 63 64
exp_list_c           : 67 73 74
expresion            : 28 30 31 38 48 49 50 51 56 56 57 59 60 67 68 69 70 73 74 75 76 78 82 83 84 85 86 94 94 95 95 96 96 97 97 98 98 99 100 100 101 101 102 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 113 121 122 126
funcion              : 26
if                   : 5 15 53
ini                  : 0
ins_global           : 24 25
instancia            : 131
instruccion          : 2 3 66
instruccion_no_pt    : 64
instrucciones        : 2 54
intrucciones_global  : 1 24
lista_atributo       : 47 48
lista_campos         : 42 43
lista_param          : 32 34 36
llamada              : 13 23 130
loop                 : 8 19
loop_exp             : 129
match                : 6 16
match_exp            : 128
mod_struct           : 14
print                : 12 17
return               : 11 22
statement            : 32 33 34 35 50 51 52 63 65 76 80 81
struct               : 27
tipo                 : 34 35 36 37 45 84 85 126
while                : 7 18

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . intrucciones_global
    (24) intrucciones_global -> . intrucciones_global ins_global
    (25) intrucciones_global -> . ins_global
    (26) ins_global -> . funcion
    (27) ins_global -> . struct
    (32) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (33) funcion -> . FN ID PAR_I PAR_D statement
    (34) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (35) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (42) struct -> . STRUCT ID LLV_I lista_campos LLV_D

    FN              shift and go to state 6
    STRUCT          shift and go to state 7

    ini                            shift and go to state 1
    intrucciones_global            shift and go to state 2
    ins_global                     shift and go to state 3
    funcion                        shift and go to state 4
    struct                         shift and go to state 5

state 1

    (0) S' -> ini .



state 2

    (1) ini -> intrucciones_global .
    (24) intrucciones_global -> intrucciones_global . ins_global
    (26) ins_global -> . funcion
    (27) ins_global -> . struct
    (32) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (33) funcion -> . FN ID PAR_I PAR_D statement
    (34) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (35) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (42) struct -> . STRUCT ID LLV_I lista_campos LLV_D

    $end            reduce using rule 1 (ini -> intrucciones_global .)
    FN              shift and go to state 6
    STRUCT          shift and go to state 7

    ins_global                     shift and go to state 8
    funcion                        shift and go to state 4
    struct                         shift and go to state 5

state 3

    (25) intrucciones_global -> ins_global .

    FN              reduce using rule 25 (intrucciones_global -> ins_global .)
    STRUCT          reduce using rule 25 (intrucciones_global -> ins_global .)
    $end            reduce using rule 25 (intrucciones_global -> ins_global .)


state 4

    (26) ins_global -> funcion .

    FN              reduce using rule 26 (ins_global -> funcion .)
    STRUCT          reduce using rule 26 (ins_global -> funcion .)
    $end            reduce using rule 26 (ins_global -> funcion .)


state 5

    (27) ins_global -> struct .

    FN              reduce using rule 27 (ins_global -> struct .)
    STRUCT          reduce using rule 27 (ins_global -> struct .)
    $end            reduce using rule 27 (ins_global -> struct .)


state 6

    (32) funcion -> FN . ID PAR_I lista_param PAR_D statement
    (33) funcion -> FN . ID PAR_I PAR_D statement
    (34) funcion -> FN . ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (35) funcion -> FN . ID PAR_I PAR_D MENOS MAYOR tipo statement

    ID              shift and go to state 9


state 7

    (42) struct -> STRUCT . ID LLV_I lista_campos LLV_D

    ID              shift and go to state 10


state 8

    (24) intrucciones_global -> intrucciones_global ins_global .

    FN              reduce using rule 24 (intrucciones_global -> intrucciones_global ins_global .)
    STRUCT          reduce using rule 24 (intrucciones_global -> intrucciones_global ins_global .)
    $end            reduce using rule 24 (intrucciones_global -> intrucciones_global ins_global .)


state 9

    (32) funcion -> FN ID . PAR_I lista_param PAR_D statement
    (33) funcion -> FN ID . PAR_I PAR_D statement
    (34) funcion -> FN ID . PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (35) funcion -> FN ID . PAR_I PAR_D MENOS MAYOR tipo statement

    PAR_I           shift and go to state 11


state 10

    (42) struct -> STRUCT ID . LLV_I lista_campos LLV_D

    LLV_I           shift and go to state 12


state 11

    (32) funcion -> FN ID PAR_I . lista_param PAR_D statement
    (33) funcion -> FN ID PAR_I . PAR_D statement
    (34) funcion -> FN ID PAR_I . lista_param PAR_D MENOS MAYOR tipo statement
    (35) funcion -> FN ID PAR_I . PAR_D MENOS MAYOR tipo statement
    (36) lista_param -> . lista_param COMA ID D_PUNTO tipo
    (37) lista_param -> . ID D_PUNTO tipo

    PAR_D           shift and go to state 15
    ID              shift and go to state 13

    lista_param                    shift and go to state 14

state 12

    (42) struct -> STRUCT ID LLV_I . lista_campos LLV_D
    (43) lista_campos -> . lista_campos COMA campo
    (44) lista_campos -> . campo
    (45) campo -> . ID D_PUNTO tipo
    (46) campo -> . ID D_PUNTO ID

    ID              shift and go to state 16

    lista_campos                   shift and go to state 17
    campo                          shift and go to state 18

state 13

    (37) lista_param -> ID . D_PUNTO tipo

    D_PUNTO         shift and go to state 19


state 14

    (32) funcion -> FN ID PAR_I lista_param . PAR_D statement
    (34) funcion -> FN ID PAR_I lista_param . PAR_D MENOS MAYOR tipo statement
    (36) lista_param -> lista_param . COMA ID D_PUNTO tipo

    PAR_D           shift and go to state 20
    COMA            shift and go to state 21


state 15

    (33) funcion -> FN ID PAR_I PAR_D . statement
    (35) funcion -> FN ID PAR_I PAR_D . MENOS MAYOR tipo statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    MENOS           shift and go to state 23
    LLV_I           shift and go to state 24

    statement                      shift and go to state 22

state 16

    (45) campo -> ID . D_PUNTO tipo
    (46) campo -> ID . D_PUNTO ID

    D_PUNTO         shift and go to state 25


state 17

    (42) struct -> STRUCT ID LLV_I lista_campos . LLV_D
    (43) lista_campos -> lista_campos . COMA campo

    LLV_D           shift and go to state 26
    COMA            shift and go to state 27


state 18

    (44) lista_campos -> campo .

    LLV_D           reduce using rule 44 (lista_campos -> campo .)
    COMA            reduce using rule 44 (lista_campos -> campo .)


state 19

    (37) lista_param -> ID D_PUNTO . tipo
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 28

state 20

    (32) funcion -> FN ID PAR_I lista_param PAR_D . statement
    (34) funcion -> FN ID PAR_I lista_param PAR_D . MENOS MAYOR tipo statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    MENOS           shift and go to state 37
    LLV_I           shift and go to state 24

    statement                      shift and go to state 36

state 21

    (36) lista_param -> lista_param COMA . ID D_PUNTO tipo

    ID              shift and go to state 38


state 22

    (33) funcion -> FN ID PAR_I PAR_D statement .

    FN              reduce using rule 33 (funcion -> FN ID PAR_I PAR_D statement .)
    STRUCT          reduce using rule 33 (funcion -> FN ID PAR_I PAR_D statement .)
    $end            reduce using rule 33 (funcion -> FN ID PAR_I PAR_D statement .)


state 23

    (35) funcion -> FN ID PAR_I PAR_D MENOS . MAYOR tipo statement

    MAYOR           shift and go to state 39


state 24

    (54) statement -> LLV_I . instrucciones LLV_D
    (55) statement -> LLV_I . LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . asignacion PUNTOCOMA
    (5) instruccion -> . if
    (6) instruccion -> . match
    (7) instruccion -> . while
    (8) instruccion -> . loop
    (9) instruccion -> . break PUNTOCOMA
    (10) instruccion -> . continue PUNTOCOMA
    (11) instruccion -> . return PUNTOCOMA
    (12) instruccion -> . print PUNTOCOMA
    (13) instruccion -> . llamada PUNTOCOMA
    (14) instruccion -> . mod_struct PUNTOCOMA
    (82) asignacion -> . LET ID IGUAL expresion
    (83) asignacion -> . LET MUT ID IGUAL expresion
    (84) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (85) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (86) asignacion -> . ID IGUAL expresion
    (50) if -> . IF expresion statement
    (51) if -> . IF expresion statement else
    (59) match -> . MATCH expresion LLV_I case_list LLV_D
    (60) match -> . MATCH expresion LLV_I case_list default LLV_D
    (76) while -> . WHILE expresion statement
    (80) loop -> . LOOP statement
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) continue -> . CONTINUE
    (38) return -> . RETURN expresion
    (39) return -> . RETURN
    (28) print -> . PRINT NOT PAR_I expresion PAR_D
    (29) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (122) mod_struct -> . acceso_struct IGUAL expresion
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    LLV_D           shift and go to state 41
    LET             shift and go to state 54
    ID              shift and go to state 55
    IF              shift and go to state 56
    MATCH           shift and go to state 57
    WHILE           shift and go to state 58
    LOOP            shift and go to state 59
    BREAK           shift and go to state 60
    CONTINUE        shift and go to state 61
    RETURN          shift and go to state 62
    PRINT           shift and go to state 63

    instrucciones                  shift and go to state 40
    instruccion                    shift and go to state 42
    asignacion                     shift and go to state 43
    if                             shift and go to state 44
    match                          shift and go to state 45
    while                          shift and go to state 46
    loop                           shift and go to state 47
    break                          shift and go to state 48
    continue                       shift and go to state 49
    return                         shift and go to state 50
    print                          shift and go to state 51
    llamada                        shift and go to state 52
    mod_struct                     shift and go to state 53
    acceso_struct                  shift and go to state 64

state 25

    (45) campo -> ID D_PUNTO . tipo
    (46) campo -> ID D_PUNTO . ID
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    ID              shift and go to state 65
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 66

state 26

    (42) struct -> STRUCT ID LLV_I lista_campos LLV_D .

    FN              reduce using rule 42 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    STRUCT          reduce using rule 42 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    $end            reduce using rule 42 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)


state 27

    (43) lista_campos -> lista_campos COMA . campo
    (45) campo -> . ID D_PUNTO tipo
    (46) campo -> . ID D_PUNTO ID

    ID              shift and go to state 16

    campo                          shift and go to state 67

state 28

    (37) lista_param -> ID D_PUNTO tipo .

    PAR_D           reduce using rule 37 (lista_param -> ID D_PUNTO tipo .)
    COMA            reduce using rule 37 (lista_param -> ID D_PUNTO tipo .)


state 29

    (87) tipo -> INT .

    PAR_D           reduce using rule 87 (tipo -> INT .)
    COMA            reduce using rule 87 (tipo -> INT .)
    LLV_D           reduce using rule 87 (tipo -> INT .)
    LLV_I           reduce using rule 87 (tipo -> INT .)
    IGUAL           reduce using rule 87 (tipo -> INT .)
    MAS             reduce using rule 87 (tipo -> INT .)
    MENOS           reduce using rule 87 (tipo -> INT .)
    MULTI           reduce using rule 87 (tipo -> INT .)
    DIV             reduce using rule 87 (tipo -> INT .)
    MODULO          reduce using rule 87 (tipo -> INT .)
    PUNTO           reduce using rule 87 (tipo -> INT .)
    MAYOR           reduce using rule 87 (tipo -> INT .)
    MENOR           reduce using rule 87 (tipo -> INT .)
    MAYOR_I         reduce using rule 87 (tipo -> INT .)
    MENOR_I         reduce using rule 87 (tipo -> INT .)
    D_IGUAL         reduce using rule 87 (tipo -> INT .)
    NO_IGUAL        reduce using rule 87 (tipo -> INT .)
    OR              reduce using rule 87 (tipo -> INT .)
    AND             reduce using rule 87 (tipo -> INT .)
    AS              reduce using rule 87 (tipo -> INT .)
    PUNTOCOMA       reduce using rule 87 (tipo -> INT .)
    BARRA           reduce using rule 87 (tipo -> INT .)
    GUION_B         reduce using rule 87 (tipo -> INT .)
    INT             reduce using rule 87 (tipo -> INT .)
    FLOAT           reduce using rule 87 (tipo -> INT .)
    NOT             reduce using rule 87 (tipo -> INT .)
    PAR_I           reduce using rule 87 (tipo -> INT .)
    ENTERO          reduce using rule 87 (tipo -> INT .)
    DECIMAL         reduce using rule 87 (tipo -> INT .)
    TRUE            reduce using rule 87 (tipo -> INT .)
    FALSE           reduce using rule 87 (tipo -> INT .)
    CHAR_S          reduce using rule 87 (tipo -> INT .)
    CADENA          reduce using rule 87 (tipo -> INT .)
    ID              reduce using rule 87 (tipo -> INT .)
    IF              reduce using rule 87 (tipo -> INT .)
    MATCH           reduce using rule 87 (tipo -> INT .)
    LOOP            reduce using rule 87 (tipo -> INT .)


state 30

    (88) tipo -> FLOAT .

    PAR_D           reduce using rule 88 (tipo -> FLOAT .)
    COMA            reduce using rule 88 (tipo -> FLOAT .)
    LLV_D           reduce using rule 88 (tipo -> FLOAT .)
    LLV_I           reduce using rule 88 (tipo -> FLOAT .)
    IGUAL           reduce using rule 88 (tipo -> FLOAT .)
    MAS             reduce using rule 88 (tipo -> FLOAT .)
    MENOS           reduce using rule 88 (tipo -> FLOAT .)
    MULTI           reduce using rule 88 (tipo -> FLOAT .)
    DIV             reduce using rule 88 (tipo -> FLOAT .)
    MODULO          reduce using rule 88 (tipo -> FLOAT .)
    PUNTO           reduce using rule 88 (tipo -> FLOAT .)
    MAYOR           reduce using rule 88 (tipo -> FLOAT .)
    MENOR           reduce using rule 88 (tipo -> FLOAT .)
    MAYOR_I         reduce using rule 88 (tipo -> FLOAT .)
    MENOR_I         reduce using rule 88 (tipo -> FLOAT .)
    D_IGUAL         reduce using rule 88 (tipo -> FLOAT .)
    NO_IGUAL        reduce using rule 88 (tipo -> FLOAT .)
    OR              reduce using rule 88 (tipo -> FLOAT .)
    AND             reduce using rule 88 (tipo -> FLOAT .)
    AS              reduce using rule 88 (tipo -> FLOAT .)
    PUNTOCOMA       reduce using rule 88 (tipo -> FLOAT .)
    BARRA           reduce using rule 88 (tipo -> FLOAT .)
    GUION_B         reduce using rule 88 (tipo -> FLOAT .)
    INT             reduce using rule 88 (tipo -> FLOAT .)
    FLOAT           reduce using rule 88 (tipo -> FLOAT .)
    NOT             reduce using rule 88 (tipo -> FLOAT .)
    PAR_I           reduce using rule 88 (tipo -> FLOAT .)
    ENTERO          reduce using rule 88 (tipo -> FLOAT .)
    DECIMAL         reduce using rule 88 (tipo -> FLOAT .)
    TRUE            reduce using rule 88 (tipo -> FLOAT .)
    FALSE           reduce using rule 88 (tipo -> FLOAT .)
    CHAR_S          reduce using rule 88 (tipo -> FLOAT .)
    CADENA          reduce using rule 88 (tipo -> FLOAT .)
    ID              reduce using rule 88 (tipo -> FLOAT .)
    IF              reduce using rule 88 (tipo -> FLOAT .)
    MATCH           reduce using rule 88 (tipo -> FLOAT .)
    LOOP            reduce using rule 88 (tipo -> FLOAT .)


state 31

    (89) tipo -> BOOL .

    PAR_D           reduce using rule 89 (tipo -> BOOL .)
    COMA            reduce using rule 89 (tipo -> BOOL .)
    LLV_D           reduce using rule 89 (tipo -> BOOL .)
    LLV_I           reduce using rule 89 (tipo -> BOOL .)
    IGUAL           reduce using rule 89 (tipo -> BOOL .)
    MAS             reduce using rule 89 (tipo -> BOOL .)
    MENOS           reduce using rule 89 (tipo -> BOOL .)
    MULTI           reduce using rule 89 (tipo -> BOOL .)
    DIV             reduce using rule 89 (tipo -> BOOL .)
    MODULO          reduce using rule 89 (tipo -> BOOL .)
    PUNTO           reduce using rule 89 (tipo -> BOOL .)
    MAYOR           reduce using rule 89 (tipo -> BOOL .)
    MENOR           reduce using rule 89 (tipo -> BOOL .)
    MAYOR_I         reduce using rule 89 (tipo -> BOOL .)
    MENOR_I         reduce using rule 89 (tipo -> BOOL .)
    D_IGUAL         reduce using rule 89 (tipo -> BOOL .)
    NO_IGUAL        reduce using rule 89 (tipo -> BOOL .)
    OR              reduce using rule 89 (tipo -> BOOL .)
    AND             reduce using rule 89 (tipo -> BOOL .)
    AS              reduce using rule 89 (tipo -> BOOL .)
    PUNTOCOMA       reduce using rule 89 (tipo -> BOOL .)
    BARRA           reduce using rule 89 (tipo -> BOOL .)
    GUION_B         reduce using rule 89 (tipo -> BOOL .)
    INT             reduce using rule 89 (tipo -> BOOL .)
    FLOAT           reduce using rule 89 (tipo -> BOOL .)
    NOT             reduce using rule 89 (tipo -> BOOL .)
    PAR_I           reduce using rule 89 (tipo -> BOOL .)
    ENTERO          reduce using rule 89 (tipo -> BOOL .)
    DECIMAL         reduce using rule 89 (tipo -> BOOL .)
    TRUE            reduce using rule 89 (tipo -> BOOL .)
    FALSE           reduce using rule 89 (tipo -> BOOL .)
    CHAR_S          reduce using rule 89 (tipo -> BOOL .)
    CADENA          reduce using rule 89 (tipo -> BOOL .)
    ID              reduce using rule 89 (tipo -> BOOL .)
    IF              reduce using rule 89 (tipo -> BOOL .)
    MATCH           reduce using rule 89 (tipo -> BOOL .)
    LOOP            reduce using rule 89 (tipo -> BOOL .)


state 32

    (90) tipo -> AMP . STR

    STR             shift and go to state 68


state 33

    (91) tipo -> STRING .

    PAR_D           reduce using rule 91 (tipo -> STRING .)
    COMA            reduce using rule 91 (tipo -> STRING .)
    LLV_D           reduce using rule 91 (tipo -> STRING .)
    LLV_I           reduce using rule 91 (tipo -> STRING .)
    IGUAL           reduce using rule 91 (tipo -> STRING .)
    MAS             reduce using rule 91 (tipo -> STRING .)
    MENOS           reduce using rule 91 (tipo -> STRING .)
    MULTI           reduce using rule 91 (tipo -> STRING .)
    DIV             reduce using rule 91 (tipo -> STRING .)
    MODULO          reduce using rule 91 (tipo -> STRING .)
    PUNTO           reduce using rule 91 (tipo -> STRING .)
    MAYOR           reduce using rule 91 (tipo -> STRING .)
    MENOR           reduce using rule 91 (tipo -> STRING .)
    MAYOR_I         reduce using rule 91 (tipo -> STRING .)
    MENOR_I         reduce using rule 91 (tipo -> STRING .)
    D_IGUAL         reduce using rule 91 (tipo -> STRING .)
    NO_IGUAL        reduce using rule 91 (tipo -> STRING .)
    OR              reduce using rule 91 (tipo -> STRING .)
    AND             reduce using rule 91 (tipo -> STRING .)
    AS              reduce using rule 91 (tipo -> STRING .)
    PUNTOCOMA       reduce using rule 91 (tipo -> STRING .)
    BARRA           reduce using rule 91 (tipo -> STRING .)
    GUION_B         reduce using rule 91 (tipo -> STRING .)
    INT             reduce using rule 91 (tipo -> STRING .)
    FLOAT           reduce using rule 91 (tipo -> STRING .)
    NOT             reduce using rule 91 (tipo -> STRING .)
    PAR_I           reduce using rule 91 (tipo -> STRING .)
    ENTERO          reduce using rule 91 (tipo -> STRING .)
    DECIMAL         reduce using rule 91 (tipo -> STRING .)
    TRUE            reduce using rule 91 (tipo -> STRING .)
    FALSE           reduce using rule 91 (tipo -> STRING .)
    CHAR_S          reduce using rule 91 (tipo -> STRING .)
    CADENA          reduce using rule 91 (tipo -> STRING .)
    ID              reduce using rule 91 (tipo -> STRING .)
    IF              reduce using rule 91 (tipo -> STRING .)
    MATCH           reduce using rule 91 (tipo -> STRING .)
    LOOP            reduce using rule 91 (tipo -> STRING .)


state 34

    (92) tipo -> CHAR .

    PAR_D           reduce using rule 92 (tipo -> CHAR .)
    COMA            reduce using rule 92 (tipo -> CHAR .)
    LLV_D           reduce using rule 92 (tipo -> CHAR .)
    LLV_I           reduce using rule 92 (tipo -> CHAR .)
    IGUAL           reduce using rule 92 (tipo -> CHAR .)
    MAS             reduce using rule 92 (tipo -> CHAR .)
    MENOS           reduce using rule 92 (tipo -> CHAR .)
    MULTI           reduce using rule 92 (tipo -> CHAR .)
    DIV             reduce using rule 92 (tipo -> CHAR .)
    MODULO          reduce using rule 92 (tipo -> CHAR .)
    PUNTO           reduce using rule 92 (tipo -> CHAR .)
    MAYOR           reduce using rule 92 (tipo -> CHAR .)
    MENOR           reduce using rule 92 (tipo -> CHAR .)
    MAYOR_I         reduce using rule 92 (tipo -> CHAR .)
    MENOR_I         reduce using rule 92 (tipo -> CHAR .)
    D_IGUAL         reduce using rule 92 (tipo -> CHAR .)
    NO_IGUAL        reduce using rule 92 (tipo -> CHAR .)
    OR              reduce using rule 92 (tipo -> CHAR .)
    AND             reduce using rule 92 (tipo -> CHAR .)
    AS              reduce using rule 92 (tipo -> CHAR .)
    PUNTOCOMA       reduce using rule 92 (tipo -> CHAR .)
    BARRA           reduce using rule 92 (tipo -> CHAR .)
    GUION_B         reduce using rule 92 (tipo -> CHAR .)
    INT             reduce using rule 92 (tipo -> CHAR .)
    FLOAT           reduce using rule 92 (tipo -> CHAR .)
    NOT             reduce using rule 92 (tipo -> CHAR .)
    PAR_I           reduce using rule 92 (tipo -> CHAR .)
    ENTERO          reduce using rule 92 (tipo -> CHAR .)
    DECIMAL         reduce using rule 92 (tipo -> CHAR .)
    TRUE            reduce using rule 92 (tipo -> CHAR .)
    FALSE           reduce using rule 92 (tipo -> CHAR .)
    CHAR_S          reduce using rule 92 (tipo -> CHAR .)
    CADENA          reduce using rule 92 (tipo -> CHAR .)
    ID              reduce using rule 92 (tipo -> CHAR .)
    IF              reduce using rule 92 (tipo -> CHAR .)
    MATCH           reduce using rule 92 (tipo -> CHAR .)
    LOOP            reduce using rule 92 (tipo -> CHAR .)


state 35

    (93) tipo -> VOID .

    PAR_D           reduce using rule 93 (tipo -> VOID .)
    COMA            reduce using rule 93 (tipo -> VOID .)
    LLV_D           reduce using rule 93 (tipo -> VOID .)
    LLV_I           reduce using rule 93 (tipo -> VOID .)
    IGUAL           reduce using rule 93 (tipo -> VOID .)
    MAS             reduce using rule 93 (tipo -> VOID .)
    MENOS           reduce using rule 93 (tipo -> VOID .)
    MULTI           reduce using rule 93 (tipo -> VOID .)
    DIV             reduce using rule 93 (tipo -> VOID .)
    MODULO          reduce using rule 93 (tipo -> VOID .)
    PUNTO           reduce using rule 93 (tipo -> VOID .)
    MAYOR           reduce using rule 93 (tipo -> VOID .)
    MENOR           reduce using rule 93 (tipo -> VOID .)
    MAYOR_I         reduce using rule 93 (tipo -> VOID .)
    MENOR_I         reduce using rule 93 (tipo -> VOID .)
    D_IGUAL         reduce using rule 93 (tipo -> VOID .)
    NO_IGUAL        reduce using rule 93 (tipo -> VOID .)
    OR              reduce using rule 93 (tipo -> VOID .)
    AND             reduce using rule 93 (tipo -> VOID .)
    AS              reduce using rule 93 (tipo -> VOID .)
    PUNTOCOMA       reduce using rule 93 (tipo -> VOID .)
    BARRA           reduce using rule 93 (tipo -> VOID .)
    GUION_B         reduce using rule 93 (tipo -> VOID .)
    INT             reduce using rule 93 (tipo -> VOID .)
    FLOAT           reduce using rule 93 (tipo -> VOID .)
    NOT             reduce using rule 93 (tipo -> VOID .)
    PAR_I           reduce using rule 93 (tipo -> VOID .)
    ENTERO          reduce using rule 93 (tipo -> VOID .)
    DECIMAL         reduce using rule 93 (tipo -> VOID .)
    TRUE            reduce using rule 93 (tipo -> VOID .)
    FALSE           reduce using rule 93 (tipo -> VOID .)
    CHAR_S          reduce using rule 93 (tipo -> VOID .)
    CADENA          reduce using rule 93 (tipo -> VOID .)
    ID              reduce using rule 93 (tipo -> VOID .)
    IF              reduce using rule 93 (tipo -> VOID .)
    MATCH           reduce using rule 93 (tipo -> VOID .)
    LOOP            reduce using rule 93 (tipo -> VOID .)


state 36

    (32) funcion -> FN ID PAR_I lista_param PAR_D statement .

    FN              reduce using rule 32 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    STRUCT          reduce using rule 32 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    $end            reduce using rule 32 (funcion -> FN ID PAR_I lista_param PAR_D statement .)


state 37

    (34) funcion -> FN ID PAR_I lista_param PAR_D MENOS . MAYOR tipo statement

    MAYOR           shift and go to state 69


state 38

    (36) lista_param -> lista_param COMA ID . D_PUNTO tipo

    D_PUNTO         shift and go to state 70


state 39

    (35) funcion -> FN ID PAR_I PAR_D MENOS MAYOR . tipo statement
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 71

state 40

    (54) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . asignacion PUNTOCOMA
    (5) instruccion -> . if
    (6) instruccion -> . match
    (7) instruccion -> . while
    (8) instruccion -> . loop
    (9) instruccion -> . break PUNTOCOMA
    (10) instruccion -> . continue PUNTOCOMA
    (11) instruccion -> . return PUNTOCOMA
    (12) instruccion -> . print PUNTOCOMA
    (13) instruccion -> . llamada PUNTOCOMA
    (14) instruccion -> . mod_struct PUNTOCOMA
    (82) asignacion -> . LET ID IGUAL expresion
    (83) asignacion -> . LET MUT ID IGUAL expresion
    (84) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (85) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (86) asignacion -> . ID IGUAL expresion
    (50) if -> . IF expresion statement
    (51) if -> . IF expresion statement else
    (59) match -> . MATCH expresion LLV_I case_list LLV_D
    (60) match -> . MATCH expresion LLV_I case_list default LLV_D
    (76) while -> . WHILE expresion statement
    (80) loop -> . LOOP statement
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) continue -> . CONTINUE
    (38) return -> . RETURN expresion
    (39) return -> . RETURN
    (28) print -> . PRINT NOT PAR_I expresion PAR_D
    (29) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (122) mod_struct -> . acceso_struct IGUAL expresion
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    LLV_D           shift and go to state 72
    LET             shift and go to state 54
    ID              shift and go to state 55
    IF              shift and go to state 56
    MATCH           shift and go to state 57
    WHILE           shift and go to state 58
    LOOP            shift and go to state 59
    BREAK           shift and go to state 60
    CONTINUE        shift and go to state 61
    RETURN          shift and go to state 62
    PRINT           shift and go to state 63

    instruccion                    shift and go to state 73
    asignacion                     shift and go to state 43
    if                             shift and go to state 44
    match                          shift and go to state 45
    while                          shift and go to state 46
    loop                           shift and go to state 47
    break                          shift and go to state 48
    continue                       shift and go to state 49
    return                         shift and go to state 50
    print                          shift and go to state 51
    llamada                        shift and go to state 52
    mod_struct                     shift and go to state 53
    acceso_struct                  shift and go to state 64

state 41

    (55) statement -> LLV_I LLV_D .

    FN              reduce using rule 55 (statement -> LLV_I LLV_D .)
    STRUCT          reduce using rule 55 (statement -> LLV_I LLV_D .)
    $end            reduce using rule 55 (statement -> LLV_I LLV_D .)
    LLV_D           reduce using rule 55 (statement -> LLV_I LLV_D .)
    LET             reduce using rule 55 (statement -> LLV_I LLV_D .)
    ID              reduce using rule 55 (statement -> LLV_I LLV_D .)
    IF              reduce using rule 55 (statement -> LLV_I LLV_D .)
    MATCH           reduce using rule 55 (statement -> LLV_I LLV_D .)
    WHILE           reduce using rule 55 (statement -> LLV_I LLV_D .)
    LOOP            reduce using rule 55 (statement -> LLV_I LLV_D .)
    BREAK           reduce using rule 55 (statement -> LLV_I LLV_D .)
    CONTINUE        reduce using rule 55 (statement -> LLV_I LLV_D .)
    RETURN          reduce using rule 55 (statement -> LLV_I LLV_D .)
    PRINT           reduce using rule 55 (statement -> LLV_I LLV_D .)
    COMA            reduce using rule 55 (statement -> LLV_I LLV_D .)
    ELSE            reduce using rule 55 (statement -> LLV_I LLV_D .)
    MAS             reduce using rule 55 (statement -> LLV_I LLV_D .)
    MENOS           reduce using rule 55 (statement -> LLV_I LLV_D .)
    MULTI           reduce using rule 55 (statement -> LLV_I LLV_D .)
    DIV             reduce using rule 55 (statement -> LLV_I LLV_D .)
    MODULO          reduce using rule 55 (statement -> LLV_I LLV_D .)
    PUNTO           reduce using rule 55 (statement -> LLV_I LLV_D .)
    MAYOR           reduce using rule 55 (statement -> LLV_I LLV_D .)
    MENOR           reduce using rule 55 (statement -> LLV_I LLV_D .)
    MAYOR_I         reduce using rule 55 (statement -> LLV_I LLV_D .)
    MENOR_I         reduce using rule 55 (statement -> LLV_I LLV_D .)
    D_IGUAL         reduce using rule 55 (statement -> LLV_I LLV_D .)
    NO_IGUAL        reduce using rule 55 (statement -> LLV_I LLV_D .)
    OR              reduce using rule 55 (statement -> LLV_I LLV_D .)
    AND             reduce using rule 55 (statement -> LLV_I LLV_D .)
    AS              reduce using rule 55 (statement -> LLV_I LLV_D .)
    LLV_I           reduce using rule 55 (statement -> LLV_I LLV_D .)
    PUNTOCOMA       reduce using rule 55 (statement -> LLV_I LLV_D .)
    PAR_D           reduce using rule 55 (statement -> LLV_I LLV_D .)
    IGUAL           reduce using rule 55 (statement -> LLV_I LLV_D .)
    BARRA           reduce using rule 55 (statement -> LLV_I LLV_D .)
    GUION_B         reduce using rule 55 (statement -> LLV_I LLV_D .)
    INT             reduce using rule 55 (statement -> LLV_I LLV_D .)
    FLOAT           reduce using rule 55 (statement -> LLV_I LLV_D .)
    NOT             reduce using rule 55 (statement -> LLV_I LLV_D .)
    PAR_I           reduce using rule 55 (statement -> LLV_I LLV_D .)
    ENTERO          reduce using rule 55 (statement -> LLV_I LLV_D .)
    DECIMAL         reduce using rule 55 (statement -> LLV_I LLV_D .)
    TRUE            reduce using rule 55 (statement -> LLV_I LLV_D .)
    FALSE           reduce using rule 55 (statement -> LLV_I LLV_D .)
    CHAR_S          reduce using rule 55 (statement -> LLV_I LLV_D .)
    CADENA          reduce using rule 55 (statement -> LLV_I LLV_D .)


state 42

    (3) instrucciones -> instruccion .

    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)


state 43

    (4) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 74


state 44

    (5) instruccion -> if .

    LLV_D           reduce using rule 5 (instruccion -> if .)
    LET             reduce using rule 5 (instruccion -> if .)
    ID              reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    MATCH           reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    LOOP            reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    CONTINUE        reduce using rule 5 (instruccion -> if .)
    RETURN          reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)


state 45

    (6) instruccion -> match .

    LLV_D           reduce using rule 6 (instruccion -> match .)
    LET             reduce using rule 6 (instruccion -> match .)
    ID              reduce using rule 6 (instruccion -> match .)
    IF              reduce using rule 6 (instruccion -> match .)
    MATCH           reduce using rule 6 (instruccion -> match .)
    WHILE           reduce using rule 6 (instruccion -> match .)
    LOOP            reduce using rule 6 (instruccion -> match .)
    BREAK           reduce using rule 6 (instruccion -> match .)
    CONTINUE        reduce using rule 6 (instruccion -> match .)
    RETURN          reduce using rule 6 (instruccion -> match .)
    PRINT           reduce using rule 6 (instruccion -> match .)


state 46

    (7) instruccion -> while .

    LLV_D           reduce using rule 7 (instruccion -> while .)
    LET             reduce using rule 7 (instruccion -> while .)
    ID              reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    MATCH           reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    LOOP            reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    CONTINUE        reduce using rule 7 (instruccion -> while .)
    RETURN          reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)


state 47

    (8) instruccion -> loop .

    LLV_D           reduce using rule 8 (instruccion -> loop .)
    LET             reduce using rule 8 (instruccion -> loop .)
    ID              reduce using rule 8 (instruccion -> loop .)
    IF              reduce using rule 8 (instruccion -> loop .)
    MATCH           reduce using rule 8 (instruccion -> loop .)
    WHILE           reduce using rule 8 (instruccion -> loop .)
    LOOP            reduce using rule 8 (instruccion -> loop .)
    BREAK           reduce using rule 8 (instruccion -> loop .)
    CONTINUE        reduce using rule 8 (instruccion -> loop .)
    RETURN          reduce using rule 8 (instruccion -> loop .)
    PRINT           reduce using rule 8 (instruccion -> loop .)


state 48

    (9) instruccion -> break . PUNTOCOMA

    PUNTOCOMA       shift and go to state 75


state 49

    (10) instruccion -> continue . PUNTOCOMA

    PUNTOCOMA       shift and go to state 76


state 50

    (11) instruccion -> return . PUNTOCOMA

    PUNTOCOMA       shift and go to state 77


state 51

    (12) instruccion -> print . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 52

    (13) instruccion -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 79


state 53

    (14) instruccion -> mod_struct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 54

    (82) asignacion -> LET . ID IGUAL expresion
    (83) asignacion -> LET . MUT ID IGUAL expresion
    (84) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (85) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 81
    MUT             shift and go to state 82


state 55

    (86) asignacion -> ID . IGUAL expresion
    (40) llamada -> ID . PAR_I PAR_D
    (41) llamada -> ID . PAR_I exp_list PAR_D
    (125) acceso_struct -> ID . PUNTO ID

    IGUAL           shift and go to state 83
    PAR_I           shift and go to state 84
    PUNTO           shift and go to state 85


state 56

    (50) if -> IF . expresion statement
    (51) if -> IF . expresion statement else
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 87
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 57

    (59) match -> MATCH . expresion LLV_I case_list LLV_D
    (60) match -> MATCH . expresion LLV_I case_list default LLV_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 109
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 58

    (76) while -> WHILE . expresion statement
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 110
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 59

    (80) loop -> LOOP . statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 24

    statement                      shift and go to state 111

state 60

    (77) break -> BREAK .
    (78) break -> BREAK . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    PUNTOCOMA       reduce using rule 77 (break -> BREAK .)
    COMA            reduce using rule 77 (break -> BREAK .)
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 112
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 61

    (79) continue -> CONTINUE .

    PUNTOCOMA       reduce using rule 79 (continue -> CONTINUE .)
    COMA            reduce using rule 79 (continue -> CONTINUE .)


state 62

    (38) return -> RETURN . expresion
    (39) return -> RETURN .
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    PUNTOCOMA       reduce using rule 39 (return -> RETURN .)
    COMA            reduce using rule 39 (return -> RETURN .)
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 113
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 63

    (28) print -> PRINT . NOT PAR_I expresion PAR_D
    (29) print -> PRINT . NOT PAR_I CADENA COMA exp_list PAR_D

    NOT             shift and go to state 114


state 64

    (122) mod_struct -> acceso_struct . IGUAL expresion
    (124) acceso_struct -> acceso_struct . PUNTO ID

    IGUAL           shift and go to state 115
    PUNTO           shift and go to state 116


state 65

    (46) campo -> ID D_PUNTO ID .

    LLV_D           reduce using rule 46 (campo -> ID D_PUNTO ID .)
    COMA            reduce using rule 46 (campo -> ID D_PUNTO ID .)


state 66

    (45) campo -> ID D_PUNTO tipo .

    LLV_D           reduce using rule 45 (campo -> ID D_PUNTO tipo .)
    COMA            reduce using rule 45 (campo -> ID D_PUNTO tipo .)


state 67

    (43) lista_campos -> lista_campos COMA campo .

    LLV_D           reduce using rule 43 (lista_campos -> lista_campos COMA campo .)
    COMA            reduce using rule 43 (lista_campos -> lista_campos COMA campo .)


state 68

    (90) tipo -> AMP STR .

    PAR_D           reduce using rule 90 (tipo -> AMP STR .)
    COMA            reduce using rule 90 (tipo -> AMP STR .)
    LLV_D           reduce using rule 90 (tipo -> AMP STR .)
    LLV_I           reduce using rule 90 (tipo -> AMP STR .)
    IGUAL           reduce using rule 90 (tipo -> AMP STR .)
    MAS             reduce using rule 90 (tipo -> AMP STR .)
    MENOS           reduce using rule 90 (tipo -> AMP STR .)
    MULTI           reduce using rule 90 (tipo -> AMP STR .)
    DIV             reduce using rule 90 (tipo -> AMP STR .)
    MODULO          reduce using rule 90 (tipo -> AMP STR .)
    PUNTO           reduce using rule 90 (tipo -> AMP STR .)
    MAYOR           reduce using rule 90 (tipo -> AMP STR .)
    MENOR           reduce using rule 90 (tipo -> AMP STR .)
    MAYOR_I         reduce using rule 90 (tipo -> AMP STR .)
    MENOR_I         reduce using rule 90 (tipo -> AMP STR .)
    D_IGUAL         reduce using rule 90 (tipo -> AMP STR .)
    NO_IGUAL        reduce using rule 90 (tipo -> AMP STR .)
    OR              reduce using rule 90 (tipo -> AMP STR .)
    AND             reduce using rule 90 (tipo -> AMP STR .)
    AS              reduce using rule 90 (tipo -> AMP STR .)
    PUNTOCOMA       reduce using rule 90 (tipo -> AMP STR .)
    BARRA           reduce using rule 90 (tipo -> AMP STR .)
    GUION_B         reduce using rule 90 (tipo -> AMP STR .)
    INT             reduce using rule 90 (tipo -> AMP STR .)
    FLOAT           reduce using rule 90 (tipo -> AMP STR .)
    NOT             reduce using rule 90 (tipo -> AMP STR .)
    PAR_I           reduce using rule 90 (tipo -> AMP STR .)
    ENTERO          reduce using rule 90 (tipo -> AMP STR .)
    DECIMAL         reduce using rule 90 (tipo -> AMP STR .)
    TRUE            reduce using rule 90 (tipo -> AMP STR .)
    FALSE           reduce using rule 90 (tipo -> AMP STR .)
    CHAR_S          reduce using rule 90 (tipo -> AMP STR .)
    CADENA          reduce using rule 90 (tipo -> AMP STR .)
    ID              reduce using rule 90 (tipo -> AMP STR .)
    IF              reduce using rule 90 (tipo -> AMP STR .)
    MATCH           reduce using rule 90 (tipo -> AMP STR .)
    LOOP            reduce using rule 90 (tipo -> AMP STR .)


state 69

    (34) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR . tipo statement
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 117

state 70

    (36) lista_param -> lista_param COMA ID D_PUNTO . tipo
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 118

state 71

    (35) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo . statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 24

    statement                      shift and go to state 119

state 72

    (54) statement -> LLV_I instrucciones LLV_D .

    FN              reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    STRUCT          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    WHILE           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    LOOP            reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    BREAK           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    CONTINUE        reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    RETURN          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    PRINT           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    ELSE            reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MAS             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MULTI           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    DIV             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MODULO          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    PUNTO           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MENOR           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR_I         reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    MENOR_I         reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    D_IGUAL         reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    NO_IGUAL        reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    OR              reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    AND             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    AS              reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    LLV_I           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    PUNTOCOMA       reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    PAR_D           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    IGUAL           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    BARRA           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    CHAR_S          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)
    CADENA          reduce using rule 54 (statement -> LLV_I instrucciones LLV_D .)


state 73

    (2) instrucciones -> instrucciones instruccion .

    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 74

    (4) instruccion -> asignacion PUNTOCOMA .

    LLV_D           reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    LOOP            reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    RETURN          reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)
    PRINT           reduce using rule 4 (instruccion -> asignacion PUNTOCOMA .)


state 75

    (9) instruccion -> break PUNTOCOMA .

    LLV_D           reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    LET             reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    ID              reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    IF              reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    MATCH           reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    WHILE           reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    LOOP            reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    BREAK           reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    RETURN          reduce using rule 9 (instruccion -> break PUNTOCOMA .)
    PRINT           reduce using rule 9 (instruccion -> break PUNTOCOMA .)


state 76

    (10) instruccion -> continue PUNTOCOMA .

    LLV_D           reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    LET             reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    ID              reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    IF              reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    MATCH           reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    WHILE           reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    LOOP            reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    BREAK           reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    RETURN          reduce using rule 10 (instruccion -> continue PUNTOCOMA .)
    PRINT           reduce using rule 10 (instruccion -> continue PUNTOCOMA .)


state 77

    (11) instruccion -> return PUNTOCOMA .

    LLV_D           reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    LET             reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    ID              reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    IF              reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    MATCH           reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    WHILE           reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    LOOP            reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    BREAK           reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    CONTINUE        reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    RETURN          reduce using rule 11 (instruccion -> return PUNTOCOMA .)
    PRINT           reduce using rule 11 (instruccion -> return PUNTOCOMA .)


state 78

    (12) instruccion -> print PUNTOCOMA .

    LLV_D           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    LET             reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    MATCH           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    LOOP            reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    RETURN          reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    PRINT           reduce using rule 12 (instruccion -> print PUNTOCOMA .)


state 79

    (13) instruccion -> llamada PUNTOCOMA .

    LLV_D           reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    LET             reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    ID              reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    IF              reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    MATCH           reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    WHILE           reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    LOOP            reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    BREAK           reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    RETURN          reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)
    PRINT           reduce using rule 13 (instruccion -> llamada PUNTOCOMA .)


state 80

    (14) instruccion -> mod_struct PUNTOCOMA .

    LLV_D           reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    LET             reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    ID              reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    IF              reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    MATCH           reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    WHILE           reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    LOOP            reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    BREAK           reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    RETURN          reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)
    PRINT           reduce using rule 14 (instruccion -> mod_struct PUNTOCOMA .)


state 81

    (82) asignacion -> LET ID . IGUAL expresion
    (84) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 120
    D_PUNTO         shift and go to state 121


state 82

    (83) asignacion -> LET MUT . ID IGUAL expresion
    (85) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 122


state 83

    (86) asignacion -> ID IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 123
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 84

    (40) llamada -> ID PAR_I . PAR_D
    (41) llamada -> ID PAR_I . exp_list PAR_D
    (30) exp_list -> . exp_list COMA expresion
    (31) exp_list -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    PAR_D           shift and go to state 124
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    exp_list                       shift and go to state 125
    expresion                      shift and go to state 126
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 85

    (125) acceso_struct -> ID PUNTO . ID

    ID              shift and go to state 127


state 86

    (56) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 128
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 87

    (50) if -> IF expresion . statement
    (51) if -> IF expresion . statement else
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144
    LLV_I           shift and go to state 24

    statement                      shift and go to state 129

state 88

    (99) expresion -> MENOS . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 145
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 89

    (100) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 146


state 90

    (113) expresion -> PAR_I . expresion PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 147
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 91

    (101) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 148


state 92

    (112) expresion -> NOT . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 149
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 93

    (114) expresion -> ENTERO .

    MAS             reduce using rule 114 (expresion -> ENTERO .)
    MENOS           reduce using rule 114 (expresion -> ENTERO .)
    MULTI           reduce using rule 114 (expresion -> ENTERO .)
    DIV             reduce using rule 114 (expresion -> ENTERO .)
    MODULO          reduce using rule 114 (expresion -> ENTERO .)
    PUNTO           reduce using rule 114 (expresion -> ENTERO .)
    MAYOR           reduce using rule 114 (expresion -> ENTERO .)
    MENOR           reduce using rule 114 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 114 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 114 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 114 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 114 (expresion -> ENTERO .)
    OR              reduce using rule 114 (expresion -> ENTERO .)
    AND             reduce using rule 114 (expresion -> ENTERO .)
    AS              reduce using rule 114 (expresion -> ENTERO .)
    LLV_I           reduce using rule 114 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 114 (expresion -> ENTERO .)
    COMA            reduce using rule 114 (expresion -> ENTERO .)
    PAR_D           reduce using rule 114 (expresion -> ENTERO .)
    IGUAL           reduce using rule 114 (expresion -> ENTERO .)
    LLV_D           reduce using rule 114 (expresion -> ENTERO .)
    BARRA           reduce using rule 114 (expresion -> ENTERO .)
    GUION_B         reduce using rule 114 (expresion -> ENTERO .)
    INT             reduce using rule 114 (expresion -> ENTERO .)
    FLOAT           reduce using rule 114 (expresion -> ENTERO .)
    NOT             reduce using rule 114 (expresion -> ENTERO .)
    PAR_I           reduce using rule 114 (expresion -> ENTERO .)
    ENTERO          reduce using rule 114 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 114 (expresion -> ENTERO .)
    TRUE            reduce using rule 114 (expresion -> ENTERO .)
    FALSE           reduce using rule 114 (expresion -> ENTERO .)
    CHAR_S          reduce using rule 114 (expresion -> ENTERO .)
    CADENA          reduce using rule 114 (expresion -> ENTERO .)
    ID              reduce using rule 114 (expresion -> ENTERO .)
    IF              reduce using rule 114 (expresion -> ENTERO .)
    MATCH           reduce using rule 114 (expresion -> ENTERO .)
    LOOP            reduce using rule 114 (expresion -> ENTERO .)


state 94

    (115) expresion -> DECIMAL .

    MAS             reduce using rule 115 (expresion -> DECIMAL .)
    MENOS           reduce using rule 115 (expresion -> DECIMAL .)
    MULTI           reduce using rule 115 (expresion -> DECIMAL .)
    DIV             reduce using rule 115 (expresion -> DECIMAL .)
    MODULO          reduce using rule 115 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 115 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 115 (expresion -> DECIMAL .)
    MENOR           reduce using rule 115 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 115 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 115 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 115 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 115 (expresion -> DECIMAL .)
    OR              reduce using rule 115 (expresion -> DECIMAL .)
    AND             reduce using rule 115 (expresion -> DECIMAL .)
    AS              reduce using rule 115 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 115 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 115 (expresion -> DECIMAL .)
    COMA            reduce using rule 115 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 115 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 115 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 115 (expresion -> DECIMAL .)
    BARRA           reduce using rule 115 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 115 (expresion -> DECIMAL .)
    INT             reduce using rule 115 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 115 (expresion -> DECIMAL .)
    NOT             reduce using rule 115 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 115 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 115 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 115 (expresion -> DECIMAL .)
    TRUE            reduce using rule 115 (expresion -> DECIMAL .)
    FALSE           reduce using rule 115 (expresion -> DECIMAL .)
    CHAR_S          reduce using rule 115 (expresion -> DECIMAL .)
    CADENA          reduce using rule 115 (expresion -> DECIMAL .)
    ID              reduce using rule 115 (expresion -> DECIMAL .)
    IF              reduce using rule 115 (expresion -> DECIMAL .)
    MATCH           reduce using rule 115 (expresion -> DECIMAL .)
    LOOP            reduce using rule 115 (expresion -> DECIMAL .)


state 95

    (116) expresion -> TRUE .

    MAS             reduce using rule 116 (expresion -> TRUE .)
    MENOS           reduce using rule 116 (expresion -> TRUE .)
    MULTI           reduce using rule 116 (expresion -> TRUE .)
    DIV             reduce using rule 116 (expresion -> TRUE .)
    MODULO          reduce using rule 116 (expresion -> TRUE .)
    PUNTO           reduce using rule 116 (expresion -> TRUE .)
    MAYOR           reduce using rule 116 (expresion -> TRUE .)
    MENOR           reduce using rule 116 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 116 (expresion -> TRUE .)
    MENOR_I         reduce using rule 116 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 116 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 116 (expresion -> TRUE .)
    OR              reduce using rule 116 (expresion -> TRUE .)
    AND             reduce using rule 116 (expresion -> TRUE .)
    AS              reduce using rule 116 (expresion -> TRUE .)
    LLV_I           reduce using rule 116 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 116 (expresion -> TRUE .)
    COMA            reduce using rule 116 (expresion -> TRUE .)
    PAR_D           reduce using rule 116 (expresion -> TRUE .)
    IGUAL           reduce using rule 116 (expresion -> TRUE .)
    LLV_D           reduce using rule 116 (expresion -> TRUE .)
    BARRA           reduce using rule 116 (expresion -> TRUE .)
    GUION_B         reduce using rule 116 (expresion -> TRUE .)
    INT             reduce using rule 116 (expresion -> TRUE .)
    FLOAT           reduce using rule 116 (expresion -> TRUE .)
    NOT             reduce using rule 116 (expresion -> TRUE .)
    PAR_I           reduce using rule 116 (expresion -> TRUE .)
    ENTERO          reduce using rule 116 (expresion -> TRUE .)
    DECIMAL         reduce using rule 116 (expresion -> TRUE .)
    TRUE            reduce using rule 116 (expresion -> TRUE .)
    FALSE           reduce using rule 116 (expresion -> TRUE .)
    CHAR_S          reduce using rule 116 (expresion -> TRUE .)
    CADENA          reduce using rule 116 (expresion -> TRUE .)
    ID              reduce using rule 116 (expresion -> TRUE .)
    IF              reduce using rule 116 (expresion -> TRUE .)
    MATCH           reduce using rule 116 (expresion -> TRUE .)
    LOOP            reduce using rule 116 (expresion -> TRUE .)


state 96

    (117) expresion -> FALSE .

    MAS             reduce using rule 117 (expresion -> FALSE .)
    MENOS           reduce using rule 117 (expresion -> FALSE .)
    MULTI           reduce using rule 117 (expresion -> FALSE .)
    DIV             reduce using rule 117 (expresion -> FALSE .)
    MODULO          reduce using rule 117 (expresion -> FALSE .)
    PUNTO           reduce using rule 117 (expresion -> FALSE .)
    MAYOR           reduce using rule 117 (expresion -> FALSE .)
    MENOR           reduce using rule 117 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 117 (expresion -> FALSE .)
    MENOR_I         reduce using rule 117 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 117 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 117 (expresion -> FALSE .)
    OR              reduce using rule 117 (expresion -> FALSE .)
    AND             reduce using rule 117 (expresion -> FALSE .)
    AS              reduce using rule 117 (expresion -> FALSE .)
    LLV_I           reduce using rule 117 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 117 (expresion -> FALSE .)
    COMA            reduce using rule 117 (expresion -> FALSE .)
    PAR_D           reduce using rule 117 (expresion -> FALSE .)
    IGUAL           reduce using rule 117 (expresion -> FALSE .)
    LLV_D           reduce using rule 117 (expresion -> FALSE .)
    BARRA           reduce using rule 117 (expresion -> FALSE .)
    GUION_B         reduce using rule 117 (expresion -> FALSE .)
    INT             reduce using rule 117 (expresion -> FALSE .)
    FLOAT           reduce using rule 117 (expresion -> FALSE .)
    NOT             reduce using rule 117 (expresion -> FALSE .)
    PAR_I           reduce using rule 117 (expresion -> FALSE .)
    ENTERO          reduce using rule 117 (expresion -> FALSE .)
    DECIMAL         reduce using rule 117 (expresion -> FALSE .)
    TRUE            reduce using rule 117 (expresion -> FALSE .)
    FALSE           reduce using rule 117 (expresion -> FALSE .)
    CHAR_S          reduce using rule 117 (expresion -> FALSE .)
    CADENA          reduce using rule 117 (expresion -> FALSE .)
    ID              reduce using rule 117 (expresion -> FALSE .)
    IF              reduce using rule 117 (expresion -> FALSE .)
    MATCH           reduce using rule 117 (expresion -> FALSE .)
    LOOP            reduce using rule 117 (expresion -> FALSE .)


state 97

    (118) expresion -> CHAR_S .

    MAS             reduce using rule 118 (expresion -> CHAR_S .)
    MENOS           reduce using rule 118 (expresion -> CHAR_S .)
    MULTI           reduce using rule 118 (expresion -> CHAR_S .)
    DIV             reduce using rule 118 (expresion -> CHAR_S .)
    MODULO          reduce using rule 118 (expresion -> CHAR_S .)
    PUNTO           reduce using rule 118 (expresion -> CHAR_S .)
    MAYOR           reduce using rule 118 (expresion -> CHAR_S .)
    MENOR           reduce using rule 118 (expresion -> CHAR_S .)
    MAYOR_I         reduce using rule 118 (expresion -> CHAR_S .)
    MENOR_I         reduce using rule 118 (expresion -> CHAR_S .)
    D_IGUAL         reduce using rule 118 (expresion -> CHAR_S .)
    NO_IGUAL        reduce using rule 118 (expresion -> CHAR_S .)
    OR              reduce using rule 118 (expresion -> CHAR_S .)
    AND             reduce using rule 118 (expresion -> CHAR_S .)
    AS              reduce using rule 118 (expresion -> CHAR_S .)
    LLV_I           reduce using rule 118 (expresion -> CHAR_S .)
    PUNTOCOMA       reduce using rule 118 (expresion -> CHAR_S .)
    COMA            reduce using rule 118 (expresion -> CHAR_S .)
    PAR_D           reduce using rule 118 (expresion -> CHAR_S .)
    IGUAL           reduce using rule 118 (expresion -> CHAR_S .)
    LLV_D           reduce using rule 118 (expresion -> CHAR_S .)
    BARRA           reduce using rule 118 (expresion -> CHAR_S .)
    GUION_B         reduce using rule 118 (expresion -> CHAR_S .)
    INT             reduce using rule 118 (expresion -> CHAR_S .)
    FLOAT           reduce using rule 118 (expresion -> CHAR_S .)
    NOT             reduce using rule 118 (expresion -> CHAR_S .)
    PAR_I           reduce using rule 118 (expresion -> CHAR_S .)
    ENTERO          reduce using rule 118 (expresion -> CHAR_S .)
    DECIMAL         reduce using rule 118 (expresion -> CHAR_S .)
    TRUE            reduce using rule 118 (expresion -> CHAR_S .)
    FALSE           reduce using rule 118 (expresion -> CHAR_S .)
    CHAR_S          reduce using rule 118 (expresion -> CHAR_S .)
    CADENA          reduce using rule 118 (expresion -> CHAR_S .)
    ID              reduce using rule 118 (expresion -> CHAR_S .)
    IF              reduce using rule 118 (expresion -> CHAR_S .)
    MATCH           reduce using rule 118 (expresion -> CHAR_S .)
    LOOP            reduce using rule 118 (expresion -> CHAR_S .)


state 98

    (119) expresion -> CADENA .

    MAS             reduce using rule 119 (expresion -> CADENA .)
    MENOS           reduce using rule 119 (expresion -> CADENA .)
    MULTI           reduce using rule 119 (expresion -> CADENA .)
    DIV             reduce using rule 119 (expresion -> CADENA .)
    MODULO          reduce using rule 119 (expresion -> CADENA .)
    PUNTO           reduce using rule 119 (expresion -> CADENA .)
    MAYOR           reduce using rule 119 (expresion -> CADENA .)
    MENOR           reduce using rule 119 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 119 (expresion -> CADENA .)
    MENOR_I         reduce using rule 119 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 119 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 119 (expresion -> CADENA .)
    OR              reduce using rule 119 (expresion -> CADENA .)
    AND             reduce using rule 119 (expresion -> CADENA .)
    AS              reduce using rule 119 (expresion -> CADENA .)
    LLV_I           reduce using rule 119 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 119 (expresion -> CADENA .)
    COMA            reduce using rule 119 (expresion -> CADENA .)
    PAR_D           reduce using rule 119 (expresion -> CADENA .)
    IGUAL           reduce using rule 119 (expresion -> CADENA .)
    LLV_D           reduce using rule 119 (expresion -> CADENA .)
    BARRA           reduce using rule 119 (expresion -> CADENA .)
    GUION_B         reduce using rule 119 (expresion -> CADENA .)
    INT             reduce using rule 119 (expresion -> CADENA .)
    FLOAT           reduce using rule 119 (expresion -> CADENA .)
    NOT             reduce using rule 119 (expresion -> CADENA .)
    PAR_I           reduce using rule 119 (expresion -> CADENA .)
    ENTERO          reduce using rule 119 (expresion -> CADENA .)
    DECIMAL         reduce using rule 119 (expresion -> CADENA .)
    TRUE            reduce using rule 119 (expresion -> CADENA .)
    FALSE           reduce using rule 119 (expresion -> CADENA .)
    CHAR_S          reduce using rule 119 (expresion -> CADENA .)
    CADENA          reduce using rule 119 (expresion -> CADENA .)
    ID              reduce using rule 119 (expresion -> CADENA .)
    IF              reduce using rule 119 (expresion -> CADENA .)
    MATCH           reduce using rule 119 (expresion -> CADENA .)
    LOOP            reduce using rule 119 (expresion -> CADENA .)


state 99

    (120) expresion -> ID .
    (40) llamada -> ID . PAR_I PAR_D
    (41) llamada -> ID . PAR_I exp_list PAR_D
    (47) instancia -> ID . LLV_I lista_atributo LLV_D
    (125) acceso_struct -> ID . PUNTO ID

  ! shift/reduce conflict for PAR_I resolved as shift
  ! shift/reduce conflict for LLV_I resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 120 (expresion -> ID .)
    MENOS           reduce using rule 120 (expresion -> ID .)
    MULTI           reduce using rule 120 (expresion -> ID .)
    DIV             reduce using rule 120 (expresion -> ID .)
    MODULO          reduce using rule 120 (expresion -> ID .)
    MAYOR           reduce using rule 120 (expresion -> ID .)
    MENOR           reduce using rule 120 (expresion -> ID .)
    MAYOR_I         reduce using rule 120 (expresion -> ID .)
    MENOR_I         reduce using rule 120 (expresion -> ID .)
    D_IGUAL         reduce using rule 120 (expresion -> ID .)
    NO_IGUAL        reduce using rule 120 (expresion -> ID .)
    OR              reduce using rule 120 (expresion -> ID .)
    AND             reduce using rule 120 (expresion -> ID .)
    AS              reduce using rule 120 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 120 (expresion -> ID .)
    COMA            reduce using rule 120 (expresion -> ID .)
    PAR_D           reduce using rule 120 (expresion -> ID .)
    IGUAL           reduce using rule 120 (expresion -> ID .)
    LLV_D           reduce using rule 120 (expresion -> ID .)
    BARRA           reduce using rule 120 (expresion -> ID .)
    GUION_B         reduce using rule 120 (expresion -> ID .)
    INT             reduce using rule 120 (expresion -> ID .)
    FLOAT           reduce using rule 120 (expresion -> ID .)
    NOT             reduce using rule 120 (expresion -> ID .)
    ENTERO          reduce using rule 120 (expresion -> ID .)
    DECIMAL         reduce using rule 120 (expresion -> ID .)
    TRUE            reduce using rule 120 (expresion -> ID .)
    FALSE           reduce using rule 120 (expresion -> ID .)
    CHAR_S          reduce using rule 120 (expresion -> ID .)
    CADENA          reduce using rule 120 (expresion -> ID .)
    ID              reduce using rule 120 (expresion -> ID .)
    IF              reduce using rule 120 (expresion -> ID .)
    MATCH           reduce using rule 120 (expresion -> ID .)
    LOOP            reduce using rule 120 (expresion -> ID .)
    PAR_I           shift and go to state 84
    LLV_I           shift and go to state 150
    PUNTO           shift and go to state 85

  ! PUNTO           [ reduce using rule 120 (expresion -> ID .) ]
  ! LLV_I           [ reduce using rule 120 (expresion -> ID .) ]
  ! PAR_I           [ reduce using rule 120 (expresion -> ID .) ]


state 100

    (127) expresion -> exp_if .

    MAS             reduce using rule 127 (expresion -> exp_if .)
    MENOS           reduce using rule 127 (expresion -> exp_if .)
    MULTI           reduce using rule 127 (expresion -> exp_if .)
    DIV             reduce using rule 127 (expresion -> exp_if .)
    MODULO          reduce using rule 127 (expresion -> exp_if .)
    PUNTO           reduce using rule 127 (expresion -> exp_if .)
    MAYOR           reduce using rule 127 (expresion -> exp_if .)
    MENOR           reduce using rule 127 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 127 (expresion -> exp_if .)
    MENOR_I         reduce using rule 127 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 127 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 127 (expresion -> exp_if .)
    OR              reduce using rule 127 (expresion -> exp_if .)
    AND             reduce using rule 127 (expresion -> exp_if .)
    AS              reduce using rule 127 (expresion -> exp_if .)
    LLV_I           reduce using rule 127 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 127 (expresion -> exp_if .)
    COMA            reduce using rule 127 (expresion -> exp_if .)
    PAR_D           reduce using rule 127 (expresion -> exp_if .)
    IGUAL           reduce using rule 127 (expresion -> exp_if .)
    LLV_D           reduce using rule 127 (expresion -> exp_if .)
    BARRA           reduce using rule 127 (expresion -> exp_if .)
    GUION_B         reduce using rule 127 (expresion -> exp_if .)
    INT             reduce using rule 127 (expresion -> exp_if .)
    FLOAT           reduce using rule 127 (expresion -> exp_if .)
    NOT             reduce using rule 127 (expresion -> exp_if .)
    PAR_I           reduce using rule 127 (expresion -> exp_if .)
    ENTERO          reduce using rule 127 (expresion -> exp_if .)
    DECIMAL         reduce using rule 127 (expresion -> exp_if .)
    TRUE            reduce using rule 127 (expresion -> exp_if .)
    FALSE           reduce using rule 127 (expresion -> exp_if .)
    CHAR_S          reduce using rule 127 (expresion -> exp_if .)
    CADENA          reduce using rule 127 (expresion -> exp_if .)
    ID              reduce using rule 127 (expresion -> exp_if .)
    IF              reduce using rule 127 (expresion -> exp_if .)
    MATCH           reduce using rule 127 (expresion -> exp_if .)
    LOOP            reduce using rule 127 (expresion -> exp_if .)


state 101

    (128) expresion -> match_exp .

    MAS             reduce using rule 128 (expresion -> match_exp .)
    MENOS           reduce using rule 128 (expresion -> match_exp .)
    MULTI           reduce using rule 128 (expresion -> match_exp .)
    DIV             reduce using rule 128 (expresion -> match_exp .)
    MODULO          reduce using rule 128 (expresion -> match_exp .)
    PUNTO           reduce using rule 128 (expresion -> match_exp .)
    MAYOR           reduce using rule 128 (expresion -> match_exp .)
    MENOR           reduce using rule 128 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 128 (expresion -> match_exp .)
    MENOR_I         reduce using rule 128 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 128 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 128 (expresion -> match_exp .)
    OR              reduce using rule 128 (expresion -> match_exp .)
    AND             reduce using rule 128 (expresion -> match_exp .)
    AS              reduce using rule 128 (expresion -> match_exp .)
    LLV_I           reduce using rule 128 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 128 (expresion -> match_exp .)
    COMA            reduce using rule 128 (expresion -> match_exp .)
    PAR_D           reduce using rule 128 (expresion -> match_exp .)
    IGUAL           reduce using rule 128 (expresion -> match_exp .)
    LLV_D           reduce using rule 128 (expresion -> match_exp .)
    BARRA           reduce using rule 128 (expresion -> match_exp .)
    GUION_B         reduce using rule 128 (expresion -> match_exp .)
    INT             reduce using rule 128 (expresion -> match_exp .)
    FLOAT           reduce using rule 128 (expresion -> match_exp .)
    NOT             reduce using rule 128 (expresion -> match_exp .)
    PAR_I           reduce using rule 128 (expresion -> match_exp .)
    ENTERO          reduce using rule 128 (expresion -> match_exp .)
    DECIMAL         reduce using rule 128 (expresion -> match_exp .)
    TRUE            reduce using rule 128 (expresion -> match_exp .)
    FALSE           reduce using rule 128 (expresion -> match_exp .)
    CHAR_S          reduce using rule 128 (expresion -> match_exp .)
    CADENA          reduce using rule 128 (expresion -> match_exp .)
    ID              reduce using rule 128 (expresion -> match_exp .)
    IF              reduce using rule 128 (expresion -> match_exp .)
    MATCH           reduce using rule 128 (expresion -> match_exp .)
    LOOP            reduce using rule 128 (expresion -> match_exp .)


state 102

    (129) expresion -> loop_exp .

    MAS             reduce using rule 129 (expresion -> loop_exp .)
    MENOS           reduce using rule 129 (expresion -> loop_exp .)
    MULTI           reduce using rule 129 (expresion -> loop_exp .)
    DIV             reduce using rule 129 (expresion -> loop_exp .)
    MODULO          reduce using rule 129 (expresion -> loop_exp .)
    PUNTO           reduce using rule 129 (expresion -> loop_exp .)
    MAYOR           reduce using rule 129 (expresion -> loop_exp .)
    MENOR           reduce using rule 129 (expresion -> loop_exp .)
    MAYOR_I         reduce using rule 129 (expresion -> loop_exp .)
    MENOR_I         reduce using rule 129 (expresion -> loop_exp .)
    D_IGUAL         reduce using rule 129 (expresion -> loop_exp .)
    NO_IGUAL        reduce using rule 129 (expresion -> loop_exp .)
    OR              reduce using rule 129 (expresion -> loop_exp .)
    AND             reduce using rule 129 (expresion -> loop_exp .)
    AS              reduce using rule 129 (expresion -> loop_exp .)
    LLV_I           reduce using rule 129 (expresion -> loop_exp .)
    PUNTOCOMA       reduce using rule 129 (expresion -> loop_exp .)
    COMA            reduce using rule 129 (expresion -> loop_exp .)
    PAR_D           reduce using rule 129 (expresion -> loop_exp .)
    IGUAL           reduce using rule 129 (expresion -> loop_exp .)
    LLV_D           reduce using rule 129 (expresion -> loop_exp .)
    BARRA           reduce using rule 129 (expresion -> loop_exp .)
    GUION_B         reduce using rule 129 (expresion -> loop_exp .)
    INT             reduce using rule 129 (expresion -> loop_exp .)
    FLOAT           reduce using rule 129 (expresion -> loop_exp .)
    NOT             reduce using rule 129 (expresion -> loop_exp .)
    PAR_I           reduce using rule 129 (expresion -> loop_exp .)
    ENTERO          reduce using rule 129 (expresion -> loop_exp .)
    DECIMAL         reduce using rule 129 (expresion -> loop_exp .)
    TRUE            reduce using rule 129 (expresion -> loop_exp .)
    FALSE           reduce using rule 129 (expresion -> loop_exp .)
    CHAR_S          reduce using rule 129 (expresion -> loop_exp .)
    CADENA          reduce using rule 129 (expresion -> loop_exp .)
    ID              reduce using rule 129 (expresion -> loop_exp .)
    IF              reduce using rule 129 (expresion -> loop_exp .)
    MATCH           reduce using rule 129 (expresion -> loop_exp .)
    LOOP            reduce using rule 129 (expresion -> loop_exp .)


state 103

    (130) expresion -> llamada .

    MAS             reduce using rule 130 (expresion -> llamada .)
    MENOS           reduce using rule 130 (expresion -> llamada .)
    MULTI           reduce using rule 130 (expresion -> llamada .)
    DIV             reduce using rule 130 (expresion -> llamada .)
    MODULO          reduce using rule 130 (expresion -> llamada .)
    PUNTO           reduce using rule 130 (expresion -> llamada .)
    MAYOR           reduce using rule 130 (expresion -> llamada .)
    MENOR           reduce using rule 130 (expresion -> llamada .)
    MAYOR_I         reduce using rule 130 (expresion -> llamada .)
    MENOR_I         reduce using rule 130 (expresion -> llamada .)
    D_IGUAL         reduce using rule 130 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 130 (expresion -> llamada .)
    OR              reduce using rule 130 (expresion -> llamada .)
    AND             reduce using rule 130 (expresion -> llamada .)
    AS              reduce using rule 130 (expresion -> llamada .)
    LLV_I           reduce using rule 130 (expresion -> llamada .)
    PUNTOCOMA       reduce using rule 130 (expresion -> llamada .)
    COMA            reduce using rule 130 (expresion -> llamada .)
    PAR_D           reduce using rule 130 (expresion -> llamada .)
    IGUAL           reduce using rule 130 (expresion -> llamada .)
    LLV_D           reduce using rule 130 (expresion -> llamada .)
    BARRA           reduce using rule 130 (expresion -> llamada .)
    GUION_B         reduce using rule 130 (expresion -> llamada .)
    INT             reduce using rule 130 (expresion -> llamada .)
    FLOAT           reduce using rule 130 (expresion -> llamada .)
    NOT             reduce using rule 130 (expresion -> llamada .)
    PAR_I           reduce using rule 130 (expresion -> llamada .)
    ENTERO          reduce using rule 130 (expresion -> llamada .)
    DECIMAL         reduce using rule 130 (expresion -> llamada .)
    TRUE            reduce using rule 130 (expresion -> llamada .)
    FALSE           reduce using rule 130 (expresion -> llamada .)
    CHAR_S          reduce using rule 130 (expresion -> llamada .)
    CADENA          reduce using rule 130 (expresion -> llamada .)
    ID              reduce using rule 130 (expresion -> llamada .)
    IF              reduce using rule 130 (expresion -> llamada .)
    MATCH           reduce using rule 130 (expresion -> llamada .)
    LOOP            reduce using rule 130 (expresion -> llamada .)


state 104

    (131) expresion -> instancia .

    MAS             reduce using rule 131 (expresion -> instancia .)
    MENOS           reduce using rule 131 (expresion -> instancia .)
    MULTI           reduce using rule 131 (expresion -> instancia .)
    DIV             reduce using rule 131 (expresion -> instancia .)
    MODULO          reduce using rule 131 (expresion -> instancia .)
    PUNTO           reduce using rule 131 (expresion -> instancia .)
    MAYOR           reduce using rule 131 (expresion -> instancia .)
    MENOR           reduce using rule 131 (expresion -> instancia .)
    MAYOR_I         reduce using rule 131 (expresion -> instancia .)
    MENOR_I         reduce using rule 131 (expresion -> instancia .)
    D_IGUAL         reduce using rule 131 (expresion -> instancia .)
    NO_IGUAL        reduce using rule 131 (expresion -> instancia .)
    OR              reduce using rule 131 (expresion -> instancia .)
    AND             reduce using rule 131 (expresion -> instancia .)
    AS              reduce using rule 131 (expresion -> instancia .)
    LLV_I           reduce using rule 131 (expresion -> instancia .)
    PUNTOCOMA       reduce using rule 131 (expresion -> instancia .)
    COMA            reduce using rule 131 (expresion -> instancia .)
    PAR_D           reduce using rule 131 (expresion -> instancia .)
    IGUAL           reduce using rule 131 (expresion -> instancia .)
    LLV_D           reduce using rule 131 (expresion -> instancia .)
    BARRA           reduce using rule 131 (expresion -> instancia .)
    GUION_B         reduce using rule 131 (expresion -> instancia .)
    INT             reduce using rule 131 (expresion -> instancia .)
    FLOAT           reduce using rule 131 (expresion -> instancia .)
    NOT             reduce using rule 131 (expresion -> instancia .)
    PAR_I           reduce using rule 131 (expresion -> instancia .)
    ENTERO          reduce using rule 131 (expresion -> instancia .)
    DECIMAL         reduce using rule 131 (expresion -> instancia .)
    TRUE            reduce using rule 131 (expresion -> instancia .)
    FALSE           reduce using rule 131 (expresion -> instancia .)
    CHAR_S          reduce using rule 131 (expresion -> instancia .)
    CADENA          reduce using rule 131 (expresion -> instancia .)
    ID              reduce using rule 131 (expresion -> instancia .)
    IF              reduce using rule 131 (expresion -> instancia .)
    MATCH           reduce using rule 131 (expresion -> instancia .)
    LOOP            reduce using rule 131 (expresion -> instancia .)


state 105

    (132) expresion -> acceso_struct_exp .

    MAS             reduce using rule 132 (expresion -> acceso_struct_exp .)
    MENOS           reduce using rule 132 (expresion -> acceso_struct_exp .)
    MULTI           reduce using rule 132 (expresion -> acceso_struct_exp .)
    DIV             reduce using rule 132 (expresion -> acceso_struct_exp .)
    MODULO          reduce using rule 132 (expresion -> acceso_struct_exp .)
    PUNTO           reduce using rule 132 (expresion -> acceso_struct_exp .)
    MAYOR           reduce using rule 132 (expresion -> acceso_struct_exp .)
    MENOR           reduce using rule 132 (expresion -> acceso_struct_exp .)
    MAYOR_I         reduce using rule 132 (expresion -> acceso_struct_exp .)
    MENOR_I         reduce using rule 132 (expresion -> acceso_struct_exp .)
    D_IGUAL         reduce using rule 132 (expresion -> acceso_struct_exp .)
    NO_IGUAL        reduce using rule 132 (expresion -> acceso_struct_exp .)
    OR              reduce using rule 132 (expresion -> acceso_struct_exp .)
    AND             reduce using rule 132 (expresion -> acceso_struct_exp .)
    AS              reduce using rule 132 (expresion -> acceso_struct_exp .)
    LLV_I           reduce using rule 132 (expresion -> acceso_struct_exp .)
    PUNTOCOMA       reduce using rule 132 (expresion -> acceso_struct_exp .)
    COMA            reduce using rule 132 (expresion -> acceso_struct_exp .)
    PAR_D           reduce using rule 132 (expresion -> acceso_struct_exp .)
    IGUAL           reduce using rule 132 (expresion -> acceso_struct_exp .)
    LLV_D           reduce using rule 132 (expresion -> acceso_struct_exp .)
    BARRA           reduce using rule 132 (expresion -> acceso_struct_exp .)
    GUION_B         reduce using rule 132 (expresion -> acceso_struct_exp .)
    INT             reduce using rule 132 (expresion -> acceso_struct_exp .)
    FLOAT           reduce using rule 132 (expresion -> acceso_struct_exp .)
    NOT             reduce using rule 132 (expresion -> acceso_struct_exp .)
    PAR_I           reduce using rule 132 (expresion -> acceso_struct_exp .)
    ENTERO          reduce using rule 132 (expresion -> acceso_struct_exp .)
    DECIMAL         reduce using rule 132 (expresion -> acceso_struct_exp .)
    TRUE            reduce using rule 132 (expresion -> acceso_struct_exp .)
    FALSE           reduce using rule 132 (expresion -> acceso_struct_exp .)
    CHAR_S          reduce using rule 132 (expresion -> acceso_struct_exp .)
    CADENA          reduce using rule 132 (expresion -> acceso_struct_exp .)
    ID              reduce using rule 132 (expresion -> acceso_struct_exp .)
    IF              reduce using rule 132 (expresion -> acceso_struct_exp .)
    MATCH           reduce using rule 132 (expresion -> acceso_struct_exp .)
    LOOP            reduce using rule 132 (expresion -> acceso_struct_exp .)


state 106

    (69) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 151
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 107

    (81) loop_exp -> LOOP . statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 24

    statement                      shift and go to state 152

state 108

    (123) acceso_struct_exp -> acceso_struct .
    (124) acceso_struct -> acceso_struct . PUNTO ID

  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MENOS           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MULTI           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    DIV             reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MODULO          reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MAYOR           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MENOR           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MAYOR_I         reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MENOR_I         reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    D_IGUAL         reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    NO_IGUAL        reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    OR              reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    AND             reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    AS              reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    LLV_I           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    PUNTOCOMA       reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    COMA            reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    PAR_D           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    IGUAL           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    LLV_D           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    BARRA           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    GUION_B         reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    INT             reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    FLOAT           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    NOT             reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    PAR_I           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    ENTERO          reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    DECIMAL         reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    TRUE            reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    FALSE           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    CHAR_S          reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    CADENA          reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    ID              reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    IF              reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    MATCH           reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    LOOP            reduce using rule 123 (acceso_struct_exp -> acceso_struct .)
    PUNTO           shift and go to state 116

  ! PUNTO           [ reduce using rule 123 (acceso_struct_exp -> acceso_struct .) ]


state 109

    (59) match -> MATCH expresion . LLV_I case_list LLV_D
    (60) match -> MATCH expresion . LLV_I case_list default LLV_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_I           shift and go to state 153
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 110

    (76) while -> WHILE expresion . statement
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144
    LLV_I           shift and go to state 24

    statement                      shift and go to state 154

state 111

    (80) loop -> LOOP statement .

    LLV_D           reduce using rule 80 (loop -> LOOP statement .)
    LET             reduce using rule 80 (loop -> LOOP statement .)
    ID              reduce using rule 80 (loop -> LOOP statement .)
    IF              reduce using rule 80 (loop -> LOOP statement .)
    MATCH           reduce using rule 80 (loop -> LOOP statement .)
    WHILE           reduce using rule 80 (loop -> LOOP statement .)
    LOOP            reduce using rule 80 (loop -> LOOP statement .)
    BREAK           reduce using rule 80 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 80 (loop -> LOOP statement .)
    RETURN          reduce using rule 80 (loop -> LOOP statement .)
    PRINT           reduce using rule 80 (loop -> LOOP statement .)
    COMA            reduce using rule 80 (loop -> LOOP statement .)


state 112

    (78) break -> BREAK expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 78 (break -> BREAK expresion .)
    COMA            reduce using rule 78 (break -> BREAK expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 113

    (38) return -> RETURN expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 38 (return -> RETURN expresion .)
    COMA            reduce using rule 38 (return -> RETURN expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 114

    (28) print -> PRINT NOT . PAR_I expresion PAR_D
    (29) print -> PRINT NOT . PAR_I CADENA COMA exp_list PAR_D

    PAR_I           shift and go to state 155


state 115

    (122) mod_struct -> acceso_struct IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    acceso_struct                  shift and go to state 108
    expresion                      shift and go to state 156
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105

state 116

    (124) acceso_struct -> acceso_struct PUNTO . ID

    ID              shift and go to state 157


state 117

    (34) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo . statement
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 24

    statement                      shift and go to state 158

state 118

    (36) lista_param -> lista_param COMA ID D_PUNTO tipo .

    PAR_D           reduce using rule 36 (lista_param -> lista_param COMA ID D_PUNTO tipo .)
    COMA            reduce using rule 36 (lista_param -> lista_param COMA ID D_PUNTO tipo .)


state 119

    (35) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .

    FN              reduce using rule 35 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    STRUCT          reduce using rule 35 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    $end            reduce using rule 35 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)


state 120

    (82) asignacion -> LET ID IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 159
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 121

    (84) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 160

state 122

    (83) asignacion -> LET MUT ID . IGUAL expresion
    (85) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 161
    D_PUNTO         shift and go to state 162


state 123

    (86) asignacion -> ID IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 86 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 124

    (40) llamada -> ID PAR_I PAR_D .

    PUNTOCOMA       reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MAS             reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MENOS           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MULTI           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    DIV             reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MODULO          reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    PUNTO           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MAYOR           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MENOR           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MAYOR_I         reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MENOR_I         reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    D_IGUAL         reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    OR              reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    AND             reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    AS              reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    LLV_I           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    COMA            reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    PAR_D           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    IGUAL           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    LLV_D           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    BARRA           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    GUION_B         reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    INT             reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    FLOAT           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    NOT             reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    PAR_I           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    ENTERO          reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    DECIMAL         reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    TRUE            reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    FALSE           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    CHAR_S          reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    CADENA          reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    ID              reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    IF              reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    MATCH           reduce using rule 40 (llamada -> ID PAR_I PAR_D .)
    LOOP            reduce using rule 40 (llamada -> ID PAR_I PAR_D .)


state 125

    (41) llamada -> ID PAR_I exp_list . PAR_D
    (30) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 163
    COMA            shift and go to state 164


state 126

    (31) exp_list -> expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           reduce using rule 31 (exp_list -> expresion .)
    COMA            reduce using rule 31 (exp_list -> expresion .)
    IGUAL           reduce using rule 31 (exp_list -> expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 127

    (125) acceso_struct -> ID PUNTO ID .

    IGUAL           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    PUNTO           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MAS             reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MENOS           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MULTI           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    DIV             reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MODULO          reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MAYOR           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MENOR           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MAYOR_I         reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MENOR_I         reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    D_IGUAL         reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    NO_IGUAL        reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    OR              reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    AND             reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    AS              reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    LLV_I           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    PUNTOCOMA       reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    COMA            reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    PAR_D           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    LLV_D           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    BARRA           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    GUION_B         reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    INT             reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    FLOAT           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    NOT             reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    PAR_I           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    ENTERO          reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    DECIMAL         reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    TRUE            reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    FALSE           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    CHAR_S          reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    CADENA          reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    ID              reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    IF              reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    MATCH           reduce using rule 125 (acceso_struct -> ID PUNTO ID .)
    LOOP            reduce using rule 125 (acceso_struct -> ID PUNTO ID .)


state 128

    (56) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_I           shift and go to state 165
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 129

    (50) if -> IF expresion statement .
    (51) if -> IF expresion statement . else
    (52) else -> . ELSE statement
    (53) else -> . ELSE if

    LLV_D           reduce using rule 50 (if -> IF expresion statement .)
    LET             reduce using rule 50 (if -> IF expresion statement .)
    ID              reduce using rule 50 (if -> IF expresion statement .)
    IF              reduce using rule 50 (if -> IF expresion statement .)
    MATCH           reduce using rule 50 (if -> IF expresion statement .)
    WHILE           reduce using rule 50 (if -> IF expresion statement .)
    LOOP            reduce using rule 50 (if -> IF expresion statement .)
    BREAK           reduce using rule 50 (if -> IF expresion statement .)
    CONTINUE        reduce using rule 50 (if -> IF expresion statement .)
    RETURN          reduce using rule 50 (if -> IF expresion statement .)
    PRINT           reduce using rule 50 (if -> IF expresion statement .)
    COMA            reduce using rule 50 (if -> IF expresion statement .)
    ELSE            shift and go to state 167

    else                           shift and go to state 166

state 130

    (94) expresion -> expresion MAS . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 168
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 131

    (95) expresion -> expresion MENOS . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 169
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 132

    (96) expresion -> expresion MULTI . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 170
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 133

    (97) expresion -> expresion DIV . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 171
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 134

    (98) expresion -> expresion MODULO . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 172
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 135

    (102) expresion -> expresion PUNTO . ABS PAR_I PAR_D
    (103) expresion -> expresion PUNTO . SQRT PAR_I PAR_D
    (121) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D

    ABS             shift and go to state 173
    SQRT            shift and go to state 174
    TO_STRING       shift and go to state 175


state 136

    (104) expresion -> expresion MAYOR . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 176
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 137

    (105) expresion -> expresion MENOR . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 177
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 138

    (106) expresion -> expresion MAYOR_I . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 178
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 139

    (107) expresion -> expresion MENOR_I . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 179
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 140

    (108) expresion -> expresion D_IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 180
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 141

    (109) expresion -> expresion NO_IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 181
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 142

    (110) expresion -> expresion OR . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 182
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 143

    (111) expresion -> expresion AND . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 183
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 144

    (126) expresion -> expresion AS . tipo
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 184

state 145

    (99) expresion -> MENOS expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 99 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 99 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 99 (expresion -> MENOS expresion .)
    DIV             reduce using rule 99 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 99 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 99 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 99 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 99 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 99 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 99 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 99 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 99 (expresion -> MENOS expresion .)
    OR              reduce using rule 99 (expresion -> MENOS expresion .)
    AND             reduce using rule 99 (expresion -> MENOS expresion .)
    AS              reduce using rule 99 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 99 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> MENOS expresion .)
    COMA            reduce using rule 99 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 99 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 99 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 99 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 99 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 99 (expresion -> MENOS expresion .)
    INT             reduce using rule 99 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 99 (expresion -> MENOS expresion .)
    NOT             reduce using rule 99 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 99 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 99 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 99 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 99 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 99 (expresion -> MENOS expresion .)
    CHAR_S          reduce using rule 99 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 99 (expresion -> MENOS expresion .)
    ID              reduce using rule 99 (expresion -> MENOS expresion .)
    IF              reduce using rule 99 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 99 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 99 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MULTI           [ shift and go to state 132 ]
  ! DIV             [ shift and go to state 133 ]
  ! MODULO          [ shift and go to state 134 ]
  ! PUNTO           [ shift and go to state 135 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 146

    (100) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 185


state 147

    (113) expresion -> PAR_I expresion . PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           shift and go to state 186
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 148

    (101) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 187


state 149

    (112) expresion -> NOT expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LLV_I           reduce using rule 112 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 112 (expresion -> NOT expresion .)
    COMA            reduce using rule 112 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 112 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 112 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 112 (expresion -> NOT expresion .)
    BARRA           reduce using rule 112 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 112 (expresion -> NOT expresion .)
    INT             reduce using rule 112 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 112 (expresion -> NOT expresion .)
    NOT             reduce using rule 112 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 112 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 112 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 112 (expresion -> NOT expresion .)
    TRUE            reduce using rule 112 (expresion -> NOT expresion .)
    FALSE           reduce using rule 112 (expresion -> NOT expresion .)
    CHAR_S          reduce using rule 112 (expresion -> NOT expresion .)
    CADENA          reduce using rule 112 (expresion -> NOT expresion .)
    ID              reduce using rule 112 (expresion -> NOT expresion .)
    IF              reduce using rule 112 (expresion -> NOT expresion .)
    MATCH           reduce using rule 112 (expresion -> NOT expresion .)
    LOOP            reduce using rule 112 (expresion -> NOT expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144

  ! MAS             [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! PUNTO           [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! OR              [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! AND             [ reduce using rule 112 (expresion -> NOT expresion .) ]
  ! AS              [ reduce using rule 112 (expresion -> NOT expresion .) ]


state 150

    (47) instancia -> ID LLV_I . lista_atributo LLV_D
    (48) lista_atributo -> . lista_atributo COMA ID D_PUNTO expresion
    (49) lista_atributo -> . ID D_PUNTO expresion

    ID              shift and go to state 188

    lista_atributo                 shift and go to state 189

state 151

    (69) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (70) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_I           shift and go to state 190
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 152

    (81) loop_exp -> LOOP statement .

    MAS             reduce using rule 81 (loop_exp -> LOOP statement .)
    MENOS           reduce using rule 81 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 81 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 81 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 81 (loop_exp -> LOOP statement .)
    PUNTO           reduce using rule 81 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 81 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 81 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 81 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 81 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 81 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 81 (loop_exp -> LOOP statement .)
    OR              reduce using rule 81 (loop_exp -> LOOP statement .)
    AND             reduce using rule 81 (loop_exp -> LOOP statement .)
    AS              reduce using rule 81 (loop_exp -> LOOP statement .)
    LLV_I           reduce using rule 81 (loop_exp -> LOOP statement .)
    PUNTOCOMA       reduce using rule 81 (loop_exp -> LOOP statement .)
    COMA            reduce using rule 81 (loop_exp -> LOOP statement .)
    PAR_D           reduce using rule 81 (loop_exp -> LOOP statement .)
    IGUAL           reduce using rule 81 (loop_exp -> LOOP statement .)
    LLV_D           reduce using rule 81 (loop_exp -> LOOP statement .)
    BARRA           reduce using rule 81 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 81 (loop_exp -> LOOP statement .)
    INT             reduce using rule 81 (loop_exp -> LOOP statement .)
    FLOAT           reduce using rule 81 (loop_exp -> LOOP statement .)
    NOT             reduce using rule 81 (loop_exp -> LOOP statement .)
    PAR_I           reduce using rule 81 (loop_exp -> LOOP statement .)
    ENTERO          reduce using rule 81 (loop_exp -> LOOP statement .)
    DECIMAL         reduce using rule 81 (loop_exp -> LOOP statement .)
    TRUE            reduce using rule 81 (loop_exp -> LOOP statement .)
    FALSE           reduce using rule 81 (loop_exp -> LOOP statement .)
    CHAR_S          reduce using rule 81 (loop_exp -> LOOP statement .)
    CADENA          reduce using rule 81 (loop_exp -> LOOP statement .)
    ID              reduce using rule 81 (loop_exp -> LOOP statement .)
    IF              reduce using rule 81 (loop_exp -> LOOP statement .)
    MATCH           reduce using rule 81 (loop_exp -> LOOP statement .)
    LOOP            reduce using rule 81 (loop_exp -> LOOP statement .)


state 153

    (59) match -> MATCH expresion LLV_I . case_list LLV_D
    (60) match -> MATCH expresion LLV_I . case_list default LLV_D
    (61) case_list -> . case_list case
    (62) case_list -> . case
    (63) case -> . exp_list IGUAL MAYOR statement
    (64) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (30) exp_list -> . exp_list COMA expresion
    (31) exp_list -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 126
    case_list                      shift and go to state 191
    case                           shift and go to state 192
    exp_list                       shift and go to state 193
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 154

    (76) while -> WHILE expresion statement .

    LLV_D           reduce using rule 76 (while -> WHILE expresion statement .)
    LET             reduce using rule 76 (while -> WHILE expresion statement .)
    ID              reduce using rule 76 (while -> WHILE expresion statement .)
    IF              reduce using rule 76 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 76 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 76 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 76 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 76 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 76 (while -> WHILE expresion statement .)
    RETURN          reduce using rule 76 (while -> WHILE expresion statement .)
    PRINT           reduce using rule 76 (while -> WHILE expresion statement .)
    COMA            reduce using rule 76 (while -> WHILE expresion statement .)


state 155

    (28) print -> PRINT NOT PAR_I . expresion PAR_D
    (29) print -> PRINT NOT PAR_I . CADENA COMA exp_list PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    CADENA          shift and go to state 195
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 194
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 156

    (122) mod_struct -> acceso_struct IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 122 (mod_struct -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 157

    (124) acceso_struct -> acceso_struct PUNTO ID .

    IGUAL           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    PUNTO           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MAS             reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MENOS           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MULTI           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    DIV             reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MODULO          reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MAYOR           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MENOR           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MAYOR_I         reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MENOR_I         reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    D_IGUAL         reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    NO_IGUAL        reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    OR              reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    AND             reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    AS              reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    LLV_I           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    PUNTOCOMA       reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    COMA            reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    PAR_D           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    LLV_D           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    BARRA           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    GUION_B         reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    INT             reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    FLOAT           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    NOT             reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    PAR_I           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    ENTERO          reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    DECIMAL         reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    TRUE            reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    FALSE           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    CHAR_S          reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    CADENA          reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    ID              reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    IF              reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    MATCH           reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)
    LOOP            reduce using rule 124 (acceso_struct -> acceso_struct PUNTO ID .)


state 158

    (34) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .

    FN              reduce using rule 34 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    STRUCT          reduce using rule 34 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    $end            reduce using rule 34 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)


state 159

    (82) asignacion -> LET ID IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 82 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 160

    (84) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 196


state 161

    (83) asignacion -> LET MUT ID IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 197
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 162

    (85) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (87) tipo -> . INT
    (88) tipo -> . FLOAT
    (89) tipo -> . BOOL
    (90) tipo -> . AMP STR
    (91) tipo -> . STRING
    (92) tipo -> . CHAR
    (93) tipo -> . VOID

    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    BOOL            shift and go to state 31
    AMP             shift and go to state 32
    STRING          shift and go to state 33
    CHAR            shift and go to state 34
    VOID            shift and go to state 35

    tipo                           shift and go to state 198

state 163

    (41) llamada -> ID PAR_I exp_list PAR_D .

    PUNTOCOMA       reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MAS             reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOS           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MULTI           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    DIV             reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MODULO          reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    PUNTO           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MAYOR           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOR           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MAYOR_I         reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOR_I         reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    D_IGUAL         reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    NO_IGUAL        reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    OR              reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    AND             reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    AS              reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    LLV_I           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    COMA            reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    PAR_D           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    IGUAL           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    LLV_D           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    BARRA           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    GUION_B         reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    INT             reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    FLOAT           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    NOT             reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    PAR_I           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    ENTERO          reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    DECIMAL         reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    TRUE            reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    FALSE           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    CHAR_S          reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    CADENA          reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    ID              reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    IF              reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    MATCH           reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)
    LOOP            reduce using rule 41 (llamada -> ID PAR_I exp_list PAR_D .)


state 164

    (30) exp_list -> exp_list COMA . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 199
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 165

    (56) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 200
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 166

    (51) if -> IF expresion statement else .

    LLV_D           reduce using rule 51 (if -> IF expresion statement else .)
    LET             reduce using rule 51 (if -> IF expresion statement else .)
    ID              reduce using rule 51 (if -> IF expresion statement else .)
    IF              reduce using rule 51 (if -> IF expresion statement else .)
    MATCH           reduce using rule 51 (if -> IF expresion statement else .)
    WHILE           reduce using rule 51 (if -> IF expresion statement else .)
    LOOP            reduce using rule 51 (if -> IF expresion statement else .)
    BREAK           reduce using rule 51 (if -> IF expresion statement else .)
    CONTINUE        reduce using rule 51 (if -> IF expresion statement else .)
    RETURN          reduce using rule 51 (if -> IF expresion statement else .)
    PRINT           reduce using rule 51 (if -> IF expresion statement else .)
    COMA            reduce using rule 51 (if -> IF expresion statement else .)


state 167

    (52) else -> ELSE . statement
    (53) else -> ELSE . if
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D
    (50) if -> . IF expresion statement
    (51) if -> . IF expresion statement else

    LLV_I           shift and go to state 24
    IF              shift and go to state 56

    statement                      shift and go to state 201
    if                             shift and go to state 202

state 168

    (94) expresion -> expresion MAS expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 94 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 94 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 94 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 94 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 94 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 94 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 94 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 94 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 94 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 94 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 94 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 94 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 94 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 94 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 94 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 94 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 94 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 94 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 94 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 94 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 94 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 94 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 94 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 94 (expresion -> expresion MAS expresion .)
    CHAR_S          reduce using rule 94 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 94 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 94 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 94 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 94 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 94 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MULTI           [ reduce using rule 94 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 94 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ reduce using rule 94 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 169

    (95) expresion -> expresion MENOS expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 95 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 95 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 95 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 95 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 95 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 95 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 95 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 95 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 95 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 95 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 95 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 95 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    CHAR_S          reduce using rule 95 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 95 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 95 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 95 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 95 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MULTI           [ reduce using rule 95 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 95 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 95 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 170

    (96) expresion -> expresion MULTI expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 96 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 96 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 96 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 96 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 96 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 96 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 96 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 96 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 96 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 96 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 96 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 96 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 96 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    CHAR_S          reduce using rule 96 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 96 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 96 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 96 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 96 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MODULO          [ reduce using rule 96 (expresion -> expresion MULTI expresion .) ]
  ! PUNTO           [ reduce using rule 96 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MULTI           [ shift and go to state 132 ]
  ! DIV             [ shift and go to state 133 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 171

    (97) expresion -> expresion DIV expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 97 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 97 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 97 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 97 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 97 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 97 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 97 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 97 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 97 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 97 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 97 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 97 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 97 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 97 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 97 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 97 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 97 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 97 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 97 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 97 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 97 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 97 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 97 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 97 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 97 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 97 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 97 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 97 (expresion -> expresion DIV expresion .)
    CHAR_S          reduce using rule 97 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 97 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 97 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 97 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 97 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 97 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MODULO          [ reduce using rule 97 (expresion -> expresion DIV expresion .) ]
  ! PUNTO           [ reduce using rule 97 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MULTI           [ shift and go to state 132 ]
  ! DIV             [ shift and go to state 133 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 172

    (98) expresion -> expresion MODULO expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAS             reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 98 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 98 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 98 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 98 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 98 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 98 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 98 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 98 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 98 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 98 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 98 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 98 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    CHAR_S          reduce using rule 98 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 98 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 98 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 98 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 98 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 98 (expresion -> expresion MODULO expresion .)
    PUNTO           shift and go to state 135

  ! PUNTO           [ reduce using rule 98 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 130 ]
  ! MENOS           [ shift and go to state 131 ]
  ! MULTI           [ shift and go to state 132 ]
  ! DIV             [ shift and go to state 133 ]
  ! MODULO          [ shift and go to state 134 ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 173

    (102) expresion -> expresion PUNTO ABS . PAR_I PAR_D

    PAR_I           shift and go to state 203


state 174

    (103) expresion -> expresion PUNTO SQRT . PAR_I PAR_D

    PAR_I           shift and go to state 204


state 175

    (121) expresion -> expresion PUNTO TO_STRING . PAR_I PAR_D

    PAR_I           shift and go to state 205


state 176

    (104) expresion -> expresion MAYOR expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAYOR           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    CHAR_S          reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 104 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MAS             [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 104 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 177

    (105) expresion -> expresion MENOR expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAYOR           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 105 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 105 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 105 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 105 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 105 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 105 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 105 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 105 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 105 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 105 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 105 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 105 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 105 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 105 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 105 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    CHAR_S          reduce using rule 105 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 105 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 105 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 105 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 105 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 105 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MAS             [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 105 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 178

    (106) expresion -> expresion MAYOR_I expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAYOR           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    AS              reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    CHAR_S          reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    CADENA          reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    LOOP            reduce using rule 106 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MAS             [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 106 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 179

    (107) expresion -> expresion MENOR_I expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAYOR           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    AS              reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    CHAR_S          reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    CADENA          reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    LOOP            reduce using rule 107 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MAS             [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 107 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 180

    (108) expresion -> expresion D_IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LLV_I           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    CHAR_S          reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    CADENA          reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    LOOP            reduce using rule 108 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144

  ! MAS             [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]
  ! AS              [ reduce using rule 108 (expresion -> expresion D_IGUAL expresion .) ]


state 181

    (109) expresion -> expresion NO_IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    MAYOR           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    AS              reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    CHAR_S          reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135

  ! MAS             [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 109 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 137 ]
  ! MAYOR_I         [ shift and go to state 138 ]
  ! MENOR_I         [ shift and go to state 139 ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! NO_IGUAL        [ shift and go to state 141 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 182

    (110) expresion -> expresion OR expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    D_IGUAL         reduce using rule 110 (expresion -> expresion OR expresion .)
    OR              reduce using rule 110 (expresion -> expresion OR expresion .)
    AS              reduce using rule 110 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 110 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 110 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 110 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 110 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 110 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 110 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 110 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 110 (expresion -> expresion OR expresion .)
    INT             reduce using rule 110 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 110 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 110 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 110 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 110 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 110 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 110 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 110 (expresion -> expresion OR expresion .)
    CHAR_S          reduce using rule 110 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 110 (expresion -> expresion OR expresion .)
    ID              reduce using rule 110 (expresion -> expresion OR expresion .)
    IF              reduce using rule 110 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 110 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 110 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    NO_IGUAL        shift and go to state 141
    AND             shift and go to state 143

  ! MAS             [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 110 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! OR              [ shift and go to state 142 ]
  ! AS              [ shift and go to state 144 ]


state 183

    (111) expresion -> expresion AND expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    D_IGUAL         reduce using rule 111 (expresion -> expresion AND expresion .)
    OR              reduce using rule 111 (expresion -> expresion AND expresion .)
    AND             reduce using rule 111 (expresion -> expresion AND expresion .)
    AS              reduce using rule 111 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 111 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 111 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 111 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 111 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 111 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 111 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 111 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 111 (expresion -> expresion AND expresion .)
    INT             reduce using rule 111 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 111 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 111 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 111 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 111 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 111 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 111 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 111 (expresion -> expresion AND expresion .)
    CHAR_S          reduce using rule 111 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 111 (expresion -> expresion AND expresion .)
    ID              reduce using rule 111 (expresion -> expresion AND expresion .)
    IF              reduce using rule 111 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 111 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 111 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    NO_IGUAL        shift and go to state 141

  ! MAS             [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 111 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 140 ]
  ! OR              [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! AS              [ shift and go to state 144 ]


state 184

    (126) expresion -> expresion AS tipo .

    MAS             reduce using rule 126 (expresion -> expresion AS tipo .)
    MENOS           reduce using rule 126 (expresion -> expresion AS tipo .)
    MULTI           reduce using rule 126 (expresion -> expresion AS tipo .)
    DIV             reduce using rule 126 (expresion -> expresion AS tipo .)
    MODULO          reduce using rule 126 (expresion -> expresion AS tipo .)
    PUNTO           reduce using rule 126 (expresion -> expresion AS tipo .)
    MAYOR           reduce using rule 126 (expresion -> expresion AS tipo .)
    MENOR           reduce using rule 126 (expresion -> expresion AS tipo .)
    MAYOR_I         reduce using rule 126 (expresion -> expresion AS tipo .)
    MENOR_I         reduce using rule 126 (expresion -> expresion AS tipo .)
    D_IGUAL         reduce using rule 126 (expresion -> expresion AS tipo .)
    NO_IGUAL        reduce using rule 126 (expresion -> expresion AS tipo .)
    OR              reduce using rule 126 (expresion -> expresion AS tipo .)
    AND             reduce using rule 126 (expresion -> expresion AS tipo .)
    AS              reduce using rule 126 (expresion -> expresion AS tipo .)
    LLV_I           reduce using rule 126 (expresion -> expresion AS tipo .)
    PUNTOCOMA       reduce using rule 126 (expresion -> expresion AS tipo .)
    COMA            reduce using rule 126 (expresion -> expresion AS tipo .)
    PAR_D           reduce using rule 126 (expresion -> expresion AS tipo .)
    IGUAL           reduce using rule 126 (expresion -> expresion AS tipo .)
    LLV_D           reduce using rule 126 (expresion -> expresion AS tipo .)
    BARRA           reduce using rule 126 (expresion -> expresion AS tipo .)
    GUION_B         reduce using rule 126 (expresion -> expresion AS tipo .)
    INT             reduce using rule 126 (expresion -> expresion AS tipo .)
    FLOAT           reduce using rule 126 (expresion -> expresion AS tipo .)
    NOT             reduce using rule 126 (expresion -> expresion AS tipo .)
    PAR_I           reduce using rule 126 (expresion -> expresion AS tipo .)
    ENTERO          reduce using rule 126 (expresion -> expresion AS tipo .)
    DECIMAL         reduce using rule 126 (expresion -> expresion AS tipo .)
    TRUE            reduce using rule 126 (expresion -> expresion AS tipo .)
    FALSE           reduce using rule 126 (expresion -> expresion AS tipo .)
    CHAR_S          reduce using rule 126 (expresion -> expresion AS tipo .)
    CADENA          reduce using rule 126 (expresion -> expresion AS tipo .)
    ID              reduce using rule 126 (expresion -> expresion AS tipo .)
    IF              reduce using rule 126 (expresion -> expresion AS tipo .)
    MATCH           reduce using rule 126 (expresion -> expresion AS tipo .)
    LOOP            reduce using rule 126 (expresion -> expresion AS tipo .)


state 185

    (100) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 206


state 186

    (113) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    AS              reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    CADENA          reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)
    LOOP            reduce using rule 113 (expresion -> PAR_I expresion PAR_D .)


state 187

    (101) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 207


state 188

    (49) lista_atributo -> ID . D_PUNTO expresion

    D_PUNTO         shift and go to state 208


state 189

    (47) instancia -> ID LLV_I lista_atributo . LLV_D
    (48) lista_atributo -> lista_atributo . COMA ID D_PUNTO expresion

    LLV_D           shift and go to state 209
    COMA            shift and go to state 210


state 190

    (69) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (70) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (71) case_list_exp -> . case_list_exp case_exp
    (72) case_list_exp -> . case_exp
    (73) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (74) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (67) exp_list_c -> . exp_list_c BARRA expresion
    (68) exp_list_c -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 211
    case_list_exp                  shift and go to state 212
    case_exp                       shift and go to state 213
    exp_list_c                     shift and go to state 214
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 191

    (59) match -> MATCH expresion LLV_I case_list . LLV_D
    (60) match -> MATCH expresion LLV_I case_list . default LLV_D
    (61) case_list -> case_list . case
    (65) default -> . GUION_B IGUAL MAYOR statement
    (66) default -> . GUION_B IGUAL MAYOR instruccion
    (63) case -> . exp_list IGUAL MAYOR statement
    (64) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (30) exp_list -> . exp_list COMA expresion
    (31) exp_list -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    LLV_D           shift and go to state 215
    GUION_B         shift and go to state 218
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 126
    default                        shift and go to state 216
    case                           shift and go to state 217
    exp_list                       shift and go to state 193
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 192

    (62) case_list -> case .

    LLV_D           reduce using rule 62 (case_list -> case .)
    GUION_B         reduce using rule 62 (case_list -> case .)
    MENOS           reduce using rule 62 (case_list -> case .)
    INT             reduce using rule 62 (case_list -> case .)
    FLOAT           reduce using rule 62 (case_list -> case .)
    NOT             reduce using rule 62 (case_list -> case .)
    PAR_I           reduce using rule 62 (case_list -> case .)
    ENTERO          reduce using rule 62 (case_list -> case .)
    DECIMAL         reduce using rule 62 (case_list -> case .)
    TRUE            reduce using rule 62 (case_list -> case .)
    FALSE           reduce using rule 62 (case_list -> case .)
    CHAR_S          reduce using rule 62 (case_list -> case .)
    CADENA          reduce using rule 62 (case_list -> case .)
    ID              reduce using rule 62 (case_list -> case .)
    IF              reduce using rule 62 (case_list -> case .)
    MATCH           reduce using rule 62 (case_list -> case .)
    LOOP            reduce using rule 62 (case_list -> case .)


state 193

    (63) case -> exp_list . IGUAL MAYOR statement
    (64) case -> exp_list . IGUAL MAYOR instruccion_no_pt COMA
    (30) exp_list -> exp_list . COMA expresion

    IGUAL           shift and go to state 219
    COMA            shift and go to state 164


state 194

    (28) print -> PRINT NOT PAR_I expresion . PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           shift and go to state 220
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 195

    (29) print -> PRINT NOT PAR_I CADENA . COMA exp_list PAR_D
    (119) expresion -> CADENA .

    COMA            shift and go to state 221
    PAR_D           reduce using rule 119 (expresion -> CADENA .)
    MAS             reduce using rule 119 (expresion -> CADENA .)
    MENOS           reduce using rule 119 (expresion -> CADENA .)
    MULTI           reduce using rule 119 (expresion -> CADENA .)
    DIV             reduce using rule 119 (expresion -> CADENA .)
    MODULO          reduce using rule 119 (expresion -> CADENA .)
    PUNTO           reduce using rule 119 (expresion -> CADENA .)
    MAYOR           reduce using rule 119 (expresion -> CADENA .)
    MENOR           reduce using rule 119 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 119 (expresion -> CADENA .)
    MENOR_I         reduce using rule 119 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 119 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 119 (expresion -> CADENA .)
    OR              reduce using rule 119 (expresion -> CADENA .)
    AND             reduce using rule 119 (expresion -> CADENA .)
    AS              reduce using rule 119 (expresion -> CADENA .)


state 196

    (84) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 222
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 197

    (83) asignacion -> LET MUT ID IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 83 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 198

    (85) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 223


state 199

    (30) exp_list -> exp_list COMA expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           reduce using rule 30 (exp_list -> exp_list COMA expresion .)
    COMA            reduce using rule 30 (exp_list -> exp_list COMA expresion .)
    IGUAL           reduce using rule 30 (exp_list -> exp_list COMA expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 200

    (56) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           shift and go to state 224
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 201

    (52) else -> ELSE statement .

    LLV_D           reduce using rule 52 (else -> ELSE statement .)
    LET             reduce using rule 52 (else -> ELSE statement .)
    ID              reduce using rule 52 (else -> ELSE statement .)
    IF              reduce using rule 52 (else -> ELSE statement .)
    MATCH           reduce using rule 52 (else -> ELSE statement .)
    WHILE           reduce using rule 52 (else -> ELSE statement .)
    LOOP            reduce using rule 52 (else -> ELSE statement .)
    BREAK           reduce using rule 52 (else -> ELSE statement .)
    CONTINUE        reduce using rule 52 (else -> ELSE statement .)
    RETURN          reduce using rule 52 (else -> ELSE statement .)
    PRINT           reduce using rule 52 (else -> ELSE statement .)
    COMA            reduce using rule 52 (else -> ELSE statement .)


state 202

    (53) else -> ELSE if .

    LLV_D           reduce using rule 53 (else -> ELSE if .)
    LET             reduce using rule 53 (else -> ELSE if .)
    ID              reduce using rule 53 (else -> ELSE if .)
    IF              reduce using rule 53 (else -> ELSE if .)
    MATCH           reduce using rule 53 (else -> ELSE if .)
    WHILE           reduce using rule 53 (else -> ELSE if .)
    LOOP            reduce using rule 53 (else -> ELSE if .)
    BREAK           reduce using rule 53 (else -> ELSE if .)
    CONTINUE        reduce using rule 53 (else -> ELSE if .)
    RETURN          reduce using rule 53 (else -> ELSE if .)
    PRINT           reduce using rule 53 (else -> ELSE if .)
    COMA            reduce using rule 53 (else -> ELSE if .)


state 203

    (102) expresion -> expresion PUNTO ABS PAR_I . PAR_D

    PAR_D           shift and go to state 225


state 204

    (103) expresion -> expresion PUNTO SQRT PAR_I . PAR_D

    PAR_D           shift and go to state 226


state 205

    (121) expresion -> expresion PUNTO TO_STRING PAR_I . PAR_D

    PAR_D           shift and go to state 227


state 206

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 228


state 207

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 229


state 208

    (49) lista_atributo -> ID D_PUNTO . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 230
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 209

    (47) instancia -> ID LLV_I lista_atributo LLV_D .

    MAS             reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MENOS           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MULTI           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    DIV             reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MODULO          reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    PUNTO           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MAYOR           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MENOR           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MAYOR_I         reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MENOR_I         reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    D_IGUAL         reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    NO_IGUAL        reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    OR              reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    AND             reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    AS              reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    LLV_I           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    PUNTOCOMA       reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    COMA            reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    PAR_D           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    IGUAL           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    LLV_D           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    BARRA           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    GUION_B         reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    INT             reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    FLOAT           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    NOT             reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    PAR_I           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    ENTERO          reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    DECIMAL         reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    TRUE            reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    FALSE           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    CHAR_S          reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    CADENA          reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    ID              reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    IF              reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    MATCH           reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)
    LOOP            reduce using rule 47 (instancia -> ID LLV_I lista_atributo LLV_D .)


state 210

    (48) lista_atributo -> lista_atributo COMA . ID D_PUNTO expresion

    ID              shift and go to state 231


state 211

    (68) exp_list_c -> expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    IGUAL           reduce using rule 68 (exp_list_c -> expresion .)
    BARRA           reduce using rule 68 (exp_list_c -> expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 212

    (69) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (70) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (71) case_list_exp -> case_list_exp . case_exp
    (75) default_exp -> . GUION_B IGUAL MAYOR expresion
    (73) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (74) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (67) exp_list_c -> . exp_list_c BARRA expresion
    (68) exp_list_c -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    LLV_D           shift and go to state 232
    GUION_B         shift and go to state 235
    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 211
    default_exp                    shift and go to state 233
    case_exp                       shift and go to state 234
    exp_list_c                     shift and go to state 214
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 213

    (72) case_list_exp -> case_exp .

    LLV_D           reduce using rule 72 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 72 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 72 (case_list_exp -> case_exp .)
    INT             reduce using rule 72 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 72 (case_list_exp -> case_exp .)
    NOT             reduce using rule 72 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 72 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 72 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 72 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 72 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 72 (case_list_exp -> case_exp .)
    CHAR_S          reduce using rule 72 (case_list_exp -> case_exp .)
    CADENA          reduce using rule 72 (case_list_exp -> case_exp .)
    ID              reduce using rule 72 (case_list_exp -> case_exp .)
    IF              reduce using rule 72 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 72 (case_list_exp -> case_exp .)
    LOOP            reduce using rule 72 (case_list_exp -> case_exp .)


state 214

    (73) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (74) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (67) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 236
    BARRA           shift and go to state 237


state 215

    (59) match -> MATCH expresion LLV_I case_list LLV_D .

    LLV_D           reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ID              reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    WHILE           reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LOOP            reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    BREAK           reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CONTINUE        reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    RETURN          reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    PRINT           reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 59 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 216

    (60) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 238


state 217

    (61) case_list -> case_list case .

    LLV_D           reduce using rule 61 (case_list -> case_list case .)
    GUION_B         reduce using rule 61 (case_list -> case_list case .)
    MENOS           reduce using rule 61 (case_list -> case_list case .)
    INT             reduce using rule 61 (case_list -> case_list case .)
    FLOAT           reduce using rule 61 (case_list -> case_list case .)
    NOT             reduce using rule 61 (case_list -> case_list case .)
    PAR_I           reduce using rule 61 (case_list -> case_list case .)
    ENTERO          reduce using rule 61 (case_list -> case_list case .)
    DECIMAL         reduce using rule 61 (case_list -> case_list case .)
    TRUE            reduce using rule 61 (case_list -> case_list case .)
    FALSE           reduce using rule 61 (case_list -> case_list case .)
    CHAR_S          reduce using rule 61 (case_list -> case_list case .)
    CADENA          reduce using rule 61 (case_list -> case_list case .)
    ID              reduce using rule 61 (case_list -> case_list case .)
    IF              reduce using rule 61 (case_list -> case_list case .)
    MATCH           reduce using rule 61 (case_list -> case_list case .)
    LOOP            reduce using rule 61 (case_list -> case_list case .)


state 218

    (65) default -> GUION_B . IGUAL MAYOR statement
    (66) default -> GUION_B . IGUAL MAYOR instruccion

    IGUAL           shift and go to state 239


state 219

    (63) case -> exp_list IGUAL . MAYOR statement
    (64) case -> exp_list IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 240


state 220

    (28) print -> PRINT NOT PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 28 (print -> PRINT NOT PAR_I expresion PAR_D .)
    COMA            reduce using rule 28 (print -> PRINT NOT PAR_I expresion PAR_D .)


state 221

    (29) print -> PRINT NOT PAR_I CADENA COMA . exp_list PAR_D
    (30) exp_list -> . exp_list COMA expresion
    (31) exp_list -> . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    exp_list                       shift and go to state 241
    expresion                      shift and go to state 126
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 222

    (84) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 84 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 223

    (85) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 242
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 224

    (56) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (57) exp_else -> . ELSE LLV_I expresion LLV_D
    (58) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 244

    exp_else                       shift and go to state 243

state 225

    (102) expresion -> expresion PUNTO ABS PAR_I PAR_D .

    MAS             reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOS           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MULTI           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    DIV             reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MODULO          reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PUNTO           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MAYOR           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOR           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MAYOR_I         reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOR_I         reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    D_IGUAL         reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    OR              reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    AND             reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    AS              reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LLV_I           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    COMA            reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PAR_D           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    IGUAL           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LLV_D           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    BARRA           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    GUION_B         reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    INT             reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    FLOAT           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    NOT             reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PAR_I           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    ENTERO          reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    DECIMAL         reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    TRUE            reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    FALSE           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    CHAR_S          reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    CADENA          reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    ID              reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    IF              reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MATCH           reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LOOP            reduce using rule 102 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)


state 226

    (103) expresion -> expresion PUNTO SQRT PAR_I PAR_D .

    MAS             reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOS           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MULTI           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    DIV             reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MODULO          reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PUNTO           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MAYOR           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOR           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MAYOR_I         reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOR_I         reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    D_IGUAL         reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    OR              reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    AND             reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    AS              reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LLV_I           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    COMA            reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PAR_D           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    IGUAL           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LLV_D           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    BARRA           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    GUION_B         reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    INT             reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    FLOAT           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    NOT             reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PAR_I           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    ENTERO          reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    DECIMAL         reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    TRUE            reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    FALSE           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    CHAR_S          reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    CADENA          reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    ID              reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    IF              reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MATCH           reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LOOP            reduce using rule 103 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)


state 227

    (121) expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .

    MAS             reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOS           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MULTI           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DIV             reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MODULO          reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTO           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR_I         reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR_I         reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    D_IGUAL         reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    OR              reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AND             reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AS              reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_I           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COMA            reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_D           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IGUAL           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_D           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    BARRA           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    GUION_B         reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    INT             reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FLOAT           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NOT             reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_I           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ENTERO          reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DECIMAL         reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    TRUE            reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FALSE           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CHAR_S          reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CADENA          reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ID              reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IF              reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MATCH           reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LOOP            reduce using rule 121 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)


state 228

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 245
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 229

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 246
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 230

    (49) lista_atributo -> ID D_PUNTO expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           reduce using rule 49 (lista_atributo -> ID D_PUNTO expresion .)
    COMA            reduce using rule 49 (lista_atributo -> ID D_PUNTO expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 231

    (48) lista_atributo -> lista_atributo COMA ID . D_PUNTO expresion

    D_PUNTO         shift and go to state 247


state 232

    (69) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    MAS             reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTO           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AS              reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CHAR_S          reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CADENA          reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LOOP            reduce using rule 69 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 233

    (70) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 248


state 234

    (71) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    CHAR_S          reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    CADENA          reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)
    LOOP            reduce using rule 71 (case_list_exp -> case_list_exp case_exp .)


state 235

    (75) default_exp -> GUION_B . IGUAL MAYOR expresion

    IGUAL           shift and go to state 249


state 236

    (73) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (74) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 250


state 237

    (67) exp_list_c -> exp_list_c BARRA . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 251
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 238

    (60) match -> MATCH expresion LLV_I case_list default LLV_D .

    LLV_D           reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ID              reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    WHILE           reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LOOP            reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    BREAK           reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CONTINUE        reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    RETURN          reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    PRINT           reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 60 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 239

    (65) default -> GUION_B IGUAL . MAYOR statement
    (66) default -> GUION_B IGUAL . MAYOR instruccion

    MAYOR           shift and go to state 252


state 240

    (63) case -> exp_list IGUAL MAYOR . statement
    (64) case -> exp_list IGUAL MAYOR . instruccion_no_pt COMA
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D
    (15) instruccion_no_pt -> . if
    (16) instruccion_no_pt -> . match
    (17) instruccion_no_pt -> . print
    (18) instruccion_no_pt -> . while
    (19) instruccion_no_pt -> . loop
    (20) instruccion_no_pt -> . break
    (21) instruccion_no_pt -> . continue
    (22) instruccion_no_pt -> . return
    (23) instruccion_no_pt -> . llamada
    (50) if -> . IF expresion statement
    (51) if -> . IF expresion statement else
    (59) match -> . MATCH expresion LLV_I case_list LLV_D
    (60) match -> . MATCH expresion LLV_I case_list default LLV_D
    (28) print -> . PRINT NOT PAR_I expresion PAR_D
    (29) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (76) while -> . WHILE expresion statement
    (80) loop -> . LOOP statement
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) continue -> . CONTINUE
    (38) return -> . RETURN expresion
    (39) return -> . RETURN
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D

    LLV_I           shift and go to state 24
    IF              shift and go to state 56
    MATCH           shift and go to state 57
    PRINT           shift and go to state 63
    WHILE           shift and go to state 58
    LOOP            shift and go to state 59
    BREAK           shift and go to state 60
    CONTINUE        shift and go to state 61
    RETURN          shift and go to state 62
    ID              shift and go to state 264

    statement                      shift and go to state 253
    instruccion_no_pt              shift and go to state 254
    if                             shift and go to state 255
    match                          shift and go to state 256
    print                          shift and go to state 257
    while                          shift and go to state 258
    loop                           shift and go to state 259
    break                          shift and go to state 260
    continue                       shift and go to state 261
    return                         shift and go to state 262
    llamada                        shift and go to state 263

state 241

    (29) print -> PRINT NOT PAR_I CADENA COMA exp_list . PAR_D
    (30) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 265
    COMA            shift and go to state 164


state 242

    (85) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PUNTOCOMA       reduce using rule 85 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 243

    (56) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTO           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AS              reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CHAR_S          reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CADENA          reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LOOP            reduce using rule 56 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 244

    (57) exp_else -> ELSE . LLV_I expresion LLV_D
    (58) exp_else -> ELSE . exp_if
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 266
    IF              shift and go to state 86

    exp_if                         shift and go to state 267

state 245

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    COMA            shift and go to state 268
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 246

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    COMA            shift and go to state 269
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 247

    (48) lista_atributo -> lista_atributo COMA ID D_PUNTO . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 270
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 248

    (70) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    MAS             reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTO           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AS              reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CHAR_S          reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CADENA          reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LOOP            reduce using rule 70 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 249

    (75) default_exp -> GUION_B IGUAL . MAYOR expresion

    MAYOR           shift and go to state 271


state 250

    (73) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (74) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 272
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 251

    (67) exp_list_c -> exp_list_c BARRA expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    IGUAL           reduce using rule 67 (exp_list_c -> exp_list_c BARRA expresion .)
    BARRA           reduce using rule 67 (exp_list_c -> exp_list_c BARRA expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 252

    (65) default -> GUION_B IGUAL MAYOR . statement
    (66) default -> GUION_B IGUAL MAYOR . instruccion
    (54) statement -> . LLV_I instrucciones LLV_D
    (55) statement -> . LLV_I LLV_D
    (4) instruccion -> . asignacion PUNTOCOMA
    (5) instruccion -> . if
    (6) instruccion -> . match
    (7) instruccion -> . while
    (8) instruccion -> . loop
    (9) instruccion -> . break PUNTOCOMA
    (10) instruccion -> . continue PUNTOCOMA
    (11) instruccion -> . return PUNTOCOMA
    (12) instruccion -> . print PUNTOCOMA
    (13) instruccion -> . llamada PUNTOCOMA
    (14) instruccion -> . mod_struct PUNTOCOMA
    (82) asignacion -> . LET ID IGUAL expresion
    (83) asignacion -> . LET MUT ID IGUAL expresion
    (84) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (85) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (86) asignacion -> . ID IGUAL expresion
    (50) if -> . IF expresion statement
    (51) if -> . IF expresion statement else
    (59) match -> . MATCH expresion LLV_I case_list LLV_D
    (60) match -> . MATCH expresion LLV_I case_list default LLV_D
    (76) while -> . WHILE expresion statement
    (80) loop -> . LOOP statement
    (77) break -> . BREAK
    (78) break -> . BREAK expresion
    (79) continue -> . CONTINUE
    (38) return -> . RETURN expresion
    (39) return -> . RETURN
    (28) print -> . PRINT NOT PAR_I expresion PAR_D
    (29) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (122) mod_struct -> . acceso_struct IGUAL expresion
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    LLV_I           shift and go to state 24
    LET             shift and go to state 54
    ID              shift and go to state 55
    IF              shift and go to state 56
    MATCH           shift and go to state 57
    WHILE           shift and go to state 58
    LOOP            shift and go to state 59
    BREAK           shift and go to state 60
    CONTINUE        shift and go to state 61
    RETURN          shift and go to state 62
    PRINT           shift and go to state 63

    statement                      shift and go to state 273
    instruccion                    shift and go to state 274
    asignacion                     shift and go to state 43
    if                             shift and go to state 44
    match                          shift and go to state 45
    while                          shift and go to state 46
    loop                           shift and go to state 47
    break                          shift and go to state 48
    continue                       shift and go to state 49
    return                         shift and go to state 50
    print                          shift and go to state 51
    llamada                        shift and go to state 52
    mod_struct                     shift and go to state 53
    acceso_struct                  shift and go to state 64

state 253

    (63) case -> exp_list IGUAL MAYOR statement .

    LLV_D           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    GUION_B         reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    MENOS           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    INT             reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    FLOAT           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    NOT             reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    PAR_I           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    ENTERO          reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    TRUE            reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    FALSE           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    CHAR_S          reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    CADENA          reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    ID              reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    IF              reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    MATCH           reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)
    LOOP            reduce using rule 63 (case -> exp_list IGUAL MAYOR statement .)


state 254

    (64) case -> exp_list IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 275


state 255

    (15) instruccion_no_pt -> if .

    COMA            reduce using rule 15 (instruccion_no_pt -> if .)


state 256

    (16) instruccion_no_pt -> match .

    COMA            reduce using rule 16 (instruccion_no_pt -> match .)


state 257

    (17) instruccion_no_pt -> print .

    COMA            reduce using rule 17 (instruccion_no_pt -> print .)


state 258

    (18) instruccion_no_pt -> while .

    COMA            reduce using rule 18 (instruccion_no_pt -> while .)


state 259

    (19) instruccion_no_pt -> loop .

    COMA            reduce using rule 19 (instruccion_no_pt -> loop .)


state 260

    (20) instruccion_no_pt -> break .

    COMA            reduce using rule 20 (instruccion_no_pt -> break .)


state 261

    (21) instruccion_no_pt -> continue .

    COMA            reduce using rule 21 (instruccion_no_pt -> continue .)


state 262

    (22) instruccion_no_pt -> return .

    COMA            reduce using rule 22 (instruccion_no_pt -> return .)


state 263

    (23) instruccion_no_pt -> llamada .

    COMA            reduce using rule 23 (instruccion_no_pt -> llamada .)


state 264

    (40) llamada -> ID . PAR_I PAR_D
    (41) llamada -> ID . PAR_I exp_list PAR_D

    PAR_I           shift and go to state 84


state 265

    (29) print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .

    PUNTOCOMA       reduce using rule 29 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)
    COMA            reduce using rule 29 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)


state 266

    (57) exp_else -> ELSE LLV_I . expresion LLV_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 276
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 267

    (58) exp_else -> ELSE exp_if .

    MAS             reduce using rule 58 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 58 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 58 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 58 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 58 (exp_else -> ELSE exp_if .)
    PUNTO           reduce using rule 58 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 58 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 58 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 58 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 58 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 58 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 58 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 58 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 58 (exp_else -> ELSE exp_if .)
    AS              reduce using rule 58 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 58 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 58 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 58 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 58 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 58 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 58 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 58 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 58 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 58 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 58 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 58 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 58 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 58 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 58 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 58 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 58 (exp_else -> ELSE exp_if .)
    CHAR_S          reduce using rule 58 (exp_else -> ELSE exp_if .)
    CADENA          reduce using rule 58 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 58 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 58 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 58 (exp_else -> ELSE exp_if .)
    LOOP            reduce using rule 58 (exp_else -> ELSE exp_if .)


state 268

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 277
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 269

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 278
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 270

    (48) lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           reduce using rule 48 (lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .)
    COMA            reduce using rule 48 (lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 271

    (75) default_exp -> GUION_B IGUAL MAYOR . expresion
    (94) expresion -> . expresion MAS expresion
    (95) expresion -> . expresion MENOS expresion
    (96) expresion -> . expresion MULTI expresion
    (97) expresion -> . expresion DIV expresion
    (98) expresion -> . expresion MODULO expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (101) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (102) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (103) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (104) expresion -> . expresion MAYOR expresion
    (105) expresion -> . expresion MENOR expresion
    (106) expresion -> . expresion MAYOR_I expresion
    (107) expresion -> . expresion MENOR_I expresion
    (108) expresion -> . expresion D_IGUAL expresion
    (109) expresion -> . expresion NO_IGUAL expresion
    (110) expresion -> . expresion OR expresion
    (111) expresion -> . expresion AND expresion
    (112) expresion -> . NOT expresion
    (113) expresion -> . PAR_I expresion PAR_D
    (114) expresion -> . ENTERO
    (115) expresion -> . DECIMAL
    (116) expresion -> . TRUE
    (117) expresion -> . FALSE
    (118) expresion -> . CHAR_S
    (119) expresion -> . CADENA
    (120) expresion -> . ID
    (121) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> . expresion AS tipo
    (127) expresion -> . exp_if
    (128) expresion -> . match_exp
    (129) expresion -> . loop_exp
    (130) expresion -> . llamada
    (131) expresion -> . instancia
    (132) expresion -> . acceso_struct_exp
    (56) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (69) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (70) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (81) loop_exp -> . LOOP statement
    (40) llamada -> . ID PAR_I PAR_D
    (41) llamada -> . ID PAR_I exp_list PAR_D
    (47) instancia -> . ID LLV_I lista_atributo LLV_D
    (123) acceso_struct_exp -> . acceso_struct
    (124) acceso_struct -> . acceso_struct PUNTO ID
    (125) acceso_struct -> . ID PUNTO ID

    MENOS           shift and go to state 88
    INT             shift and go to state 89
    FLOAT           shift and go to state 91
    NOT             shift and go to state 92
    PAR_I           shift and go to state 90
    ENTERO          shift and go to state 93
    DECIMAL         shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    CHAR_S          shift and go to state 97
    CADENA          shift and go to state 98
    ID              shift and go to state 99
    IF              shift and go to state 86
    MATCH           shift and go to state 106
    LOOP            shift and go to state 107

    expresion                      shift and go to state 279
    exp_if                         shift and go to state 100
    match_exp                      shift and go to state 101
    loop_exp                       shift and go to state 102
    llamada                        shift and go to state 103
    instancia                      shift and go to state 104
    acceso_struct_exp              shift and go to state 105
    acceso_struct                  shift and go to state 108

state 272

    (73) case_exp -> exp_list_c IGUAL MAYOR expresion .
    (74) case_exp -> exp_list_c IGUAL MAYOR expresion . COMA
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    INT             reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    NOT             reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    TRUE            reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FALSE           reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CHAR_S          reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CADENA          reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ID              reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    IF              reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    MATCH           reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    LOOP            reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    COMA            shift and go to state 280
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144

  ! MENOS           [ reduce using rule 73 (case_exp -> exp_list_c IGUAL MAYOR expresion .) ]


state 273

    (65) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 65 (default -> GUION_B IGUAL MAYOR statement .)


state 274

    (66) default -> GUION_B IGUAL MAYOR instruccion .

    LLV_D           reduce using rule 66 (default -> GUION_B IGUAL MAYOR instruccion .)


state 275

    (64) case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CHAR_S          reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CADENA          reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    LOOP            reduce using rule 64 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)


state 276

    (57) exp_else -> ELSE LLV_I expresion . LLV_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           shift and go to state 281
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 277

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           shift and go to state 282
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 278

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    PAR_D           shift and go to state 283
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 279

    (75) default_exp -> GUION_B IGUAL MAYOR expresion .
    (94) expresion -> expresion . MAS expresion
    (95) expresion -> expresion . MENOS expresion
    (96) expresion -> expresion . MULTI expresion
    (97) expresion -> expresion . DIV expresion
    (98) expresion -> expresion . MODULO expresion
    (102) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (103) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (104) expresion -> expresion . MAYOR expresion
    (105) expresion -> expresion . MENOR expresion
    (106) expresion -> expresion . MAYOR_I expresion
    (107) expresion -> expresion . MENOR_I expresion
    (108) expresion -> expresion . D_IGUAL expresion
    (109) expresion -> expresion . NO_IGUAL expresion
    (110) expresion -> expresion . OR expresion
    (111) expresion -> expresion . AND expresion
    (121) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (126) expresion -> expresion . AS tipo

    LLV_D           reduce using rule 75 (default_exp -> GUION_B IGUAL MAYOR expresion .)
    MAS             shift and go to state 130
    MENOS           shift and go to state 131
    MULTI           shift and go to state 132
    DIV             shift and go to state 133
    MODULO          shift and go to state 134
    PUNTO           shift and go to state 135
    MAYOR           shift and go to state 136
    MENOR           shift and go to state 137
    MAYOR_I         shift and go to state 138
    MENOR_I         shift and go to state 139
    D_IGUAL         shift and go to state 140
    NO_IGUAL        shift and go to state 141
    OR              shift and go to state 142
    AND             shift and go to state 143
    AS              shift and go to state 144


state 280

    (74) case_exp -> exp_list_c IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CHAR_S          reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CADENA          reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    LOOP            reduce using rule 74 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)


state 281

    (57) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTO           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AS              reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CHAR_S          reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CADENA          reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LOOP            reduce using rule 57 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 282

    (100) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 100 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 283

    (101) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 101 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PAR_I in state 99 resolved as shift
WARNING: shift/reduce conflict for LLV_I in state 99 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 99 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 108 resolved as shift
WARNING: shift/reduce conflict for MAS in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 149 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 149 resolved as shift
WARNING: shift/reduce conflict for DIV in state 149 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 149 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 149 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for AS in state 149 resolved as shift
WARNING: shift/reduce conflict for MAS in state 180 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 180 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 180 resolved as shift
WARNING: shift/reduce conflict for DIV in state 180 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 180 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 180 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 180 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 180 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 180 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 180 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 180 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 180 resolved as shift
WARNING: shift/reduce conflict for OR in state 180 resolved as shift
WARNING: shift/reduce conflict for AND in state 180 resolved as shift
WARNING: shift/reduce conflict for AS in state 180 resolved as shift
