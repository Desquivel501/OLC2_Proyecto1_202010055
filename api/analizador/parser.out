Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    PRINT
    STR
    STRING
    TO_OWNED
    TO_STRING

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     instruccion -> match
Rule 8     instruccion_no_pt -> ejecutar
Rule 9     instruccion_no_pt -> asignacion
Rule 10    instruccion_no_pt -> if
Rule 11    instruccion_no_pt -> match
Rule 12    ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 13    if -> IF expresion statement
Rule 14    if -> IF expresion statement else
Rule 15    else -> ELSE statement
Rule 16    else -> ELSE if
Rule 17    statement -> LLV_I instrucciones LLV_D
Rule 18    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 19    exp_else -> ELSE LLV_I expresion LLV_D
Rule 20    exp_else -> ELSE exp_if
Rule 21    match -> MATCH expresion LLV_I case_list LLV_D
Rule 22    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 23    case_list -> case_list case
Rule 24    case_list -> case
Rule 25    case -> exp_list IGUAL MAYOR statement
Rule 26    case -> exp_list IGUAL MAYOR instruccion_no_pt COMA
Rule 27    default -> GUION_B IGUAL MAYOR statement
Rule 28    default -> GUION_B IGUAL MAYOR instruccion
Rule 29    exp_list -> exp_list BARRA expresion
Rule 30    exp_list -> expresion
Rule 31    match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 32    match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 33    case_list_exp -> case_list_exp case_exp
Rule 34    case_list_exp -> case_exp
Rule 35    case_exp -> exp_list IGUAL MAYOR expresion
Rule 36    case_exp -> exp_list IGUAL MAYOR expresion COMA
Rule 37    default_exp -> GUION_B IGUAL MAYOR expresion
Rule 38    asignacion -> LET ID IGUAL expresion
Rule 39    asignacion -> LET MUT ID IGUAL expresion
Rule 40    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 41    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 42    tipo -> INT
Rule 43    tipo -> FLOAT
Rule 44    tipo -> BOOL
Rule 45    expresion -> expresion MAS expresion
Rule 46    expresion -> expresion MENOS expresion
Rule 47    expresion -> expresion MULTI expresion
Rule 48    expresion -> expresion DIV expresion
Rule 49    expresion -> expresion MODULO expresion
Rule 50    expresion -> MENOS expresion
Rule 51    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 52    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 53    expresion -> ABS PAR_I expresion PAR_D
Rule 54    expresion -> SQRT PAR_I expresion PAR_D
Rule 55    expresion -> ENTERO
Rule 56    expresion -> DECIMAL
Rule 57    expresion -> TRUE
Rule 58    expresion -> FALSE
Rule 59    expresion -> ID
Rule 60    expresion -> expresion MAYOR expresion
Rule 61    expresion -> expresion MENOR expresion
Rule 62    expresion -> expresion MAYOR_I expresion
Rule 63    expresion -> expresion MENOR_I expresion
Rule 64    expresion -> expresion D_IGUAL expresion
Rule 65    expresion -> expresion NO_IGUAL expresion
Rule 66    expresion -> expresion OR expresion
Rule 67    expresion -> expresion AND expresion
Rule 68    expresion -> NOT expresion
Rule 69    expresion -> PAR_I expresion PAR_D
Rule 70    expresion -> exp_if
Rule 71    expresion -> match_exp

Terminals, with rules where they appear

ABS                  : 53
AND                  : 67
BARRA                : 29
BOOL                 : 44
CHAR                 : 
COMA                 : 26 36 51 52
DECIMAL              : 56
DIV                  : 48
D_IGUAL              : 64
D_PUNTO              : 40 41 51 51 52 52
EJECUTAR             : 12
ELSE                 : 15 16 19 20
ENTERO               : 55
FALSE                : 58
FLOAT                : 43 52
GUION_B              : 27 28 37
ID                   : 38 39 40 41 59
IF                   : 13 14 18
IGUAL                : 25 26 27 28 35 36 37 38 39 40 41
INT                  : 42 51
LET                  : 38 39 40 41
LLV_D                : 17 18 19 21 22 31 32
LLV_I                : 17 18 19 21 22 31 32
MAS                  : 45
MATCH                : 21 22 31 32
MAYOR                : 25 26 27 28 35 36 37 60
MAYOR_I              : 62
MENOR                : 61
MENOR_I              : 63
MENOS                : 46 50
MODULO               : 49
MULTI                : 47
MUT                  : 39 41
NOT                  : 68
NO_IGUAL             : 65
OR                   : 66
PAR_D                : 12 51 52 53 54 69
PAR_I                : 12 51 52 53 54 69
POW_FLOAT            : 52
POW_INT              : 51
PRINT                : 
PUNTOCOMA            : 4 5
SQRT                 : 54
STR                  : 
STRING               : 
TO_OWNED             : 
TO_STRING            : 
TRUE                 : 57
error                : 

Nonterminals, with rules where they appear

asignacion           : 5 9
case                 : 23 24
case_exp             : 33 34
case_list            : 21 22 23
case_list_exp        : 31 32 33
default              : 22
default_exp          : 32
ejecutar             : 4 8
else                 : 14
exp_else             : 18
exp_if               : 20 70
exp_list             : 25 26 29 35 36
expresion            : 12 13 14 18 18 19 21 22 29 30 31 32 35 36 37 38 39 40 41 45 45 46 46 47 47 48 48 49 49 50 51 51 52 52 53 54 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 69
if                   : 6 10 16
ini                  : 0
instruccion          : 2 3 28
instruccion_no_pt    : 26
instrucciones        : 1 2 17
match                : 7 11
match_exp            : 71
statement            : 13 14 15 25 27
tipo                 : 40 41

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    instruccion                    shift and go to state 12
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 13


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 14


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    MATCH           reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) instruccion -> match .

    EJECUTAR        reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLV_D           reduce using rule 7 (instruccion -> match .)


state 8

    (12) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 15


state 9

    (38) asignacion -> LET . ID IGUAL expresion
    (39) asignacion -> LET . MUT ID IGUAL expresion
    (40) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 16
    MUT             shift and go to state 17


state 10

    (13) if -> IF . expresion statement
    (14) if -> IF . expresion statement else
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 19
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 11

    (21) match -> MATCH . expresion LLV_I case_list LLV_D
    (22) match -> MATCH . expresion LLV_I case_list default LLV_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 35
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 12

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 13

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 14

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 15

    (12) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 36
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 16

    (38) asignacion -> LET ID . IGUAL expresion
    (40) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 37
    D_PUNTO         shift and go to state 38


state 17

    (39) asignacion -> LET MUT . ID IGUAL expresion
    (41) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 39


state 18

    (18) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 40
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 19

    (13) if -> IF expresion . statement
    (14) if -> IF expresion . statement else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion
    (17) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54
    LLV_I           shift and go to state 55

    statement                      shift and go to state 41

state 20

    (50) expresion -> MENOS . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 56
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 21

    (51) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 57


state 22

    (69) expresion -> PAR_I . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 58
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 23

    (52) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 59


state 24

    (53) expresion -> ABS . PAR_I expresion PAR_D

    PAR_I           shift and go to state 60


state 25

    (54) expresion -> SQRT . PAR_I expresion PAR_D

    PAR_I           shift and go to state 61


state 26

    (55) expresion -> ENTERO .

    MAS             reduce using rule 55 (expresion -> ENTERO .)
    MENOS           reduce using rule 55 (expresion -> ENTERO .)
    MULTI           reduce using rule 55 (expresion -> ENTERO .)
    DIV             reduce using rule 55 (expresion -> ENTERO .)
    MODULO          reduce using rule 55 (expresion -> ENTERO .)
    MAYOR           reduce using rule 55 (expresion -> ENTERO .)
    MENOR           reduce using rule 55 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 55 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 55 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 55 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 55 (expresion -> ENTERO .)
    OR              reduce using rule 55 (expresion -> ENTERO .)
    AND             reduce using rule 55 (expresion -> ENTERO .)
    LLV_I           reduce using rule 55 (expresion -> ENTERO .)
    PAR_D           reduce using rule 55 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 55 (expresion -> ENTERO .)
    COMA            reduce using rule 55 (expresion -> ENTERO .)
    IGUAL           reduce using rule 55 (expresion -> ENTERO .)
    BARRA           reduce using rule 55 (expresion -> ENTERO .)
    LLV_D           reduce using rule 55 (expresion -> ENTERO .)
    GUION_B         reduce using rule 55 (expresion -> ENTERO .)
    INT             reduce using rule 55 (expresion -> ENTERO .)
    FLOAT           reduce using rule 55 (expresion -> ENTERO .)
    ABS             reduce using rule 55 (expresion -> ENTERO .)
    SQRT            reduce using rule 55 (expresion -> ENTERO .)
    ENTERO          reduce using rule 55 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 55 (expresion -> ENTERO .)
    TRUE            reduce using rule 55 (expresion -> ENTERO .)
    FALSE           reduce using rule 55 (expresion -> ENTERO .)
    ID              reduce using rule 55 (expresion -> ENTERO .)
    NOT             reduce using rule 55 (expresion -> ENTERO .)
    PAR_I           reduce using rule 55 (expresion -> ENTERO .)
    IF              reduce using rule 55 (expresion -> ENTERO .)
    MATCH           reduce using rule 55 (expresion -> ENTERO .)


state 27

    (56) expresion -> DECIMAL .

    MAS             reduce using rule 56 (expresion -> DECIMAL .)
    MENOS           reduce using rule 56 (expresion -> DECIMAL .)
    MULTI           reduce using rule 56 (expresion -> DECIMAL .)
    DIV             reduce using rule 56 (expresion -> DECIMAL .)
    MODULO          reduce using rule 56 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 56 (expresion -> DECIMAL .)
    MENOR           reduce using rule 56 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 56 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 56 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 56 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 56 (expresion -> DECIMAL .)
    OR              reduce using rule 56 (expresion -> DECIMAL .)
    AND             reduce using rule 56 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 56 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 56 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 56 (expresion -> DECIMAL .)
    COMA            reduce using rule 56 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 56 (expresion -> DECIMAL .)
    BARRA           reduce using rule 56 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 56 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 56 (expresion -> DECIMAL .)
    INT             reduce using rule 56 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 56 (expresion -> DECIMAL .)
    ABS             reduce using rule 56 (expresion -> DECIMAL .)
    SQRT            reduce using rule 56 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 56 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 56 (expresion -> DECIMAL .)
    TRUE            reduce using rule 56 (expresion -> DECIMAL .)
    FALSE           reduce using rule 56 (expresion -> DECIMAL .)
    ID              reduce using rule 56 (expresion -> DECIMAL .)
    NOT             reduce using rule 56 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 56 (expresion -> DECIMAL .)
    IF              reduce using rule 56 (expresion -> DECIMAL .)
    MATCH           reduce using rule 56 (expresion -> DECIMAL .)


state 28

    (57) expresion -> TRUE .

    MAS             reduce using rule 57 (expresion -> TRUE .)
    MENOS           reduce using rule 57 (expresion -> TRUE .)
    MULTI           reduce using rule 57 (expresion -> TRUE .)
    DIV             reduce using rule 57 (expresion -> TRUE .)
    MODULO          reduce using rule 57 (expresion -> TRUE .)
    MAYOR           reduce using rule 57 (expresion -> TRUE .)
    MENOR           reduce using rule 57 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 57 (expresion -> TRUE .)
    MENOR_I         reduce using rule 57 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 57 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 57 (expresion -> TRUE .)
    OR              reduce using rule 57 (expresion -> TRUE .)
    AND             reduce using rule 57 (expresion -> TRUE .)
    LLV_I           reduce using rule 57 (expresion -> TRUE .)
    PAR_D           reduce using rule 57 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 57 (expresion -> TRUE .)
    COMA            reduce using rule 57 (expresion -> TRUE .)
    IGUAL           reduce using rule 57 (expresion -> TRUE .)
    BARRA           reduce using rule 57 (expresion -> TRUE .)
    LLV_D           reduce using rule 57 (expresion -> TRUE .)
    GUION_B         reduce using rule 57 (expresion -> TRUE .)
    INT             reduce using rule 57 (expresion -> TRUE .)
    FLOAT           reduce using rule 57 (expresion -> TRUE .)
    ABS             reduce using rule 57 (expresion -> TRUE .)
    SQRT            reduce using rule 57 (expresion -> TRUE .)
    ENTERO          reduce using rule 57 (expresion -> TRUE .)
    DECIMAL         reduce using rule 57 (expresion -> TRUE .)
    TRUE            reduce using rule 57 (expresion -> TRUE .)
    FALSE           reduce using rule 57 (expresion -> TRUE .)
    ID              reduce using rule 57 (expresion -> TRUE .)
    NOT             reduce using rule 57 (expresion -> TRUE .)
    PAR_I           reduce using rule 57 (expresion -> TRUE .)
    IF              reduce using rule 57 (expresion -> TRUE .)
    MATCH           reduce using rule 57 (expresion -> TRUE .)


state 29

    (58) expresion -> FALSE .

    MAS             reduce using rule 58 (expresion -> FALSE .)
    MENOS           reduce using rule 58 (expresion -> FALSE .)
    MULTI           reduce using rule 58 (expresion -> FALSE .)
    DIV             reduce using rule 58 (expresion -> FALSE .)
    MODULO          reduce using rule 58 (expresion -> FALSE .)
    MAYOR           reduce using rule 58 (expresion -> FALSE .)
    MENOR           reduce using rule 58 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 58 (expresion -> FALSE .)
    MENOR_I         reduce using rule 58 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 58 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 58 (expresion -> FALSE .)
    OR              reduce using rule 58 (expresion -> FALSE .)
    AND             reduce using rule 58 (expresion -> FALSE .)
    LLV_I           reduce using rule 58 (expresion -> FALSE .)
    PAR_D           reduce using rule 58 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 58 (expresion -> FALSE .)
    COMA            reduce using rule 58 (expresion -> FALSE .)
    IGUAL           reduce using rule 58 (expresion -> FALSE .)
    BARRA           reduce using rule 58 (expresion -> FALSE .)
    LLV_D           reduce using rule 58 (expresion -> FALSE .)
    GUION_B         reduce using rule 58 (expresion -> FALSE .)
    INT             reduce using rule 58 (expresion -> FALSE .)
    FLOAT           reduce using rule 58 (expresion -> FALSE .)
    ABS             reduce using rule 58 (expresion -> FALSE .)
    SQRT            reduce using rule 58 (expresion -> FALSE .)
    ENTERO          reduce using rule 58 (expresion -> FALSE .)
    DECIMAL         reduce using rule 58 (expresion -> FALSE .)
    TRUE            reduce using rule 58 (expresion -> FALSE .)
    FALSE           reduce using rule 58 (expresion -> FALSE .)
    ID              reduce using rule 58 (expresion -> FALSE .)
    NOT             reduce using rule 58 (expresion -> FALSE .)
    PAR_I           reduce using rule 58 (expresion -> FALSE .)
    IF              reduce using rule 58 (expresion -> FALSE .)
    MATCH           reduce using rule 58 (expresion -> FALSE .)


state 30

    (59) expresion -> ID .

    MAS             reduce using rule 59 (expresion -> ID .)
    MENOS           reduce using rule 59 (expresion -> ID .)
    MULTI           reduce using rule 59 (expresion -> ID .)
    DIV             reduce using rule 59 (expresion -> ID .)
    MODULO          reduce using rule 59 (expresion -> ID .)
    MAYOR           reduce using rule 59 (expresion -> ID .)
    MENOR           reduce using rule 59 (expresion -> ID .)
    MAYOR_I         reduce using rule 59 (expresion -> ID .)
    MENOR_I         reduce using rule 59 (expresion -> ID .)
    D_IGUAL         reduce using rule 59 (expresion -> ID .)
    NO_IGUAL        reduce using rule 59 (expresion -> ID .)
    OR              reduce using rule 59 (expresion -> ID .)
    AND             reduce using rule 59 (expresion -> ID .)
    LLV_I           reduce using rule 59 (expresion -> ID .)
    PAR_D           reduce using rule 59 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 59 (expresion -> ID .)
    COMA            reduce using rule 59 (expresion -> ID .)
    IGUAL           reduce using rule 59 (expresion -> ID .)
    BARRA           reduce using rule 59 (expresion -> ID .)
    LLV_D           reduce using rule 59 (expresion -> ID .)
    GUION_B         reduce using rule 59 (expresion -> ID .)
    INT             reduce using rule 59 (expresion -> ID .)
    FLOAT           reduce using rule 59 (expresion -> ID .)
    ABS             reduce using rule 59 (expresion -> ID .)
    SQRT            reduce using rule 59 (expresion -> ID .)
    ENTERO          reduce using rule 59 (expresion -> ID .)
    DECIMAL         reduce using rule 59 (expresion -> ID .)
    TRUE            reduce using rule 59 (expresion -> ID .)
    FALSE           reduce using rule 59 (expresion -> ID .)
    ID              reduce using rule 59 (expresion -> ID .)
    NOT             reduce using rule 59 (expresion -> ID .)
    PAR_I           reduce using rule 59 (expresion -> ID .)
    IF              reduce using rule 59 (expresion -> ID .)
    MATCH           reduce using rule 59 (expresion -> ID .)


state 31

    (68) expresion -> NOT . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 62
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 32

    (70) expresion -> exp_if .

    MAS             reduce using rule 70 (expresion -> exp_if .)
    MENOS           reduce using rule 70 (expresion -> exp_if .)
    MULTI           reduce using rule 70 (expresion -> exp_if .)
    DIV             reduce using rule 70 (expresion -> exp_if .)
    MODULO          reduce using rule 70 (expresion -> exp_if .)
    MAYOR           reduce using rule 70 (expresion -> exp_if .)
    MENOR           reduce using rule 70 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 70 (expresion -> exp_if .)
    MENOR_I         reduce using rule 70 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 70 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 70 (expresion -> exp_if .)
    OR              reduce using rule 70 (expresion -> exp_if .)
    AND             reduce using rule 70 (expresion -> exp_if .)
    LLV_I           reduce using rule 70 (expresion -> exp_if .)
    PAR_D           reduce using rule 70 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 70 (expresion -> exp_if .)
    COMA            reduce using rule 70 (expresion -> exp_if .)
    IGUAL           reduce using rule 70 (expresion -> exp_if .)
    BARRA           reduce using rule 70 (expresion -> exp_if .)
    LLV_D           reduce using rule 70 (expresion -> exp_if .)
    GUION_B         reduce using rule 70 (expresion -> exp_if .)
    INT             reduce using rule 70 (expresion -> exp_if .)
    FLOAT           reduce using rule 70 (expresion -> exp_if .)
    ABS             reduce using rule 70 (expresion -> exp_if .)
    SQRT            reduce using rule 70 (expresion -> exp_if .)
    ENTERO          reduce using rule 70 (expresion -> exp_if .)
    DECIMAL         reduce using rule 70 (expresion -> exp_if .)
    TRUE            reduce using rule 70 (expresion -> exp_if .)
    FALSE           reduce using rule 70 (expresion -> exp_if .)
    ID              reduce using rule 70 (expresion -> exp_if .)
    NOT             reduce using rule 70 (expresion -> exp_if .)
    PAR_I           reduce using rule 70 (expresion -> exp_if .)
    IF              reduce using rule 70 (expresion -> exp_if .)
    MATCH           reduce using rule 70 (expresion -> exp_if .)


state 33

    (71) expresion -> match_exp .

    MAS             reduce using rule 71 (expresion -> match_exp .)
    MENOS           reduce using rule 71 (expresion -> match_exp .)
    MULTI           reduce using rule 71 (expresion -> match_exp .)
    DIV             reduce using rule 71 (expresion -> match_exp .)
    MODULO          reduce using rule 71 (expresion -> match_exp .)
    MAYOR           reduce using rule 71 (expresion -> match_exp .)
    MENOR           reduce using rule 71 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 71 (expresion -> match_exp .)
    MENOR_I         reduce using rule 71 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 71 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 71 (expresion -> match_exp .)
    OR              reduce using rule 71 (expresion -> match_exp .)
    AND             reduce using rule 71 (expresion -> match_exp .)
    LLV_I           reduce using rule 71 (expresion -> match_exp .)
    PAR_D           reduce using rule 71 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 71 (expresion -> match_exp .)
    COMA            reduce using rule 71 (expresion -> match_exp .)
    IGUAL           reduce using rule 71 (expresion -> match_exp .)
    BARRA           reduce using rule 71 (expresion -> match_exp .)
    LLV_D           reduce using rule 71 (expresion -> match_exp .)
    GUION_B         reduce using rule 71 (expresion -> match_exp .)
    INT             reduce using rule 71 (expresion -> match_exp .)
    FLOAT           reduce using rule 71 (expresion -> match_exp .)
    ABS             reduce using rule 71 (expresion -> match_exp .)
    SQRT            reduce using rule 71 (expresion -> match_exp .)
    ENTERO          reduce using rule 71 (expresion -> match_exp .)
    DECIMAL         reduce using rule 71 (expresion -> match_exp .)
    TRUE            reduce using rule 71 (expresion -> match_exp .)
    FALSE           reduce using rule 71 (expresion -> match_exp .)
    ID              reduce using rule 71 (expresion -> match_exp .)
    NOT             reduce using rule 71 (expresion -> match_exp .)
    PAR_I           reduce using rule 71 (expresion -> match_exp .)
    IF              reduce using rule 71 (expresion -> match_exp .)
    MATCH           reduce using rule 71 (expresion -> match_exp .)


state 34

    (31) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 63
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 35

    (21) match -> MATCH expresion . LLV_I case_list LLV_D
    (22) match -> MATCH expresion . LLV_I case_list default LLV_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 64
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 36

    (12) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 65
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 37

    (38) asignacion -> LET ID IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 66
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 38

    (40) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (42) tipo -> . INT
    (43) tipo -> . FLOAT
    (44) tipo -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    BOOL            shift and go to state 70

    tipo                           shift and go to state 67

state 39

    (39) asignacion -> LET MUT ID . IGUAL expresion
    (41) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 71
    D_PUNTO         shift and go to state 72


state 40

    (18) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 73
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 41

    (13) if -> IF expresion statement .
    (14) if -> IF expresion statement . else
    (15) else -> . ELSE statement
    (16) else -> . ELSE if

    EJECUTAR        reduce using rule 13 (if -> IF expresion statement .)
    LET             reduce using rule 13 (if -> IF expresion statement .)
    IF              reduce using rule 13 (if -> IF expresion statement .)
    MATCH           reduce using rule 13 (if -> IF expresion statement .)
    $end            reduce using rule 13 (if -> IF expresion statement .)
    LLV_D           reduce using rule 13 (if -> IF expresion statement .)
    COMA            reduce using rule 13 (if -> IF expresion statement .)
    ELSE            shift and go to state 75

    else                           shift and go to state 74

state 42

    (45) expresion -> expresion MAS . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 76
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 43

    (46) expresion -> expresion MENOS . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 77
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 44

    (47) expresion -> expresion MULTI . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 78
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 45

    (48) expresion -> expresion DIV . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 79
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 46

    (49) expresion -> expresion MODULO . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 80
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 47

    (60) expresion -> expresion MAYOR . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 81
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 48

    (61) expresion -> expresion MENOR . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 82
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 49

    (62) expresion -> expresion MAYOR_I . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 83
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 50

    (63) expresion -> expresion MENOR_I . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 84
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 51

    (64) expresion -> expresion D_IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 85
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 52

    (65) expresion -> expresion NO_IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 86
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 53

    (66) expresion -> expresion OR . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 87
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 54

    (67) expresion -> expresion AND . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 88
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 55

    (17) statement -> LLV_I . instrucciones LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    instrucciones                  shift and go to state 89
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7

state 56

    (50) expresion -> MENOS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 50 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 50 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 50 (expresion -> MENOS expresion .)
    DIV             reduce using rule 50 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 50 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 50 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 50 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 50 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 50 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 50 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 50 (expresion -> MENOS expresion .)
    OR              reduce using rule 50 (expresion -> MENOS expresion .)
    AND             reduce using rule 50 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 50 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 50 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 50 (expresion -> MENOS expresion .)
    COMA            reduce using rule 50 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 50 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 50 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 50 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 50 (expresion -> MENOS expresion .)
    INT             reduce using rule 50 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 50 (expresion -> MENOS expresion .)
    ABS             reduce using rule 50 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 50 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 50 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 50 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 50 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 50 (expresion -> MENOS expresion .)
    ID              reduce using rule 50 (expresion -> MENOS expresion .)
    NOT             reduce using rule 50 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 50 (expresion -> MENOS expresion .)
    IF              reduce using rule 50 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 50 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MULTI           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! MODULO          [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 57

    (51) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 90


state 58

    (69) expresion -> PAR_I expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 91
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 59

    (52) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 92


state 60

    (53) expresion -> ABS PAR_I . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 93
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 61

    (54) expresion -> SQRT PAR_I . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 94
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 62

    (68) expresion -> NOT expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 68 (expresion -> NOT expresion .)
    OR              reduce using rule 68 (expresion -> NOT expresion .)
    AND             reduce using rule 68 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 68 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 68 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 68 (expresion -> NOT expresion .)
    COMA            reduce using rule 68 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 68 (expresion -> NOT expresion .)
    BARRA           reduce using rule 68 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 68 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 68 (expresion -> NOT expresion .)
    INT             reduce using rule 68 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 68 (expresion -> NOT expresion .)
    ABS             reduce using rule 68 (expresion -> NOT expresion .)
    SQRT            reduce using rule 68 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 68 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 68 (expresion -> NOT expresion .)
    TRUE            reduce using rule 68 (expresion -> NOT expresion .)
    FALSE           reduce using rule 68 (expresion -> NOT expresion .)
    ID              reduce using rule 68 (expresion -> NOT expresion .)
    NOT             reduce using rule 68 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 68 (expresion -> NOT expresion .)
    IF              reduce using rule 68 (expresion -> NOT expresion .)
    MATCH           reduce using rule 68 (expresion -> NOT expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    NO_IGUAL        shift and go to state 52

  ! MAS             [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 68 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 63

    (31) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (32) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 95
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 64

    (21) match -> MATCH expresion LLV_I . case_list LLV_D
    (22) match -> MATCH expresion LLV_I . case_list default LLV_D
    (23) case_list -> . case_list case
    (24) case_list -> . case
    (25) case -> . exp_list IGUAL MAYOR statement
    (26) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (29) exp_list -> . exp_list BARRA expresion
    (30) exp_list -> . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 96
    case_list                      shift and go to state 97
    case                           shift and go to state 98
    exp_list                       shift and go to state 99
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 65

    (12) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 12 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)
    COMA            reduce using rule 12 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 66

    (38) asignacion -> LET ID IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 38 (asignacion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 38 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 67

    (40) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 100


state 68

    (42) tipo -> INT .

    IGUAL           reduce using rule 42 (tipo -> INT .)


state 69

    (43) tipo -> FLOAT .

    IGUAL           reduce using rule 43 (tipo -> FLOAT .)


state 70

    (44) tipo -> BOOL .

    IGUAL           reduce using rule 44 (tipo -> BOOL .)


state 71

    (39) asignacion -> LET MUT ID IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 101
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 72

    (41) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (42) tipo -> . INT
    (43) tipo -> . FLOAT
    (44) tipo -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    BOOL            shift and go to state 70

    tipo                           shift and go to state 102

state 73

    (18) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 103
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 74

    (14) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 14 (if -> IF expresion statement else .)
    LET             reduce using rule 14 (if -> IF expresion statement else .)
    IF              reduce using rule 14 (if -> IF expresion statement else .)
    MATCH           reduce using rule 14 (if -> IF expresion statement else .)
    $end            reduce using rule 14 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 14 (if -> IF expresion statement else .)
    COMA            reduce using rule 14 (if -> IF expresion statement else .)


state 75

    (15) else -> ELSE . statement
    (16) else -> ELSE . if
    (17) statement -> . LLV_I instrucciones LLV_D
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else

    LLV_I           shift and go to state 55
    IF              shift and go to state 10

    statement                      shift and go to state 104
    if                             shift and go to state 105

state 76

    (45) expresion -> expresion MAS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 45 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 45 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 45 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 45 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 45 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 45 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 45 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 45 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 45 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 45 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 45 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 45 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 45 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 45 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 45 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 45 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 45 (expresion -> expresion MAS expresion .)
    ABS             reduce using rule 45 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 45 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 45 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 45 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 45 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 45 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 45 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 45 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 45 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 45 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 45 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MULTI           [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 77

    (46) expresion -> expresion MENOS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 46 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 46 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 46 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 46 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 46 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 46 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    ABS             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 46 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 46 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 46 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 46 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 46 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MULTI           [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 78

    (47) expresion -> expresion MULTI expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 47 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 47 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 47 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 47 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 47 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 47 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 47 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    ABS             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    SQRT            reduce using rule 47 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 47 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 47 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 47 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 47 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 47 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 47 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 46

  ! MODULO          [ reduce using rule 47 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MULTI           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 79

    (48) expresion -> expresion DIV expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 48 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 48 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 48 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 48 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 48 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 48 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 48 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 48 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 48 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 48 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 48 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 48 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 48 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 48 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 48 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 48 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 48 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 48 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 48 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 48 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 48 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 48 (expresion -> expresion DIV expresion .)
    ABS             reduce using rule 48 (expresion -> expresion DIV expresion .)
    SQRT            reduce using rule 48 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 48 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 48 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 48 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 48 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 48 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 48 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 48 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 48 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 48 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 46

  ! MODULO          [ reduce using rule 48 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MULTI           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 80

    (49) expresion -> expresion MODULO expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 49 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 49 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 49 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 49 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 49 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 49 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    ABS             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    SQRT            reduce using rule 49 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 49 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 49 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 49 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 49 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 49 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MULTI           [ shift and go to state 44 ]
  ! DIV             [ shift and go to state 45 ]
  ! MODULO          [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 81

    (60) expresion -> expresion MAYOR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    ABS             reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    SQRT            reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MAS             [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 82

    (61) expresion -> expresion MENOR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 61 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 61 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 61 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 61 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 61 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 61 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 61 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 61 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    ABS             reduce using rule 61 (expresion -> expresion MENOR expresion .)
    SQRT            reduce using rule 61 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 61 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 61 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 61 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 61 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MAS             [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 83

    (62) expresion -> expresion MAYOR_I expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    ABS             reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    SQRT            reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 62 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MAS             [ reduce using rule 62 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 62 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 84

    (63) expresion -> expresion MENOR_I expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    ABS             reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    SQRT            reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 63 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MAS             [ reduce using rule 63 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 63 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 63 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 63 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 85

    (64) expresion -> expresion D_IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    ABS             reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    SQRT            reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 64 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54

  ! MAS             [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 64 (expresion -> expresion D_IGUAL expresion .) ]


state 86

    (65) expresion -> expresion NO_IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    ABS             reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    SQRT            reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46

  ! MAS             [ reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_I         [ shift and go to state 49 ]
  ! MENOR_I         [ shift and go to state 50 ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! NO_IGUAL        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 87

    (66) expresion -> expresion OR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 66 (expresion -> expresion OR expresion .)
    OR              reduce using rule 66 (expresion -> expresion OR expresion .)
    AND             reduce using rule 66 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 66 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 66 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 66 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 66 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 66 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 66 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 66 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 66 (expresion -> expresion OR expresion .)
    INT             reduce using rule 66 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 66 (expresion -> expresion OR expresion .)
    ABS             reduce using rule 66 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 66 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 66 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 66 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 66 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 66 (expresion -> expresion OR expresion .)
    ID              reduce using rule 66 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 66 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 66 (expresion -> expresion OR expresion .)
    IF              reduce using rule 66 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 66 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    NO_IGUAL        shift and go to state 52

  ! MAS             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 88

    (67) expresion -> expresion AND expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 67 (expresion -> expresion AND expresion .)
    OR              reduce using rule 67 (expresion -> expresion AND expresion .)
    AND             reduce using rule 67 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 67 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 67 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 67 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 67 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 67 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 67 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 67 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 67 (expresion -> expresion AND expresion .)
    INT             reduce using rule 67 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 67 (expresion -> expresion AND expresion .)
    ABS             reduce using rule 67 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 67 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 67 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 67 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 67 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 67 (expresion -> expresion AND expresion .)
    ID              reduce using rule 67 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 67 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 67 (expresion -> expresion AND expresion .)
    IF              reduce using rule 67 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 67 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    NO_IGUAL        shift and go to state 52

  ! MAS             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 51 ]
  ! OR              [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]


state 89

    (17) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_D           shift and go to state 106
    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    instruccion                    shift and go to state 12
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7

state 90

    (51) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 107


state 91

    (69) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    ABS             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    SQRT            reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 69 (expresion -> PAR_I expresion PAR_D .)


state 92

    (52) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 108


state 93

    (53) expresion -> ABS PAR_I expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 109
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 94

    (54) expresion -> SQRT PAR_I expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 110
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 95

    (31) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (32) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (33) case_list_exp -> . case_list_exp case_exp
    (34) case_list_exp -> . case_exp
    (35) case_exp -> . exp_list IGUAL MAYOR expresion
    (36) case_exp -> . exp_list IGUAL MAYOR expresion COMA
    (29) exp_list -> . exp_list BARRA expresion
    (30) exp_list -> . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 96
    case_list_exp                  shift and go to state 111
    case_exp                       shift and go to state 112
    exp_list                       shift and go to state 113
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 96

    (30) exp_list -> expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 30 (exp_list -> expresion .)
    BARRA           reduce using rule 30 (exp_list -> expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 97

    (21) match -> MATCH expresion LLV_I case_list . LLV_D
    (22) match -> MATCH expresion LLV_I case_list . default LLV_D
    (23) case_list -> case_list . case
    (27) default -> . GUION_B IGUAL MAYOR statement
    (28) default -> . GUION_B IGUAL MAYOR instruccion
    (25) case -> . exp_list IGUAL MAYOR statement
    (26) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (29) exp_list -> . exp_list BARRA expresion
    (30) exp_list -> . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    LLV_D           shift and go to state 114
    GUION_B         shift and go to state 117
    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 96
    default                        shift and go to state 115
    case                           shift and go to state 116
    exp_list                       shift and go to state 99
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 98

    (24) case_list -> case .

    LLV_D           reduce using rule 24 (case_list -> case .)
    GUION_B         reduce using rule 24 (case_list -> case .)
    MENOS           reduce using rule 24 (case_list -> case .)
    INT             reduce using rule 24 (case_list -> case .)
    FLOAT           reduce using rule 24 (case_list -> case .)
    ABS             reduce using rule 24 (case_list -> case .)
    SQRT            reduce using rule 24 (case_list -> case .)
    ENTERO          reduce using rule 24 (case_list -> case .)
    DECIMAL         reduce using rule 24 (case_list -> case .)
    TRUE            reduce using rule 24 (case_list -> case .)
    FALSE           reduce using rule 24 (case_list -> case .)
    ID              reduce using rule 24 (case_list -> case .)
    NOT             reduce using rule 24 (case_list -> case .)
    PAR_I           reduce using rule 24 (case_list -> case .)
    IF              reduce using rule 24 (case_list -> case .)
    MATCH           reduce using rule 24 (case_list -> case .)


state 99

    (25) case -> exp_list . IGUAL MAYOR statement
    (26) case -> exp_list . IGUAL MAYOR instruccion_no_pt COMA
    (29) exp_list -> exp_list . BARRA expresion

    IGUAL           shift and go to state 118
    BARRA           shift and go to state 119


state 100

    (40) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 120
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 101

    (39) asignacion -> LET MUT ID IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 39 (asignacion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 39 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 102

    (41) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 121


state 103

    (18) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 122
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 104

    (15) else -> ELSE statement .

    EJECUTAR        reduce using rule 15 (else -> ELSE statement .)
    LET             reduce using rule 15 (else -> ELSE statement .)
    IF              reduce using rule 15 (else -> ELSE statement .)
    MATCH           reduce using rule 15 (else -> ELSE statement .)
    $end            reduce using rule 15 (else -> ELSE statement .)
    LLV_D           reduce using rule 15 (else -> ELSE statement .)
    COMA            reduce using rule 15 (else -> ELSE statement .)


state 105

    (16) else -> ELSE if .

    EJECUTAR        reduce using rule 16 (else -> ELSE if .)
    LET             reduce using rule 16 (else -> ELSE if .)
    IF              reduce using rule 16 (else -> ELSE if .)
    MATCH           reduce using rule 16 (else -> ELSE if .)
    $end            reduce using rule 16 (else -> ELSE if .)
    LLV_D           reduce using rule 16 (else -> ELSE if .)
    COMA            reduce using rule 16 (else -> ELSE if .)


state 106

    (17) statement -> LLV_I instrucciones LLV_D .

    ELSE            reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    EJECUTAR        reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    ABS             reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    SQRT            reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 17 (statement -> LLV_I instrucciones LLV_D .)


state 107

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 123


state 108

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 124


state 109

    (53) expresion -> ABS PAR_I expresion PAR_D .

    MAS             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOS           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MULTI           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    DIV             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MODULO          reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    OR              reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    AND             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    COMA            reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    BARRA           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    INT             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    ABS             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    SQRT            reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    TRUE            reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    FALSE           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    ID              reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    NOT             reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    IF              reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)
    MATCH           reduce using rule 53 (expresion -> ABS PAR_I expresion PAR_D .)


state 110

    (54) expresion -> SQRT PAR_I expresion PAR_D .

    MAS             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOS           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MULTI           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    DIV             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MODULO          reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    OR              reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    AND             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    COMA            reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    BARRA           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    INT             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    ABS             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    SQRT            reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    TRUE            reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    FALSE           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    ID              reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    NOT             reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    IF              reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)
    MATCH           reduce using rule 54 (expresion -> SQRT PAR_I expresion PAR_D .)


state 111

    (31) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (32) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (33) case_list_exp -> case_list_exp . case_exp
    (37) default_exp -> . GUION_B IGUAL MAYOR expresion
    (35) case_exp -> . exp_list IGUAL MAYOR expresion
    (36) case_exp -> . exp_list IGUAL MAYOR expresion COMA
    (29) exp_list -> . exp_list BARRA expresion
    (30) exp_list -> . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    LLV_D           shift and go to state 125
    GUION_B         shift and go to state 128
    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 96
    default_exp                    shift and go to state 126
    case_exp                       shift and go to state 127
    exp_list                       shift and go to state 113
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 112

    (34) case_list_exp -> case_exp .

    LLV_D           reduce using rule 34 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 34 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 34 (case_list_exp -> case_exp .)
    INT             reduce using rule 34 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 34 (case_list_exp -> case_exp .)
    ABS             reduce using rule 34 (case_list_exp -> case_exp .)
    SQRT            reduce using rule 34 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 34 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 34 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 34 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 34 (case_list_exp -> case_exp .)
    ID              reduce using rule 34 (case_list_exp -> case_exp .)
    NOT             reduce using rule 34 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 34 (case_list_exp -> case_exp .)
    IF              reduce using rule 34 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 34 (case_list_exp -> case_exp .)


state 113

    (35) case_exp -> exp_list . IGUAL MAYOR expresion
    (36) case_exp -> exp_list . IGUAL MAYOR expresion COMA
    (29) exp_list -> exp_list . BARRA expresion

    IGUAL           shift and go to state 129
    BARRA           shift and go to state 119


state 114

    (21) match -> MATCH expresion LLV_I case_list LLV_D .

    EJECUTAR        reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    $end            reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LLV_D           reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 21 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 115

    (22) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 130


state 116

    (23) case_list -> case_list case .

    LLV_D           reduce using rule 23 (case_list -> case_list case .)
    GUION_B         reduce using rule 23 (case_list -> case_list case .)
    MENOS           reduce using rule 23 (case_list -> case_list case .)
    INT             reduce using rule 23 (case_list -> case_list case .)
    FLOAT           reduce using rule 23 (case_list -> case_list case .)
    ABS             reduce using rule 23 (case_list -> case_list case .)
    SQRT            reduce using rule 23 (case_list -> case_list case .)
    ENTERO          reduce using rule 23 (case_list -> case_list case .)
    DECIMAL         reduce using rule 23 (case_list -> case_list case .)
    TRUE            reduce using rule 23 (case_list -> case_list case .)
    FALSE           reduce using rule 23 (case_list -> case_list case .)
    ID              reduce using rule 23 (case_list -> case_list case .)
    NOT             reduce using rule 23 (case_list -> case_list case .)
    PAR_I           reduce using rule 23 (case_list -> case_list case .)
    IF              reduce using rule 23 (case_list -> case_list case .)
    MATCH           reduce using rule 23 (case_list -> case_list case .)


state 117

    (27) default -> GUION_B . IGUAL MAYOR statement
    (28) default -> GUION_B . IGUAL MAYOR instruccion

    IGUAL           shift and go to state 131


state 118

    (25) case -> exp_list IGUAL . MAYOR statement
    (26) case -> exp_list IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 132


state 119

    (29) exp_list -> exp_list BARRA . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 133
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 120

    (40) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 40 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 40 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 121

    (41) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 134
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 122

    (18) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (19) exp_else -> . ELSE LLV_I expresion LLV_D
    (20) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 136

    exp_else                       shift and go to state 135

state 123

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 137
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 124

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 138
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 125

    (31) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    MAS             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ABS             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    SQRT            reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 31 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 126

    (32) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 139


state 127

    (33) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    ABS             reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    SQRT            reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 33 (case_list_exp -> case_list_exp case_exp .)


state 128

    (37) default_exp -> GUION_B . IGUAL MAYOR expresion

    IGUAL           shift and go to state 140


state 129

    (35) case_exp -> exp_list IGUAL . MAYOR expresion
    (36) case_exp -> exp_list IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 141


state 130

    (22) match -> MATCH expresion LLV_I case_list default LLV_D .

    EJECUTAR        reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    $end            reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LLV_D           reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 22 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 131

    (27) default -> GUION_B IGUAL . MAYOR statement
    (28) default -> GUION_B IGUAL . MAYOR instruccion

    MAYOR           shift and go to state 142


state 132

    (25) case -> exp_list IGUAL MAYOR . statement
    (26) case -> exp_list IGUAL MAYOR . instruccion_no_pt COMA
    (17) statement -> . LLV_I instrucciones LLV_D
    (8) instruccion_no_pt -> . ejecutar
    (9) instruccion_no_pt -> . asignacion
    (10) instruccion_no_pt -> . if
    (11) instruccion_no_pt -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_I           shift and go to state 55
    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    statement                      shift and go to state 143
    instruccion_no_pt              shift and go to state 144
    ejecutar                       shift and go to state 145
    asignacion                     shift and go to state 146
    if                             shift and go to state 147
    match                          shift and go to state 148

state 133

    (29) exp_list -> exp_list BARRA expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 29 (exp_list -> exp_list BARRA expresion .)
    BARRA           reduce using rule 29 (exp_list -> exp_list BARRA expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 134

    (41) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 41 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 41 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 135

    (18) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ABS             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    SQRT            reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 18 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 136

    (19) exp_else -> ELSE . LLV_I expresion LLV_D
    (20) exp_else -> ELSE . exp_if
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 149
    IF              shift and go to state 18

    exp_if                         shift and go to state 150

state 137

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    COMA            shift and go to state 151
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 138

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    COMA            shift and go to state 152
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 139

    (32) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    MAS             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ABS             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    SQRT            reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 32 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 140

    (37) default_exp -> GUION_B IGUAL . MAYOR expresion

    MAYOR           shift and go to state 153


state 141

    (35) case_exp -> exp_list IGUAL MAYOR . expresion
    (36) case_exp -> exp_list IGUAL MAYOR . expresion COMA
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 154
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 142

    (27) default -> GUION_B IGUAL MAYOR . statement
    (28) default -> GUION_B IGUAL MAYOR . instruccion
    (17) statement -> . LLV_I instrucciones LLV_D
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (12) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (38) asignacion -> . LET ID IGUAL expresion
    (39) asignacion -> . LET MUT ID IGUAL expresion
    (40) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (41) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (13) if -> . IF expresion statement
    (14) if -> . IF expresion statement else
    (21) match -> . MATCH expresion LLV_I case_list LLV_D
    (22) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_I           shift and go to state 55
    EJECUTAR        shift and go to state 8
    LET             shift and go to state 9
    IF              shift and go to state 10
    MATCH           shift and go to state 11

    statement                      shift and go to state 155
    instruccion                    shift and go to state 156
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7

state 143

    (25) case -> exp_list IGUAL MAYOR statement .

    LLV_D           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    GUION_B         reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    MENOS           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    INT             reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    FLOAT           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    ABS             reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    SQRT            reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    ENTERO          reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    TRUE            reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    FALSE           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    ID              reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    NOT             reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    PAR_I           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    IF              reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)
    MATCH           reduce using rule 25 (case -> exp_list IGUAL MAYOR statement .)


state 144

    (26) case -> exp_list IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 157


state 145

    (8) instruccion_no_pt -> ejecutar .

    COMA            reduce using rule 8 (instruccion_no_pt -> ejecutar .)


state 146

    (9) instruccion_no_pt -> asignacion .

    COMA            reduce using rule 9 (instruccion_no_pt -> asignacion .)


state 147

    (10) instruccion_no_pt -> if .

    COMA            reduce using rule 10 (instruccion_no_pt -> if .)


state 148

    (11) instruccion_no_pt -> match .

    COMA            reduce using rule 11 (instruccion_no_pt -> match .)


state 149

    (19) exp_else -> ELSE LLV_I . expresion LLV_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 158
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 150

    (20) exp_else -> ELSE exp_if .

    MAS             reduce using rule 20 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 20 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 20 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 20 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 20 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 20 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 20 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 20 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 20 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 20 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 20 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 20 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 20 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 20 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 20 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 20 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 20 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 20 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 20 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 20 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 20 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 20 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 20 (exp_else -> ELSE exp_if .)
    ABS             reduce using rule 20 (exp_else -> ELSE exp_if .)
    SQRT            reduce using rule 20 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 20 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 20 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 20 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 20 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 20 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 20 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 20 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 20 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 20 (exp_else -> ELSE exp_if .)


state 151

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 159
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 152

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 160
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 153

    (37) default_exp -> GUION_B IGUAL MAYOR . expresion
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion MULTI expresion
    (48) expresion -> . expresion DIV expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (52) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (53) expresion -> . ABS PAR_I expresion PAR_D
    (54) expresion -> . SQRT PAR_I expresion PAR_D
    (55) expresion -> . ENTERO
    (56) expresion -> . DECIMAL
    (57) expresion -> . TRUE
    (58) expresion -> . FALSE
    (59) expresion -> . ID
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYOR_I expresion
    (63) expresion -> . expresion MENOR_I expresion
    (64) expresion -> . expresion D_IGUAL expresion
    (65) expresion -> . expresion NO_IGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . PAR_I expresion PAR_D
    (70) expresion -> . exp_if
    (71) expresion -> . match_exp
    (18) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (31) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (32) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 23
    ABS             shift and go to state 24
    SQRT            shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ID              shift and go to state 30
    NOT             shift and go to state 31
    PAR_I           shift and go to state 22
    IF              shift and go to state 18
    MATCH           shift and go to state 34

    expresion                      shift and go to state 161
    exp_if                         shift and go to state 32
    match_exp                      shift and go to state 33

state 154

    (35) case_exp -> exp_list IGUAL MAYOR expresion .
    (36) case_exp -> exp_list IGUAL MAYOR expresion . COMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    INT             reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ABS             reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    SQRT            reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    TRUE            reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    FALSE           reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ID              reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    NOT             reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    IF              reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    MATCH           reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .)
    COMA            shift and go to state 162
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54

  ! MENOS           [ reduce using rule 35 (case_exp -> exp_list IGUAL MAYOR expresion .) ]


state 155

    (27) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 27 (default -> GUION_B IGUAL MAYOR statement .)


state 156

    (28) default -> GUION_B IGUAL MAYOR instruccion .

    LLV_D           reduce using rule 28 (default -> GUION_B IGUAL MAYOR instruccion .)


state 157

    (26) case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ABS             reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    SQRT            reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 26 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)


state 158

    (19) exp_else -> ELSE LLV_I expresion . LLV_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 163
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 159

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 164
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 160

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 165
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 161

    (37) default_exp -> GUION_B IGUAL MAYOR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . MULTI expresion
    (48) expresion -> expresion . DIV expresion
    (49) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYOR_I expresion
    (63) expresion -> expresion . MENOR_I expresion
    (64) expresion -> expresion . D_IGUAL expresion
    (65) expresion -> expresion . NO_IGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 37 (default_exp -> GUION_B IGUAL MAYOR expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    MULTI           shift and go to state 44
    DIV             shift and go to state 45
    MODULO          shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_I         shift and go to state 49
    MENOR_I         shift and go to state 50
    D_IGUAL         shift and go to state 51
    NO_IGUAL        shift and go to state 52
    OR              shift and go to state 53
    AND             shift and go to state 54


state 162

    (36) case_exp -> exp_list IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ABS             reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    SQRT            reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 36 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)


state 163

    (19) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ABS             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    SQRT            reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 19 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 164

    (51) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 51 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 165

    (52) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 52 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 85 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
