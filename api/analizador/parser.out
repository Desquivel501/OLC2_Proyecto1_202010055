Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    PRINT
    STR
    STRING
    TO_OWNED
    TO_STRING

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     instruccion -> match
Rule 8     instruccion -> while
Rule 9     instruccion -> loop
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion_no_pt -> ejecutar
Rule 13    instruccion_no_pt -> asignacion
Rule 14    instruccion_no_pt -> if
Rule 15    instruccion_no_pt -> match
Rule 16    ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 17    if -> IF expresion statement
Rule 18    if -> IF expresion statement else
Rule 19    else -> ELSE statement
Rule 20    else -> ELSE if
Rule 21    statement -> LLV_I instrucciones LLV_D
Rule 22    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 23    exp_else -> ELSE LLV_I expresion LLV_D
Rule 24    exp_else -> ELSE exp_if
Rule 25    match -> MATCH expresion LLV_I case_list LLV_D
Rule 26    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 27    case_list -> case_list case
Rule 28    case_list -> case
Rule 29    case -> exp_list IGUAL MAYOR statement
Rule 30    case -> exp_list IGUAL MAYOR instruccion_no_pt COMA
Rule 31    default -> GUION_B IGUAL MAYOR statement
Rule 32    default -> GUION_B IGUAL MAYOR instruccion
Rule 33    exp_list -> exp_list BARRA expresion
Rule 34    exp_list -> expresion
Rule 35    match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 36    match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 37    case_list_exp -> case_list_exp case_exp
Rule 38    case_list_exp -> case_exp
Rule 39    case_exp -> exp_list IGUAL MAYOR expresion
Rule 40    case_exp -> exp_list IGUAL MAYOR expresion COMA
Rule 41    default_exp -> GUION_B IGUAL MAYOR expresion
Rule 42    while -> WHILE expresion statement
Rule 43    break -> BREAK PUNTOCOMA
Rule 44    break -> BREAK expresion PUNTOCOMA
Rule 45    continue -> CONTINUE PUNTOCOMA
Rule 46    loop -> LOOP statement
Rule 47    loop_exp -> LOOP statement
Rule 48    asignacion -> LET ID IGUAL expresion
Rule 49    asignacion -> LET MUT ID IGUAL expresion
Rule 50    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 51    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 52    asignacion -> ID IGUAL expresion
Rule 53    tipo -> INT
Rule 54    tipo -> FLOAT
Rule 55    tipo -> BOOL
Rule 56    expresion -> expresion MAS expresion
Rule 57    expresion -> expresion MENOS expresion
Rule 58    expresion -> expresion MULTI expresion
Rule 59    expresion -> expresion DIV expresion
Rule 60    expresion -> expresion MODULO expresion
Rule 61    expresion -> MENOS expresion
Rule 62    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 63    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 64    expresion -> ABS PAR_I expresion PAR_D
Rule 65    expresion -> SQRT PAR_I expresion PAR_D
Rule 66    expresion -> ENTERO
Rule 67    expresion -> DECIMAL
Rule 68    expresion -> TRUE
Rule 69    expresion -> FALSE
Rule 70    expresion -> ID
Rule 71    expresion -> expresion MAYOR expresion
Rule 72    expresion -> expresion MENOR expresion
Rule 73    expresion -> expresion MAYOR_I expresion
Rule 74    expresion -> expresion MENOR_I expresion
Rule 75    expresion -> expresion D_IGUAL expresion
Rule 76    expresion -> expresion NO_IGUAL expresion
Rule 77    expresion -> expresion OR expresion
Rule 78    expresion -> expresion AND expresion
Rule 79    expresion -> NOT expresion
Rule 80    expresion -> PAR_I expresion PAR_D
Rule 81    expresion -> exp_if
Rule 82    expresion -> match_exp

Terminals, with rules where they appear

ABS                  : 64
AND                  : 78
BARRA                : 33
BOOL                 : 55
BREAK                : 43 44
CHAR                 : 
COMA                 : 30 40 62 63
CONTINUE             : 45
DECIMAL              : 67
DIV                  : 59
D_IGUAL              : 75
D_PUNTO              : 50 51 62 62 63 63
EJECUTAR             : 16
ELSE                 : 19 20 23 24
ENTERO               : 66
FALSE                : 69
FLOAT                : 54 63
GUION_B              : 31 32 41
ID                   : 48 49 50 51 52 70
IF                   : 17 18 22
IGUAL                : 29 30 31 32 39 40 41 48 49 50 51 52
INT                  : 53 62
LET                  : 48 49 50 51
LLV_D                : 21 22 23 25 26 35 36
LLV_I                : 21 22 23 25 26 35 36
LOOP                 : 46 47
MAS                  : 56
MATCH                : 25 26 35 36
MAYOR                : 29 30 31 32 39 40 41 71
MAYOR_I              : 73
MENOR                : 72
MENOR_I              : 74
MENOS                : 57 61
MODULO               : 60
MULTI                : 58
MUT                  : 49 51
NOT                  : 79
NO_IGUAL             : 76
OR                   : 77
PAR_D                : 16 62 63 64 65 80
PAR_I                : 16 62 63 64 65 80
POW_FLOAT            : 63
POW_INT              : 62
PRINT                : 
PUNTOCOMA            : 4 5 43 44 45
SQRT                 : 65
STR                  : 
STRING               : 
TO_OWNED             : 
TO_STRING            : 
TRUE                 : 68
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

asignacion           : 5 13
break                : 10
case                 : 27 28
case_exp             : 37 38
case_list            : 25 26 27
case_list_exp        : 35 36 37
continue             : 11
default              : 26
default_exp          : 36
ejecutar             : 4 12
else                 : 18
exp_else             : 22
exp_if               : 24 81
exp_list             : 29 30 33 39 40
expresion            : 16 17 18 22 22 23 25 26 33 34 35 36 39 40 41 42 44 48 49 50 51 52 56 56 57 57 58 58 59 59 60 60 61 62 62 63 63 64 65 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 80
if                   : 6 14 20
ini                  : 0
instruccion          : 2 3 32
instruccion_no_pt    : 30
instrucciones        : 1 2 21
loop                 : 9
loop_exp             : 
match                : 7 15
match_exp            : 82
statement            : 17 18 19 29 31 42 46 47
tipo                 : 50 51
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D
    (42) while -> . WHILE expresion statement
    (46) loop -> . LOOP statement
    (43) break -> . BREAK PUNTOCOMA
    (44) break -> . BREAK expresion PUNTOCOMA
    (45) continue -> . CONTINUE PUNTOCOMA

    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    LOOP            shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D
    (42) while -> . WHILE expresion statement
    (46) loop -> . LOOP statement
    (43) break -> . BREAK PUNTOCOMA
    (44) break -> . BREAK expresion PUNTOCOMA
    (45) continue -> . CONTINUE PUNTOCOMA

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    LOOP            shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20

    instruccion                    shift and go to state 21
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 22


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 23


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    ID              reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    MATCH           reduce using rule 6 (instruccion -> if .)
    WHILE           reduce using rule 6 (instruccion -> if .)
    LOOP            reduce using rule 6 (instruccion -> if .)
    BREAK           reduce using rule 6 (instruccion -> if .)
    CONTINUE        reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) instruccion -> match .

    EJECUTAR        reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    WHILE           reduce using rule 7 (instruccion -> match .)
    LOOP            reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLV_D           reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> while .

    EJECUTAR        reduce using rule 8 (instruccion -> while .)
    LET             reduce using rule 8 (instruccion -> while .)
    ID              reduce using rule 8 (instruccion -> while .)
    IF              reduce using rule 8 (instruccion -> while .)
    MATCH           reduce using rule 8 (instruccion -> while .)
    WHILE           reduce using rule 8 (instruccion -> while .)
    LOOP            reduce using rule 8 (instruccion -> while .)
    BREAK           reduce using rule 8 (instruccion -> while .)
    CONTINUE        reduce using rule 8 (instruccion -> while .)
    $end            reduce using rule 8 (instruccion -> while .)
    LLV_D           reduce using rule 8 (instruccion -> while .)


state 9

    (9) instruccion -> loop .

    EJECUTAR        reduce using rule 9 (instruccion -> loop .)
    LET             reduce using rule 9 (instruccion -> loop .)
    ID              reduce using rule 9 (instruccion -> loop .)
    IF              reduce using rule 9 (instruccion -> loop .)
    MATCH           reduce using rule 9 (instruccion -> loop .)
    WHILE           reduce using rule 9 (instruccion -> loop .)
    LOOP            reduce using rule 9 (instruccion -> loop .)
    BREAK           reduce using rule 9 (instruccion -> loop .)
    CONTINUE        reduce using rule 9 (instruccion -> loop .)
    $end            reduce using rule 9 (instruccion -> loop .)
    LLV_D           reduce using rule 9 (instruccion -> loop .)


state 10

    (10) instruccion -> break .

    EJECUTAR        reduce using rule 10 (instruccion -> break .)
    LET             reduce using rule 10 (instruccion -> break .)
    ID              reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    MATCH           reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    LOOP            reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLV_D           reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    EJECUTAR        reduce using rule 11 (instruccion -> continue .)
    LET             reduce using rule 11 (instruccion -> continue .)
    ID              reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    MATCH           reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    LOOP            reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLV_D           reduce using rule 11 (instruccion -> continue .)


state 12

    (16) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 24


state 13

    (48) asignacion -> LET . ID IGUAL expresion
    (49) asignacion -> LET . MUT ID IGUAL expresion
    (50) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 25
    MUT             shift and go to state 26


state 14

    (52) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 27


state 15

    (17) if -> IF . expresion statement
    (18) if -> IF . expresion statement else
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 29
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 16

    (25) match -> MATCH . expresion LLV_I case_list LLV_D
    (26) match -> MATCH . expresion LLV_I case_list default LLV_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 45
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 17

    (42) while -> WHILE . expresion statement
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 46
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 18

    (46) loop -> LOOP . statement
    (21) statement -> . LLV_I instrucciones LLV_D

    LLV_I           shift and go to state 48

    statement                      shift and go to state 47

state 19

    (43) break -> BREAK . PUNTOCOMA
    (44) break -> BREAK . expresion PUNTOCOMA
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    PUNTOCOMA       shift and go to state 49
    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 50
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 20

    (45) continue -> CONTINUE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 51


state 21

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 22

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LOOP            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 23

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LOOP            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 24

    (16) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 52
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 25

    (48) asignacion -> LET ID . IGUAL expresion
    (50) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 53
    D_PUNTO         shift and go to state 54


state 26

    (49) asignacion -> LET MUT . ID IGUAL expresion
    (51) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 55


state 27

    (52) asignacion -> ID IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 56
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 28

    (22) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 57
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 29

    (17) if -> IF expresion . statement
    (18) if -> IF expresion . statement else
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion
    (21) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71
    LLV_I           shift and go to state 48

    statement                      shift and go to state 58

state 30

    (61) expresion -> MENOS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 72
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 31

    (62) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 73


state 32

    (80) expresion -> PAR_I . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 74
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 33

    (63) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 75


state 34

    (64) expresion -> ABS . PAR_I expresion PAR_D

    PAR_I           shift and go to state 76


state 35

    (65) expresion -> SQRT . PAR_I expresion PAR_D

    PAR_I           shift and go to state 77


state 36

    (66) expresion -> ENTERO .

    MAS             reduce using rule 66 (expresion -> ENTERO .)
    MENOS           reduce using rule 66 (expresion -> ENTERO .)
    MULTI           reduce using rule 66 (expresion -> ENTERO .)
    DIV             reduce using rule 66 (expresion -> ENTERO .)
    MODULO          reduce using rule 66 (expresion -> ENTERO .)
    MAYOR           reduce using rule 66 (expresion -> ENTERO .)
    MENOR           reduce using rule 66 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 66 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 66 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 66 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 66 (expresion -> ENTERO .)
    OR              reduce using rule 66 (expresion -> ENTERO .)
    AND             reduce using rule 66 (expresion -> ENTERO .)
    LLV_I           reduce using rule 66 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 66 (expresion -> ENTERO .)
    PAR_D           reduce using rule 66 (expresion -> ENTERO .)
    COMA            reduce using rule 66 (expresion -> ENTERO .)
    IGUAL           reduce using rule 66 (expresion -> ENTERO .)
    BARRA           reduce using rule 66 (expresion -> ENTERO .)
    LLV_D           reduce using rule 66 (expresion -> ENTERO .)
    GUION_B         reduce using rule 66 (expresion -> ENTERO .)
    INT             reduce using rule 66 (expresion -> ENTERO .)
    FLOAT           reduce using rule 66 (expresion -> ENTERO .)
    ABS             reduce using rule 66 (expresion -> ENTERO .)
    SQRT            reduce using rule 66 (expresion -> ENTERO .)
    ENTERO          reduce using rule 66 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 66 (expresion -> ENTERO .)
    TRUE            reduce using rule 66 (expresion -> ENTERO .)
    FALSE           reduce using rule 66 (expresion -> ENTERO .)
    ID              reduce using rule 66 (expresion -> ENTERO .)
    NOT             reduce using rule 66 (expresion -> ENTERO .)
    PAR_I           reduce using rule 66 (expresion -> ENTERO .)
    IF              reduce using rule 66 (expresion -> ENTERO .)
    MATCH           reduce using rule 66 (expresion -> ENTERO .)


state 37

    (67) expresion -> DECIMAL .

    MAS             reduce using rule 67 (expresion -> DECIMAL .)
    MENOS           reduce using rule 67 (expresion -> DECIMAL .)
    MULTI           reduce using rule 67 (expresion -> DECIMAL .)
    DIV             reduce using rule 67 (expresion -> DECIMAL .)
    MODULO          reduce using rule 67 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 67 (expresion -> DECIMAL .)
    MENOR           reduce using rule 67 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 67 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 67 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 67 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 67 (expresion -> DECIMAL .)
    OR              reduce using rule 67 (expresion -> DECIMAL .)
    AND             reduce using rule 67 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 67 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 67 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 67 (expresion -> DECIMAL .)
    COMA            reduce using rule 67 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 67 (expresion -> DECIMAL .)
    BARRA           reduce using rule 67 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 67 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 67 (expresion -> DECIMAL .)
    INT             reduce using rule 67 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 67 (expresion -> DECIMAL .)
    ABS             reduce using rule 67 (expresion -> DECIMAL .)
    SQRT            reduce using rule 67 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 67 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 67 (expresion -> DECIMAL .)
    TRUE            reduce using rule 67 (expresion -> DECIMAL .)
    FALSE           reduce using rule 67 (expresion -> DECIMAL .)
    ID              reduce using rule 67 (expresion -> DECIMAL .)
    NOT             reduce using rule 67 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 67 (expresion -> DECIMAL .)
    IF              reduce using rule 67 (expresion -> DECIMAL .)
    MATCH           reduce using rule 67 (expresion -> DECIMAL .)


state 38

    (68) expresion -> TRUE .

    MAS             reduce using rule 68 (expresion -> TRUE .)
    MENOS           reduce using rule 68 (expresion -> TRUE .)
    MULTI           reduce using rule 68 (expresion -> TRUE .)
    DIV             reduce using rule 68 (expresion -> TRUE .)
    MODULO          reduce using rule 68 (expresion -> TRUE .)
    MAYOR           reduce using rule 68 (expresion -> TRUE .)
    MENOR           reduce using rule 68 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 68 (expresion -> TRUE .)
    MENOR_I         reduce using rule 68 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 68 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 68 (expresion -> TRUE .)
    OR              reduce using rule 68 (expresion -> TRUE .)
    AND             reduce using rule 68 (expresion -> TRUE .)
    LLV_I           reduce using rule 68 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 68 (expresion -> TRUE .)
    PAR_D           reduce using rule 68 (expresion -> TRUE .)
    COMA            reduce using rule 68 (expresion -> TRUE .)
    IGUAL           reduce using rule 68 (expresion -> TRUE .)
    BARRA           reduce using rule 68 (expresion -> TRUE .)
    LLV_D           reduce using rule 68 (expresion -> TRUE .)
    GUION_B         reduce using rule 68 (expresion -> TRUE .)
    INT             reduce using rule 68 (expresion -> TRUE .)
    FLOAT           reduce using rule 68 (expresion -> TRUE .)
    ABS             reduce using rule 68 (expresion -> TRUE .)
    SQRT            reduce using rule 68 (expresion -> TRUE .)
    ENTERO          reduce using rule 68 (expresion -> TRUE .)
    DECIMAL         reduce using rule 68 (expresion -> TRUE .)
    TRUE            reduce using rule 68 (expresion -> TRUE .)
    FALSE           reduce using rule 68 (expresion -> TRUE .)
    ID              reduce using rule 68 (expresion -> TRUE .)
    NOT             reduce using rule 68 (expresion -> TRUE .)
    PAR_I           reduce using rule 68 (expresion -> TRUE .)
    IF              reduce using rule 68 (expresion -> TRUE .)
    MATCH           reduce using rule 68 (expresion -> TRUE .)


state 39

    (69) expresion -> FALSE .

    MAS             reduce using rule 69 (expresion -> FALSE .)
    MENOS           reduce using rule 69 (expresion -> FALSE .)
    MULTI           reduce using rule 69 (expresion -> FALSE .)
    DIV             reduce using rule 69 (expresion -> FALSE .)
    MODULO          reduce using rule 69 (expresion -> FALSE .)
    MAYOR           reduce using rule 69 (expresion -> FALSE .)
    MENOR           reduce using rule 69 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 69 (expresion -> FALSE .)
    MENOR_I         reduce using rule 69 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 69 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 69 (expresion -> FALSE .)
    OR              reduce using rule 69 (expresion -> FALSE .)
    AND             reduce using rule 69 (expresion -> FALSE .)
    LLV_I           reduce using rule 69 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 69 (expresion -> FALSE .)
    PAR_D           reduce using rule 69 (expresion -> FALSE .)
    COMA            reduce using rule 69 (expresion -> FALSE .)
    IGUAL           reduce using rule 69 (expresion -> FALSE .)
    BARRA           reduce using rule 69 (expresion -> FALSE .)
    LLV_D           reduce using rule 69 (expresion -> FALSE .)
    GUION_B         reduce using rule 69 (expresion -> FALSE .)
    INT             reduce using rule 69 (expresion -> FALSE .)
    FLOAT           reduce using rule 69 (expresion -> FALSE .)
    ABS             reduce using rule 69 (expresion -> FALSE .)
    SQRT            reduce using rule 69 (expresion -> FALSE .)
    ENTERO          reduce using rule 69 (expresion -> FALSE .)
    DECIMAL         reduce using rule 69 (expresion -> FALSE .)
    TRUE            reduce using rule 69 (expresion -> FALSE .)
    FALSE           reduce using rule 69 (expresion -> FALSE .)
    ID              reduce using rule 69 (expresion -> FALSE .)
    NOT             reduce using rule 69 (expresion -> FALSE .)
    PAR_I           reduce using rule 69 (expresion -> FALSE .)
    IF              reduce using rule 69 (expresion -> FALSE .)
    MATCH           reduce using rule 69 (expresion -> FALSE .)


state 40

    (70) expresion -> ID .

    MAS             reduce using rule 70 (expresion -> ID .)
    MENOS           reduce using rule 70 (expresion -> ID .)
    MULTI           reduce using rule 70 (expresion -> ID .)
    DIV             reduce using rule 70 (expresion -> ID .)
    MODULO          reduce using rule 70 (expresion -> ID .)
    MAYOR           reduce using rule 70 (expresion -> ID .)
    MENOR           reduce using rule 70 (expresion -> ID .)
    MAYOR_I         reduce using rule 70 (expresion -> ID .)
    MENOR_I         reduce using rule 70 (expresion -> ID .)
    D_IGUAL         reduce using rule 70 (expresion -> ID .)
    NO_IGUAL        reduce using rule 70 (expresion -> ID .)
    OR              reduce using rule 70 (expresion -> ID .)
    AND             reduce using rule 70 (expresion -> ID .)
    LLV_I           reduce using rule 70 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 70 (expresion -> ID .)
    PAR_D           reduce using rule 70 (expresion -> ID .)
    COMA            reduce using rule 70 (expresion -> ID .)
    IGUAL           reduce using rule 70 (expresion -> ID .)
    BARRA           reduce using rule 70 (expresion -> ID .)
    LLV_D           reduce using rule 70 (expresion -> ID .)
    GUION_B         reduce using rule 70 (expresion -> ID .)
    INT             reduce using rule 70 (expresion -> ID .)
    FLOAT           reduce using rule 70 (expresion -> ID .)
    ABS             reduce using rule 70 (expresion -> ID .)
    SQRT            reduce using rule 70 (expresion -> ID .)
    ENTERO          reduce using rule 70 (expresion -> ID .)
    DECIMAL         reduce using rule 70 (expresion -> ID .)
    TRUE            reduce using rule 70 (expresion -> ID .)
    FALSE           reduce using rule 70 (expresion -> ID .)
    ID              reduce using rule 70 (expresion -> ID .)
    NOT             reduce using rule 70 (expresion -> ID .)
    PAR_I           reduce using rule 70 (expresion -> ID .)
    IF              reduce using rule 70 (expresion -> ID .)
    MATCH           reduce using rule 70 (expresion -> ID .)


state 41

    (79) expresion -> NOT . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 78
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 42

    (81) expresion -> exp_if .

    MAS             reduce using rule 81 (expresion -> exp_if .)
    MENOS           reduce using rule 81 (expresion -> exp_if .)
    MULTI           reduce using rule 81 (expresion -> exp_if .)
    DIV             reduce using rule 81 (expresion -> exp_if .)
    MODULO          reduce using rule 81 (expresion -> exp_if .)
    MAYOR           reduce using rule 81 (expresion -> exp_if .)
    MENOR           reduce using rule 81 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 81 (expresion -> exp_if .)
    MENOR_I         reduce using rule 81 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 81 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 81 (expresion -> exp_if .)
    OR              reduce using rule 81 (expresion -> exp_if .)
    AND             reduce using rule 81 (expresion -> exp_if .)
    LLV_I           reduce using rule 81 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 81 (expresion -> exp_if .)
    PAR_D           reduce using rule 81 (expresion -> exp_if .)
    COMA            reduce using rule 81 (expresion -> exp_if .)
    IGUAL           reduce using rule 81 (expresion -> exp_if .)
    BARRA           reduce using rule 81 (expresion -> exp_if .)
    LLV_D           reduce using rule 81 (expresion -> exp_if .)
    GUION_B         reduce using rule 81 (expresion -> exp_if .)
    INT             reduce using rule 81 (expresion -> exp_if .)
    FLOAT           reduce using rule 81 (expresion -> exp_if .)
    ABS             reduce using rule 81 (expresion -> exp_if .)
    SQRT            reduce using rule 81 (expresion -> exp_if .)
    ENTERO          reduce using rule 81 (expresion -> exp_if .)
    DECIMAL         reduce using rule 81 (expresion -> exp_if .)
    TRUE            reduce using rule 81 (expresion -> exp_if .)
    FALSE           reduce using rule 81 (expresion -> exp_if .)
    ID              reduce using rule 81 (expresion -> exp_if .)
    NOT             reduce using rule 81 (expresion -> exp_if .)
    PAR_I           reduce using rule 81 (expresion -> exp_if .)
    IF              reduce using rule 81 (expresion -> exp_if .)
    MATCH           reduce using rule 81 (expresion -> exp_if .)


state 43

    (82) expresion -> match_exp .

    MAS             reduce using rule 82 (expresion -> match_exp .)
    MENOS           reduce using rule 82 (expresion -> match_exp .)
    MULTI           reduce using rule 82 (expresion -> match_exp .)
    DIV             reduce using rule 82 (expresion -> match_exp .)
    MODULO          reduce using rule 82 (expresion -> match_exp .)
    MAYOR           reduce using rule 82 (expresion -> match_exp .)
    MENOR           reduce using rule 82 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 82 (expresion -> match_exp .)
    MENOR_I         reduce using rule 82 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 82 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 82 (expresion -> match_exp .)
    OR              reduce using rule 82 (expresion -> match_exp .)
    AND             reduce using rule 82 (expresion -> match_exp .)
    LLV_I           reduce using rule 82 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 82 (expresion -> match_exp .)
    PAR_D           reduce using rule 82 (expresion -> match_exp .)
    COMA            reduce using rule 82 (expresion -> match_exp .)
    IGUAL           reduce using rule 82 (expresion -> match_exp .)
    BARRA           reduce using rule 82 (expresion -> match_exp .)
    LLV_D           reduce using rule 82 (expresion -> match_exp .)
    GUION_B         reduce using rule 82 (expresion -> match_exp .)
    INT             reduce using rule 82 (expresion -> match_exp .)
    FLOAT           reduce using rule 82 (expresion -> match_exp .)
    ABS             reduce using rule 82 (expresion -> match_exp .)
    SQRT            reduce using rule 82 (expresion -> match_exp .)
    ENTERO          reduce using rule 82 (expresion -> match_exp .)
    DECIMAL         reduce using rule 82 (expresion -> match_exp .)
    TRUE            reduce using rule 82 (expresion -> match_exp .)
    FALSE           reduce using rule 82 (expresion -> match_exp .)
    ID              reduce using rule 82 (expresion -> match_exp .)
    NOT             reduce using rule 82 (expresion -> match_exp .)
    PAR_I           reduce using rule 82 (expresion -> match_exp .)
    IF              reduce using rule 82 (expresion -> match_exp .)
    MATCH           reduce using rule 82 (expresion -> match_exp .)


state 44

    (35) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 79
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 45

    (25) match -> MATCH expresion . LLV_I case_list LLV_D
    (26) match -> MATCH expresion . LLV_I case_list default LLV_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 80
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 46

    (42) while -> WHILE expresion . statement
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion
    (21) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71
    LLV_I           shift and go to state 48

    statement                      shift and go to state 81

state 47

    (46) loop -> LOOP statement .

    EJECUTAR        reduce using rule 46 (loop -> LOOP statement .)
    LET             reduce using rule 46 (loop -> LOOP statement .)
    ID              reduce using rule 46 (loop -> LOOP statement .)
    IF              reduce using rule 46 (loop -> LOOP statement .)
    MATCH           reduce using rule 46 (loop -> LOOP statement .)
    WHILE           reduce using rule 46 (loop -> LOOP statement .)
    LOOP            reduce using rule 46 (loop -> LOOP statement .)
    BREAK           reduce using rule 46 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 46 (loop -> LOOP statement .)
    $end            reduce using rule 46 (loop -> LOOP statement .)
    LLV_D           reduce using rule 46 (loop -> LOOP statement .)


state 48

    (21) statement -> LLV_I . instrucciones LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D
    (42) while -> . WHILE expresion statement
    (46) loop -> . LOOP statement
    (43) break -> . BREAK PUNTOCOMA
    (44) break -> . BREAK expresion PUNTOCOMA
    (45) continue -> . CONTINUE PUNTOCOMA

    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    LOOP            shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20

    instrucciones                  shift and go to state 82
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 49

    (43) break -> BREAK PUNTOCOMA .

    EJECUTAR        reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    LET             reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    ID              reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    IF              reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    MATCH           reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    WHILE           reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    LOOP            reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    BREAK           reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    CONTINUE        reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    $end            reduce using rule 43 (break -> BREAK PUNTOCOMA .)
    LLV_D           reduce using rule 43 (break -> BREAK PUNTOCOMA .)


state 50

    (44) break -> BREAK expresion . PUNTOCOMA
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       shift and go to state 83
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 51

    (45) continue -> CONTINUE PUNTOCOMA .

    EJECUTAR        reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    LET             reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    ID              reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    IF              reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    MATCH           reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    WHILE           reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    LOOP            reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    BREAK           reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    CONTINUE        reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    $end            reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)
    LLV_D           reduce using rule 45 (continue -> CONTINUE PUNTOCOMA .)


state 52

    (16) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 84
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 53

    (48) asignacion -> LET ID IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 85
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 54

    (50) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . BOOL

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOL            shift and go to state 89

    tipo                           shift and go to state 86

state 55

    (49) asignacion -> LET MUT ID . IGUAL expresion
    (51) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 90
    D_PUNTO         shift and go to state 91


state 56

    (52) asignacion -> ID IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 52 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 52 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 57

    (22) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 92
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 58

    (17) if -> IF expresion statement .
    (18) if -> IF expresion statement . else
    (19) else -> . ELSE statement
    (20) else -> . ELSE if

    EJECUTAR        reduce using rule 17 (if -> IF expresion statement .)
    LET             reduce using rule 17 (if -> IF expresion statement .)
    ID              reduce using rule 17 (if -> IF expresion statement .)
    IF              reduce using rule 17 (if -> IF expresion statement .)
    MATCH           reduce using rule 17 (if -> IF expresion statement .)
    WHILE           reduce using rule 17 (if -> IF expresion statement .)
    LOOP            reduce using rule 17 (if -> IF expresion statement .)
    BREAK           reduce using rule 17 (if -> IF expresion statement .)
    CONTINUE        reduce using rule 17 (if -> IF expresion statement .)
    $end            reduce using rule 17 (if -> IF expresion statement .)
    LLV_D           reduce using rule 17 (if -> IF expresion statement .)
    COMA            reduce using rule 17 (if -> IF expresion statement .)
    ELSE            shift and go to state 94

    else                           shift and go to state 93

state 59

    (56) expresion -> expresion MAS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 95
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 60

    (57) expresion -> expresion MENOS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 96
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 61

    (58) expresion -> expresion MULTI . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 97
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 62

    (59) expresion -> expresion DIV . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 98
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 63

    (60) expresion -> expresion MODULO . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 99
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 64

    (71) expresion -> expresion MAYOR . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 100
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 65

    (72) expresion -> expresion MENOR . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 101
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 66

    (73) expresion -> expresion MAYOR_I . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 102
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 67

    (74) expresion -> expresion MENOR_I . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 103
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 68

    (75) expresion -> expresion D_IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 104
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 69

    (76) expresion -> expresion NO_IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 105
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 70

    (77) expresion -> expresion OR . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 106
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 71

    (78) expresion -> expresion AND . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 107
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 72

    (61) expresion -> MENOS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 61 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 61 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 61 (expresion -> MENOS expresion .)
    DIV             reduce using rule 61 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 61 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 61 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 61 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 61 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 61 (expresion -> MENOS expresion .)
    OR              reduce using rule 61 (expresion -> MENOS expresion .)
    AND             reduce using rule 61 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 61 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 61 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 61 (expresion -> MENOS expresion .)
    COMA            reduce using rule 61 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 61 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 61 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 61 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 61 (expresion -> MENOS expresion .)
    INT             reduce using rule 61 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 61 (expresion -> MENOS expresion .)
    ABS             reduce using rule 61 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 61 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 61 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 61 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 61 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 61 (expresion -> MENOS expresion .)
    ID              reduce using rule 61 (expresion -> MENOS expresion .)
    NOT             reduce using rule 61 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 61 (expresion -> MENOS expresion .)
    IF              reduce using rule 61 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 61 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MULTI           [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 73

    (62) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 108


state 74

    (80) expresion -> PAR_I expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 109
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 75

    (63) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 110


state 76

    (64) expresion -> ABS PAR_I . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 111
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 77

    (65) expresion -> SQRT PAR_I . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 112
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 78

    (79) expresion -> NOT expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 79 (expresion -> NOT expresion .)
    OR              reduce using rule 79 (expresion -> NOT expresion .)
    AND             reduce using rule 79 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 79 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 79 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 79 (expresion -> NOT expresion .)
    COMA            reduce using rule 79 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 79 (expresion -> NOT expresion .)
    BARRA           reduce using rule 79 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 79 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 79 (expresion -> NOT expresion .)
    INT             reduce using rule 79 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 79 (expresion -> NOT expresion .)
    ABS             reduce using rule 79 (expresion -> NOT expresion .)
    SQRT            reduce using rule 79 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 79 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 79 (expresion -> NOT expresion .)
    TRUE            reduce using rule 79 (expresion -> NOT expresion .)
    FALSE           reduce using rule 79 (expresion -> NOT expresion .)
    ID              reduce using rule 79 (expresion -> NOT expresion .)
    NOT             reduce using rule 79 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 79 (expresion -> NOT expresion .)
    IF              reduce using rule 79 (expresion -> NOT expresion .)
    MATCH           reduce using rule 79 (expresion -> NOT expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    NO_IGUAL        shift and go to state 69

  ! MAS             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 79

    (35) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (36) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 113
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 80

    (25) match -> MATCH expresion LLV_I . case_list LLV_D
    (26) match -> MATCH expresion LLV_I . case_list default LLV_D
    (27) case_list -> . case_list case
    (28) case_list -> . case
    (29) case -> . exp_list IGUAL MAYOR statement
    (30) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (33) exp_list -> . exp_list BARRA expresion
    (34) exp_list -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 114
    case_list                      shift and go to state 115
    case                           shift and go to state 116
    exp_list                       shift and go to state 117
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 81

    (42) while -> WHILE expresion statement .

    EJECUTAR        reduce using rule 42 (while -> WHILE expresion statement .)
    LET             reduce using rule 42 (while -> WHILE expresion statement .)
    ID              reduce using rule 42 (while -> WHILE expresion statement .)
    IF              reduce using rule 42 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 42 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 42 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 42 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 42 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 42 (while -> WHILE expresion statement .)
    $end            reduce using rule 42 (while -> WHILE expresion statement .)
    LLV_D           reduce using rule 42 (while -> WHILE expresion statement .)


state 82

    (21) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D
    (42) while -> . WHILE expresion statement
    (46) loop -> . LOOP statement
    (43) break -> . BREAK PUNTOCOMA
    (44) break -> . BREAK expresion PUNTOCOMA
    (45) continue -> . CONTINUE PUNTOCOMA

    LLV_D           shift and go to state 118
    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    LOOP            shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20

    instruccion                    shift and go to state 21
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 83

    (44) break -> BREAK expresion PUNTOCOMA .

    EJECUTAR        reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    LET             reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    ID              reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    IF              reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    MATCH           reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    WHILE           reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    LOOP            reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    BREAK           reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    $end            reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)
    LLV_D           reduce using rule 44 (break -> BREAK expresion PUNTOCOMA .)


state 84

    (16) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 16 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)
    COMA            reduce using rule 16 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 85

    (48) asignacion -> LET ID IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 48 (asignacion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 48 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 86

    (50) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 119


state 87

    (53) tipo -> INT .

    IGUAL           reduce using rule 53 (tipo -> INT .)


state 88

    (54) tipo -> FLOAT .

    IGUAL           reduce using rule 54 (tipo -> FLOAT .)


state 89

    (55) tipo -> BOOL .

    IGUAL           reduce using rule 55 (tipo -> BOOL .)


state 90

    (49) asignacion -> LET MUT ID IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 120
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 91

    (51) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . BOOL

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOL            shift and go to state 89

    tipo                           shift and go to state 121

state 92

    (22) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 122
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 93

    (18) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 18 (if -> IF expresion statement else .)
    LET             reduce using rule 18 (if -> IF expresion statement else .)
    ID              reduce using rule 18 (if -> IF expresion statement else .)
    IF              reduce using rule 18 (if -> IF expresion statement else .)
    MATCH           reduce using rule 18 (if -> IF expresion statement else .)
    WHILE           reduce using rule 18 (if -> IF expresion statement else .)
    LOOP            reduce using rule 18 (if -> IF expresion statement else .)
    BREAK           reduce using rule 18 (if -> IF expresion statement else .)
    CONTINUE        reduce using rule 18 (if -> IF expresion statement else .)
    $end            reduce using rule 18 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 18 (if -> IF expresion statement else .)
    COMA            reduce using rule 18 (if -> IF expresion statement else .)


state 94

    (19) else -> ELSE . statement
    (20) else -> ELSE . if
    (21) statement -> . LLV_I instrucciones LLV_D
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else

    LLV_I           shift and go to state 48
    IF              shift and go to state 15

    statement                      shift and go to state 123
    if                             shift and go to state 124

state 95

    (56) expresion -> expresion MAS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 56 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 56 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 56 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 56 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 56 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 56 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 56 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 56 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 56 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 56 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 56 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 56 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 56 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 56 (expresion -> expresion MAS expresion .)
    ABS             reduce using rule 56 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 56 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 56 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 56 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 56 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 56 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 56 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 56 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MULTI           [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 96

    (57) expresion -> expresion MENOS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 57 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 57 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ABS             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 57 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MULTI           [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 97

    (58) expresion -> expresion MULTI expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 58 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 58 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 58 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 58 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 58 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 58 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 58 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    ABS             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    SQRT            reduce using rule 58 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 58 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 58 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 58 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 58 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 63

  ! MODULO          [ reduce using rule 58 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MULTI           [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 98

    (59) expresion -> expresion DIV expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 59 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 59 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 59 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 59 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 59 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 59 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 59 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 59 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 59 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 59 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 59 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 59 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 59 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 59 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 59 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 59 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 59 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 59 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 59 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 59 (expresion -> expresion DIV expresion .)
    ABS             reduce using rule 59 (expresion -> expresion DIV expresion .)
    SQRT            reduce using rule 59 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 59 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 59 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 59 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 59 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 59 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 59 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 59 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 59 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 59 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 63

  ! MODULO          [ reduce using rule 59 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MULTI           [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 99

    (60) expresion -> expresion MODULO expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAS             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 60 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 60 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 60 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 60 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 60 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 60 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    ABS             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    SQRT            reduce using rule 60 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 60 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 60 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 60 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 60 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 60 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 60 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 60 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 60 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MULTI           [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 100

    (71) expresion -> expresion MAYOR expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    ABS             reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    SQRT            reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 71 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 71 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 71 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 71 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 101

    (72) expresion -> expresion MENOR expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 72 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 72 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 72 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 72 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 72 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 72 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 72 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 72 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 72 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    ABS             reduce using rule 72 (expresion -> expresion MENOR expresion .)
    SQRT            reduce using rule 72 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 72 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 72 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 72 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 72 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 72 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 72 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 72 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 72 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 72 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 72 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 102

    (73) expresion -> expresion MAYOR_I expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    ABS             reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    SQRT            reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 73 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 73 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 73 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 73 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 103

    (74) expresion -> expresion MENOR_I expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    ABS             reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    SQRT            reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 74 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 74 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 74 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 74 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 104

    (75) expresion -> expresion D_IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    ABS             reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    SQRT            reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 75 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71

  ! MAS             [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 75 (expresion -> expresion D_IGUAL expresion .) ]


state 105

    (76) expresion -> expresion NO_IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    ABS             reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    SQRT            reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYOR_I         [ shift and go to state 66 ]
  ! MENOR_I         [ shift and go to state 67 ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! NO_IGUAL        [ shift and go to state 69 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 106

    (77) expresion -> expresion OR expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 77 (expresion -> expresion OR expresion .)
    OR              reduce using rule 77 (expresion -> expresion OR expresion .)
    AND             reduce using rule 77 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 77 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 77 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 77 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 77 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 77 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 77 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 77 (expresion -> expresion OR expresion .)
    INT             reduce using rule 77 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 77 (expresion -> expresion OR expresion .)
    ABS             reduce using rule 77 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 77 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 77 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 77 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 77 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 77 (expresion -> expresion OR expresion .)
    ID              reduce using rule 77 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 77 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 77 (expresion -> expresion OR expresion .)
    IF              reduce using rule 77 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 77 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    NO_IGUAL        shift and go to state 69

  ! MAS             [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 107

    (78) expresion -> expresion AND expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 78 (expresion -> expresion AND expresion .)
    OR              reduce using rule 78 (expresion -> expresion AND expresion .)
    AND             reduce using rule 78 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 78 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 78 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 78 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 78 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 78 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 78 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 78 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 78 (expresion -> expresion AND expresion .)
    INT             reduce using rule 78 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 78 (expresion -> expresion AND expresion .)
    ABS             reduce using rule 78 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 78 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 78 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 78 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 78 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 78 (expresion -> expresion AND expresion .)
    ID              reduce using rule 78 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 78 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 78 (expresion -> expresion AND expresion .)
    IF              reduce using rule 78 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 78 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    NO_IGUAL        shift and go to state 69

  ! MAS             [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 78 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 68 ]
  ! OR              [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]


state 108

    (62) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 125


state 109

    (80) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    ABS             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    SQRT            reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 80 (expresion -> PAR_I expresion PAR_D .)


state 110

    (63) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 126


state 111

    (64) expresion -> ABS PAR_I expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 127
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 112

    (65) expresion -> SQRT PAR_I expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 128
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 113

    (35) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (36) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (37) case_list_exp -> . case_list_exp case_exp
    (38) case_list_exp -> . case_exp
    (39) case_exp -> . exp_list IGUAL MAYOR expresion
    (40) case_exp -> . exp_list IGUAL MAYOR expresion COMA
    (33) exp_list -> . exp_list BARRA expresion
    (34) exp_list -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 114
    case_list_exp                  shift and go to state 129
    case_exp                       shift and go to state 130
    exp_list                       shift and go to state 131
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 114

    (34) exp_list -> expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 34 (exp_list -> expresion .)
    BARRA           reduce using rule 34 (exp_list -> expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 115

    (25) match -> MATCH expresion LLV_I case_list . LLV_D
    (26) match -> MATCH expresion LLV_I case_list . default LLV_D
    (27) case_list -> case_list . case
    (31) default -> . GUION_B IGUAL MAYOR statement
    (32) default -> . GUION_B IGUAL MAYOR instruccion
    (29) case -> . exp_list IGUAL MAYOR statement
    (30) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (33) exp_list -> . exp_list BARRA expresion
    (34) exp_list -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    LLV_D           shift and go to state 132
    GUION_B         shift and go to state 135
    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 114
    default                        shift and go to state 133
    case                           shift and go to state 134
    exp_list                       shift and go to state 117
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 116

    (28) case_list -> case .

    LLV_D           reduce using rule 28 (case_list -> case .)
    GUION_B         reduce using rule 28 (case_list -> case .)
    MENOS           reduce using rule 28 (case_list -> case .)
    INT             reduce using rule 28 (case_list -> case .)
    FLOAT           reduce using rule 28 (case_list -> case .)
    ABS             reduce using rule 28 (case_list -> case .)
    SQRT            reduce using rule 28 (case_list -> case .)
    ENTERO          reduce using rule 28 (case_list -> case .)
    DECIMAL         reduce using rule 28 (case_list -> case .)
    TRUE            reduce using rule 28 (case_list -> case .)
    FALSE           reduce using rule 28 (case_list -> case .)
    ID              reduce using rule 28 (case_list -> case .)
    NOT             reduce using rule 28 (case_list -> case .)
    PAR_I           reduce using rule 28 (case_list -> case .)
    IF              reduce using rule 28 (case_list -> case .)
    MATCH           reduce using rule 28 (case_list -> case .)


state 117

    (29) case -> exp_list . IGUAL MAYOR statement
    (30) case -> exp_list . IGUAL MAYOR instruccion_no_pt COMA
    (33) exp_list -> exp_list . BARRA expresion

    IGUAL           shift and go to state 136
    BARRA           shift and go to state 137


state 118

    (21) statement -> LLV_I instrucciones LLV_D .

    EJECUTAR        reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    WHILE           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    LOOP            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    BREAK           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    CONTINUE        reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    ELSE            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    ABS             reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    SQRT            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 21 (statement -> LLV_I instrucciones LLV_D .)


state 119

    (50) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 138
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 120

    (49) asignacion -> LET MUT ID IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 49 (asignacion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 49 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 121

    (51) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 139


state 122

    (22) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 140
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 123

    (19) else -> ELSE statement .

    EJECUTAR        reduce using rule 19 (else -> ELSE statement .)
    LET             reduce using rule 19 (else -> ELSE statement .)
    ID              reduce using rule 19 (else -> ELSE statement .)
    IF              reduce using rule 19 (else -> ELSE statement .)
    MATCH           reduce using rule 19 (else -> ELSE statement .)
    WHILE           reduce using rule 19 (else -> ELSE statement .)
    LOOP            reduce using rule 19 (else -> ELSE statement .)
    BREAK           reduce using rule 19 (else -> ELSE statement .)
    CONTINUE        reduce using rule 19 (else -> ELSE statement .)
    $end            reduce using rule 19 (else -> ELSE statement .)
    LLV_D           reduce using rule 19 (else -> ELSE statement .)
    COMA            reduce using rule 19 (else -> ELSE statement .)


state 124

    (20) else -> ELSE if .

    EJECUTAR        reduce using rule 20 (else -> ELSE if .)
    LET             reduce using rule 20 (else -> ELSE if .)
    ID              reduce using rule 20 (else -> ELSE if .)
    IF              reduce using rule 20 (else -> ELSE if .)
    MATCH           reduce using rule 20 (else -> ELSE if .)
    WHILE           reduce using rule 20 (else -> ELSE if .)
    LOOP            reduce using rule 20 (else -> ELSE if .)
    BREAK           reduce using rule 20 (else -> ELSE if .)
    CONTINUE        reduce using rule 20 (else -> ELSE if .)
    $end            reduce using rule 20 (else -> ELSE if .)
    LLV_D           reduce using rule 20 (else -> ELSE if .)
    COMA            reduce using rule 20 (else -> ELSE if .)


state 125

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 141


state 126

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 142


state 127

    (64) expresion -> ABS PAR_I expresion PAR_D .

    MAS             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOS           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MULTI           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    DIV             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MODULO          reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    OR              reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    AND             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    COMA            reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    BARRA           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    INT             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    ABS             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    SQRT            reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    TRUE            reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    FALSE           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    ID              reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    NOT             reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    IF              reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)
    MATCH           reduce using rule 64 (expresion -> ABS PAR_I expresion PAR_D .)


state 128

    (65) expresion -> SQRT PAR_I expresion PAR_D .

    MAS             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOS           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MULTI           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    DIV             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MODULO          reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    OR              reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    AND             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    COMA            reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    BARRA           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    INT             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    ABS             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    SQRT            reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    TRUE            reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    FALSE           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    ID              reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    NOT             reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    IF              reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)
    MATCH           reduce using rule 65 (expresion -> SQRT PAR_I expresion PAR_D .)


state 129

    (35) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (36) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (37) case_list_exp -> case_list_exp . case_exp
    (41) default_exp -> . GUION_B IGUAL MAYOR expresion
    (39) case_exp -> . exp_list IGUAL MAYOR expresion
    (40) case_exp -> . exp_list IGUAL MAYOR expresion COMA
    (33) exp_list -> . exp_list BARRA expresion
    (34) exp_list -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    LLV_D           shift and go to state 143
    GUION_B         shift and go to state 146
    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 114
    default_exp                    shift and go to state 144
    case_exp                       shift and go to state 145
    exp_list                       shift and go to state 131
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 130

    (38) case_list_exp -> case_exp .

    LLV_D           reduce using rule 38 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 38 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 38 (case_list_exp -> case_exp .)
    INT             reduce using rule 38 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 38 (case_list_exp -> case_exp .)
    ABS             reduce using rule 38 (case_list_exp -> case_exp .)
    SQRT            reduce using rule 38 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 38 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 38 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 38 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 38 (case_list_exp -> case_exp .)
    ID              reduce using rule 38 (case_list_exp -> case_exp .)
    NOT             reduce using rule 38 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 38 (case_list_exp -> case_exp .)
    IF              reduce using rule 38 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 38 (case_list_exp -> case_exp .)


state 131

    (39) case_exp -> exp_list . IGUAL MAYOR expresion
    (40) case_exp -> exp_list . IGUAL MAYOR expresion COMA
    (33) exp_list -> exp_list . BARRA expresion

    IGUAL           shift and go to state 147
    BARRA           shift and go to state 137


state 132

    (25) match -> MATCH expresion LLV_I case_list LLV_D .

    EJECUTAR        reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ID              reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    WHILE           reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LOOP            reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    BREAK           reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CONTINUE        reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    $end            reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LLV_D           reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 25 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 133

    (26) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 148


state 134

    (27) case_list -> case_list case .

    LLV_D           reduce using rule 27 (case_list -> case_list case .)
    GUION_B         reduce using rule 27 (case_list -> case_list case .)
    MENOS           reduce using rule 27 (case_list -> case_list case .)
    INT             reduce using rule 27 (case_list -> case_list case .)
    FLOAT           reduce using rule 27 (case_list -> case_list case .)
    ABS             reduce using rule 27 (case_list -> case_list case .)
    SQRT            reduce using rule 27 (case_list -> case_list case .)
    ENTERO          reduce using rule 27 (case_list -> case_list case .)
    DECIMAL         reduce using rule 27 (case_list -> case_list case .)
    TRUE            reduce using rule 27 (case_list -> case_list case .)
    FALSE           reduce using rule 27 (case_list -> case_list case .)
    ID              reduce using rule 27 (case_list -> case_list case .)
    NOT             reduce using rule 27 (case_list -> case_list case .)
    PAR_I           reduce using rule 27 (case_list -> case_list case .)
    IF              reduce using rule 27 (case_list -> case_list case .)
    MATCH           reduce using rule 27 (case_list -> case_list case .)


state 135

    (31) default -> GUION_B . IGUAL MAYOR statement
    (32) default -> GUION_B . IGUAL MAYOR instruccion

    IGUAL           shift and go to state 149


state 136

    (29) case -> exp_list IGUAL . MAYOR statement
    (30) case -> exp_list IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 150


state 137

    (33) exp_list -> exp_list BARRA . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 151
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 138

    (50) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 50 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 50 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 139

    (51) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 152
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 140

    (22) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (23) exp_else -> . ELSE LLV_I expresion LLV_D
    (24) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 154

    exp_else                       shift and go to state 153

state 141

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 155
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 142

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 156
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 143

    (35) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    MAS             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ABS             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    SQRT            reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 35 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 144

    (36) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 157


state 145

    (37) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    ABS             reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    SQRT            reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 37 (case_list_exp -> case_list_exp case_exp .)


state 146

    (41) default_exp -> GUION_B . IGUAL MAYOR expresion

    IGUAL           shift and go to state 158


state 147

    (39) case_exp -> exp_list IGUAL . MAYOR expresion
    (40) case_exp -> exp_list IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 159


state 148

    (26) match -> MATCH expresion LLV_I case_list default LLV_D .

    EJECUTAR        reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ID              reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    WHILE           reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LOOP            reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    BREAK           reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CONTINUE        reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    $end            reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LLV_D           reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 26 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 149

    (31) default -> GUION_B IGUAL . MAYOR statement
    (32) default -> GUION_B IGUAL . MAYOR instruccion

    MAYOR           shift and go to state 160


state 150

    (29) case -> exp_list IGUAL MAYOR . statement
    (30) case -> exp_list IGUAL MAYOR . instruccion_no_pt COMA
    (21) statement -> . LLV_I instrucciones LLV_D
    (12) instruccion_no_pt -> . ejecutar
    (13) instruccion_no_pt -> . asignacion
    (14) instruccion_no_pt -> . if
    (15) instruccion_no_pt -> . match
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_I           shift and go to state 48
    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16

    statement                      shift and go to state 161
    instruccion_no_pt              shift and go to state 162
    ejecutar                       shift and go to state 163
    asignacion                     shift and go to state 164
    if                             shift and go to state 165
    match                          shift and go to state 166

state 151

    (33) exp_list -> exp_list BARRA expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 33 (exp_list -> exp_list BARRA expresion .)
    BARRA           reduce using rule 33 (exp_list -> exp_list BARRA expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 152

    (51) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 51 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 51 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 153

    (22) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ABS             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    SQRT            reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 22 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 154

    (23) exp_else -> ELSE . LLV_I expresion LLV_D
    (24) exp_else -> ELSE . exp_if
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 167
    IF              shift and go to state 28

    exp_if                         shift and go to state 168

state 155

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    COMA            shift and go to state 169
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 156

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    COMA            shift and go to state 170
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 157

    (36) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    MAS             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ABS             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    SQRT            reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 36 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 158

    (41) default_exp -> GUION_B IGUAL . MAYOR expresion

    MAYOR           shift and go to state 171


state 159

    (39) case_exp -> exp_list IGUAL MAYOR . expresion
    (40) case_exp -> exp_list IGUAL MAYOR . expresion COMA
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 172
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 160

    (31) default -> GUION_B IGUAL MAYOR . statement
    (32) default -> GUION_B IGUAL MAYOR . instruccion
    (21) statement -> . LLV_I instrucciones LLV_D
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (16) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (48) asignacion -> . LET ID IGUAL expresion
    (49) asignacion -> . LET MUT ID IGUAL expresion
    (50) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (51) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (52) asignacion -> . ID IGUAL expresion
    (17) if -> . IF expresion statement
    (18) if -> . IF expresion statement else
    (25) match -> . MATCH expresion LLV_I case_list LLV_D
    (26) match -> . MATCH expresion LLV_I case_list default LLV_D
    (42) while -> . WHILE expresion statement
    (46) loop -> . LOOP statement
    (43) break -> . BREAK PUNTOCOMA
    (44) break -> . BREAK expresion PUNTOCOMA
    (45) continue -> . CONTINUE PUNTOCOMA

    LLV_I           shift and go to state 48
    EJECUTAR        shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    LOOP            shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20

    statement                      shift and go to state 173
    instruccion                    shift and go to state 174
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 161

    (29) case -> exp_list IGUAL MAYOR statement .

    LLV_D           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    GUION_B         reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    MENOS           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    INT             reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    FLOAT           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    ABS             reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    SQRT            reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    ENTERO          reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    TRUE            reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    FALSE           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    ID              reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    NOT             reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    PAR_I           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    IF              reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)
    MATCH           reduce using rule 29 (case -> exp_list IGUAL MAYOR statement .)


state 162

    (30) case -> exp_list IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 175


state 163

    (12) instruccion_no_pt -> ejecutar .

    COMA            reduce using rule 12 (instruccion_no_pt -> ejecutar .)


state 164

    (13) instruccion_no_pt -> asignacion .

    COMA            reduce using rule 13 (instruccion_no_pt -> asignacion .)


state 165

    (14) instruccion_no_pt -> if .

    COMA            reduce using rule 14 (instruccion_no_pt -> if .)


state 166

    (15) instruccion_no_pt -> match .

    COMA            reduce using rule 15 (instruccion_no_pt -> match .)


state 167

    (23) exp_else -> ELSE LLV_I . expresion LLV_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 176
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 168

    (24) exp_else -> ELSE exp_if .

    MAS             reduce using rule 24 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 24 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 24 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 24 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 24 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 24 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 24 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 24 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 24 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 24 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 24 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 24 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 24 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 24 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 24 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 24 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 24 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 24 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 24 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 24 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 24 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 24 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 24 (exp_else -> ELSE exp_if .)
    ABS             reduce using rule 24 (exp_else -> ELSE exp_if .)
    SQRT            reduce using rule 24 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 24 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 24 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 24 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 24 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 24 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 24 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 24 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 24 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 24 (exp_else -> ELSE exp_if .)


state 169

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 177
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 170

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 178
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 171

    (41) default_exp -> GUION_B IGUAL MAYOR . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion MULTI expresion
    (59) expresion -> . expresion DIV expresion
    (60) expresion -> . expresion MODULO expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (63) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (64) expresion -> . ABS PAR_I expresion PAR_D
    (65) expresion -> . SQRT PAR_I expresion PAR_D
    (66) expresion -> . ENTERO
    (67) expresion -> . DECIMAL
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . ID
    (71) expresion -> . expresion MAYOR expresion
    (72) expresion -> . expresion MENOR expresion
    (73) expresion -> . expresion MAYOR_I expresion
    (74) expresion -> . expresion MENOR_I expresion
    (75) expresion -> . expresion D_IGUAL expresion
    (76) expresion -> . expresion NO_IGUAL expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . expresion AND expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PAR_I expresion PAR_D
    (81) expresion -> . exp_if
    (82) expresion -> . match_exp
    (22) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (35) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (36) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D

    MENOS           shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 33
    ABS             shift and go to state 34
    SQRT            shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    ID              shift and go to state 40
    NOT             shift and go to state 41
    PAR_I           shift and go to state 32
    IF              shift and go to state 28
    MATCH           shift and go to state 44

    expresion                      shift and go to state 179
    exp_if                         shift and go to state 42
    match_exp                      shift and go to state 43

state 172

    (39) case_exp -> exp_list IGUAL MAYOR expresion .
    (40) case_exp -> exp_list IGUAL MAYOR expresion . COMA
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    INT             reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ABS             reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    SQRT            reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    TRUE            reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    FALSE           reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    ID              reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    NOT             reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    IF              reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    MATCH           reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .)
    COMA            shift and go to state 180
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71

  ! MENOS           [ reduce using rule 39 (case_exp -> exp_list IGUAL MAYOR expresion .) ]


state 173

    (31) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 31 (default -> GUION_B IGUAL MAYOR statement .)


state 174

    (32) default -> GUION_B IGUAL MAYOR instruccion .

    LLV_D           reduce using rule 32 (default -> GUION_B IGUAL MAYOR instruccion .)


state 175

    (30) case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ABS             reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    SQRT            reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 30 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)


state 176

    (23) exp_else -> ELSE LLV_I expresion . LLV_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 181
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 177

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 182
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 178

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 183
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 179

    (41) default_exp -> GUION_B IGUAL MAYOR expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . MULTI expresion
    (59) expresion -> expresion . DIV expresion
    (60) expresion -> expresion . MODULO expresion
    (71) expresion -> expresion . MAYOR expresion
    (72) expresion -> expresion . MENOR expresion
    (73) expresion -> expresion . MAYOR_I expresion
    (74) expresion -> expresion . MENOR_I expresion
    (75) expresion -> expresion . D_IGUAL expresion
    (76) expresion -> expresion . NO_IGUAL expresion
    (77) expresion -> expresion . OR expresion
    (78) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 41 (default_exp -> GUION_B IGUAL MAYOR expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    MULTI           shift and go to state 61
    DIV             shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYOR_I         shift and go to state 66
    MENOR_I         shift and go to state 67
    D_IGUAL         shift and go to state 68
    NO_IGUAL        shift and go to state 69
    OR              shift and go to state 70
    AND             shift and go to state 71


state 180

    (40) case_exp -> exp_list IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ABS             reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    SQRT            reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 40 (case_exp -> exp_list IGUAL MAYOR expresion COMA .)


state 181

    (23) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ABS             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    SQRT            reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 23 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 182

    (62) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 62 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 183

    (63) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 63 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 104 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 104 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 104 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 104 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
