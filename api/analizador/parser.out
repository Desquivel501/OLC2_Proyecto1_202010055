Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    STR
    STRING

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 8     if -> IF expresion statement
Rule 9     if -> IF expresion statement else
Rule 10    else -> ELSE statement
Rule 11    else -> ELSE if
Rule 12    statement -> LLV_I instrucciones LLV_D
Rule 13    asignacion -> LET ID IGUAL expresion
Rule 14    asignacion -> LET MUT ID IGUAL expresion
Rule 15    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 16    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> BOOL
Rule 20    expresion -> expresion MAS expresion
Rule 21    expresion -> expresion MENOS expresion
Rule 22    expresion -> expresion MULTI expresion
Rule 23    expresion -> expresion DIV expresion
Rule 24    expresion -> expresion MODULO expresion
Rule 25    expresion -> MENOS expresion
Rule 26    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 27    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 28    expresion -> ENTERO
Rule 29    expresion -> DECIMAL
Rule 30    expresion -> TRUE
Rule 31    expresion -> FALSE
Rule 32    expresion -> ID
Rule 33    expresion -> expresion MAYOR expresion
Rule 34    expresion -> expresion MENOR expresion
Rule 35    expresion -> expresion MAYOR_I expresion
Rule 36    expresion -> expresion MENOR_I expresion
Rule 37    expresion -> expresion D_IGUAL expresion
Rule 38    expresion -> expresion NO_IGUAL expresion
Rule 39    expresion -> expresion OR expresion
Rule 40    expresion -> expresion AND expresion
Rule 41    expresion -> NOT expresion
Rule 42    expresion -> PAR_I expresion PAR_D

Terminals, with rules where they appear

AND                  : 40
BOOL                 : 19
CHAR                 : 
COMA                 : 26 27
DECIMAL              : 29
DIV                  : 23
D_IGUAL              : 37
D_PUNTO              : 15 16 26 26 27 27
EJECUTAR             : 7
ELSE                 : 10 11
ENTERO               : 28
FALSE                : 31
FLOAT                : 18 27
ID                   : 13 14 15 16 32
IF                   : 8 9
IGUAL                : 13 14 15 16
INT                  : 17 26
LET                  : 13 14 15 16
LLV_D                : 12
LLV_I                : 12
MAS                  : 20
MAYOR                : 33
MAYOR_I              : 35
MENOR                : 34
MENOR_I              : 36
MENOS                : 21 25
MODULO               : 24
MULTI                : 22
MUT                  : 14 16
NOT                  : 41
NO_IGUAL             : 38
OR                   : 39
PAR_D                : 7 26 27 42
PAR_I                : 7 26 27 42
POW_FLOAT            : 27
POW_INT              : 26
PUNTOCOMA            : 4 5
STR                  : 
STRING               : 
TRUE                 : 30
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
ejecutar             : 4
else                 : 9
expresion            : 7 8 9 13 14 15 16 20 20 21 21 22 22 23 23 24 24 25 26 26 27 27 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42
if                   : 6 11
ini                  : 0
instruccion          : 2 3
instrucciones        : 1 2 12
statement            : 8 9 10
tipo                 : 15 16

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (13) asignacion -> . LET ID IGUAL expresion
    (14) asignacion -> . LET MUT ID IGUAL expresion
    (15) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (16) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (13) asignacion -> . LET ID IGUAL expresion
    (14) asignacion -> . LET MUT ID IGUAL expresion
    (15) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (16) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instruccion                    shift and go to state 10
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 11


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 12


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 13


state 8

    (13) asignacion -> LET . ID IGUAL expresion
    (14) asignacion -> LET . MUT ID IGUAL expresion
    (15) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (16) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 14
    MUT             shift and go to state 15


state 9

    (8) if -> IF . expresion statement
    (9) if -> IF . expresion statement else
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 16

state 10

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 11

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 12

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 13

    (7) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 27

state 14

    (13) asignacion -> LET ID . IGUAL expresion
    (15) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 28
    D_PUNTO         shift and go to state 29


state 15

    (14) asignacion -> LET MUT . ID IGUAL expresion
    (16) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 30


state 16

    (8) if -> IF expresion . statement
    (9) if -> IF expresion . statement else
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion
    (12) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44
    LLV_I           shift and go to state 45

    statement                      shift and go to state 31

state 17

    (25) expresion -> MENOS . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 46

state 18

    (26) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 47


state 19

    (42) expresion -> PAR_I . expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 48

state 20

    (27) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 49


state 21

    (28) expresion -> ENTERO .

    MAS             reduce using rule 28 (expresion -> ENTERO .)
    MENOS           reduce using rule 28 (expresion -> ENTERO .)
    MULTI           reduce using rule 28 (expresion -> ENTERO .)
    DIV             reduce using rule 28 (expresion -> ENTERO .)
    MODULO          reduce using rule 28 (expresion -> ENTERO .)
    MAYOR           reduce using rule 28 (expresion -> ENTERO .)
    MENOR           reduce using rule 28 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 28 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 28 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 28 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 28 (expresion -> ENTERO .)
    OR              reduce using rule 28 (expresion -> ENTERO .)
    AND             reduce using rule 28 (expresion -> ENTERO .)
    LLV_I           reduce using rule 28 (expresion -> ENTERO .)
    PAR_D           reduce using rule 28 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 28 (expresion -> ENTERO .)
    COMA            reduce using rule 28 (expresion -> ENTERO .)


state 22

    (29) expresion -> DECIMAL .

    MAS             reduce using rule 29 (expresion -> DECIMAL .)
    MENOS           reduce using rule 29 (expresion -> DECIMAL .)
    MULTI           reduce using rule 29 (expresion -> DECIMAL .)
    DIV             reduce using rule 29 (expresion -> DECIMAL .)
    MODULO          reduce using rule 29 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 29 (expresion -> DECIMAL .)
    MENOR           reduce using rule 29 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 29 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 29 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 29 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 29 (expresion -> DECIMAL .)
    OR              reduce using rule 29 (expresion -> DECIMAL .)
    AND             reduce using rule 29 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 29 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 29 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 29 (expresion -> DECIMAL .)
    COMA            reduce using rule 29 (expresion -> DECIMAL .)


state 23

    (30) expresion -> TRUE .

    MAS             reduce using rule 30 (expresion -> TRUE .)
    MENOS           reduce using rule 30 (expresion -> TRUE .)
    MULTI           reduce using rule 30 (expresion -> TRUE .)
    DIV             reduce using rule 30 (expresion -> TRUE .)
    MODULO          reduce using rule 30 (expresion -> TRUE .)
    MAYOR           reduce using rule 30 (expresion -> TRUE .)
    MENOR           reduce using rule 30 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 30 (expresion -> TRUE .)
    MENOR_I         reduce using rule 30 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 30 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 30 (expresion -> TRUE .)
    OR              reduce using rule 30 (expresion -> TRUE .)
    AND             reduce using rule 30 (expresion -> TRUE .)
    LLV_I           reduce using rule 30 (expresion -> TRUE .)
    PAR_D           reduce using rule 30 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 30 (expresion -> TRUE .)
    COMA            reduce using rule 30 (expresion -> TRUE .)


state 24

    (31) expresion -> FALSE .

    MAS             reduce using rule 31 (expresion -> FALSE .)
    MENOS           reduce using rule 31 (expresion -> FALSE .)
    MULTI           reduce using rule 31 (expresion -> FALSE .)
    DIV             reduce using rule 31 (expresion -> FALSE .)
    MODULO          reduce using rule 31 (expresion -> FALSE .)
    MAYOR           reduce using rule 31 (expresion -> FALSE .)
    MENOR           reduce using rule 31 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 31 (expresion -> FALSE .)
    MENOR_I         reduce using rule 31 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 31 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 31 (expresion -> FALSE .)
    OR              reduce using rule 31 (expresion -> FALSE .)
    AND             reduce using rule 31 (expresion -> FALSE .)
    LLV_I           reduce using rule 31 (expresion -> FALSE .)
    PAR_D           reduce using rule 31 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 31 (expresion -> FALSE .)
    COMA            reduce using rule 31 (expresion -> FALSE .)


state 25

    (32) expresion -> ID .

    MAS             reduce using rule 32 (expresion -> ID .)
    MENOS           reduce using rule 32 (expresion -> ID .)
    MULTI           reduce using rule 32 (expresion -> ID .)
    DIV             reduce using rule 32 (expresion -> ID .)
    MODULO          reduce using rule 32 (expresion -> ID .)
    MAYOR           reduce using rule 32 (expresion -> ID .)
    MENOR           reduce using rule 32 (expresion -> ID .)
    MAYOR_I         reduce using rule 32 (expresion -> ID .)
    MENOR_I         reduce using rule 32 (expresion -> ID .)
    D_IGUAL         reduce using rule 32 (expresion -> ID .)
    NO_IGUAL        reduce using rule 32 (expresion -> ID .)
    OR              reduce using rule 32 (expresion -> ID .)
    AND             reduce using rule 32 (expresion -> ID .)
    LLV_I           reduce using rule 32 (expresion -> ID .)
    PAR_D           reduce using rule 32 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 32 (expresion -> ID .)
    COMA            reduce using rule 32 (expresion -> ID .)


state 26

    (41) expresion -> NOT . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 50

state 27

    (7) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 51
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 28

    (13) asignacion -> LET ID IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 52

state 29

    (15) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . BOOL

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56

    tipo                           shift and go to state 53

state 30

    (14) asignacion -> LET MUT ID . IGUAL expresion
    (16) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 57
    D_PUNTO         shift and go to state 58


state 31

    (8) if -> IF expresion statement .
    (9) if -> IF expresion statement . else
    (10) else -> . ELSE statement
    (11) else -> . ELSE if

    EJECUTAR        reduce using rule 8 (if -> IF expresion statement .)
    LET             reduce using rule 8 (if -> IF expresion statement .)
    IF              reduce using rule 8 (if -> IF expresion statement .)
    $end            reduce using rule 8 (if -> IF expresion statement .)
    LLV_D           reduce using rule 8 (if -> IF expresion statement .)
    ELSE            shift and go to state 60

    else                           shift and go to state 59

state 32

    (20) expresion -> expresion MAS . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 61

state 33

    (21) expresion -> expresion MENOS . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 62

state 34

    (22) expresion -> expresion MULTI . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 63

state 35

    (23) expresion -> expresion DIV . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 64

state 36

    (24) expresion -> expresion MODULO . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 65

state 37

    (33) expresion -> expresion MAYOR . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 66

state 38

    (34) expresion -> expresion MENOR . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 67

state 39

    (35) expresion -> expresion MAYOR_I . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 68

state 40

    (36) expresion -> expresion MENOR_I . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 69

state 41

    (37) expresion -> expresion D_IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 70

state 42

    (38) expresion -> expresion NO_IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 71

state 43

    (39) expresion -> expresion OR . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 72

state 44

    (40) expresion -> expresion AND . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 73

state 45

    (12) statement -> LLV_I . instrucciones LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (13) asignacion -> . LET ID IGUAL expresion
    (14) asignacion -> . LET MUT ID IGUAL expresion
    (15) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (16) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instrucciones                  shift and go to state 74
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 46

    (25) expresion -> MENOS expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 25 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 25 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 25 (expresion -> MENOS expresion .)
    DIV             reduce using rule 25 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 25 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 25 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 25 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 25 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 25 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 25 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 25 (expresion -> MENOS expresion .)
    OR              reduce using rule 25 (expresion -> MENOS expresion .)
    AND             reduce using rule 25 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 25 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 25 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 25 (expresion -> MENOS expresion .)
    COMA            reduce using rule 25 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MULTI           [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MODULO          [ shift and go to state 36 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 47

    (26) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 75


state 48

    (42) expresion -> PAR_I expresion . PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 76
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 49

    (27) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 77


state 50

    (41) expresion -> NOT expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 41 (expresion -> NOT expresion .)
    OR              reduce using rule 41 (expresion -> NOT expresion .)
    AND             reduce using rule 41 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 41 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 41 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 41 (expresion -> NOT expresion .)
    COMA            reduce using rule 41 (expresion -> NOT expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    NO_IGUAL        shift and go to state 42

  ! MAS             [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 51

    (7) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 7 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 52

    (13) asignacion -> LET ID IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 13 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 53

    (15) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 78


state 54

    (17) tipo -> INT .

    IGUAL           reduce using rule 17 (tipo -> INT .)


state 55

    (18) tipo -> FLOAT .

    IGUAL           reduce using rule 18 (tipo -> FLOAT .)


state 56

    (19) tipo -> BOOL .

    IGUAL           reduce using rule 19 (tipo -> BOOL .)


state 57

    (14) asignacion -> LET MUT ID IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 79

state 58

    (16) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . BOOL

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56

    tipo                           shift and go to state 80

state 59

    (9) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 9 (if -> IF expresion statement else .)
    LET             reduce using rule 9 (if -> IF expresion statement else .)
    IF              reduce using rule 9 (if -> IF expresion statement else .)
    $end            reduce using rule 9 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 9 (if -> IF expresion statement else .)


state 60

    (10) else -> ELSE . statement
    (11) else -> ELSE . if
    (12) statement -> . LLV_I instrucciones LLV_D
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    LLV_I           shift and go to state 45
    IF              shift and go to state 9

    statement                      shift and go to state 81
    if                             shift and go to state 82

state 61

    (20) expresion -> expresion MAS expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 20 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 20 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 20 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 20 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 20 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 20 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 20 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 20 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 20 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 20 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 20 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 20 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 20 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 20 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MULTI           [ reduce using rule 20 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 20 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 20 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 62

    (21) expresion -> expresion MENOS expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 21 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 21 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 21 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 21 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 21 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 21 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 21 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 21 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 21 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MULTI           [ reduce using rule 21 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 21 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 21 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 63

    (22) expresion -> expresion MULTI expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 22 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 22 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 22 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 22 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 22 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 22 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 22 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 22 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 36

  ! MODULO          [ reduce using rule 22 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MULTI           [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 64

    (23) expresion -> expresion DIV expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 23 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 23 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 23 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 23 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 23 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 23 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 23 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 23 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 23 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 23 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 23 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 23 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 23 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 23 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 23 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 23 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 36

  ! MODULO          [ reduce using rule 23 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MULTI           [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 65

    (24) expresion -> expresion MODULO expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAS             reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 24 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 24 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 24 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 24 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 24 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 24 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 24 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 24 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 24 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 32 ]
  ! MENOS           [ shift and go to state 33 ]
  ! MULTI           [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MODULO          [ shift and go to state 36 ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 66

    (33) expresion -> expresion MAYOR expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MAS             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 67

    (34) expresion -> expresion MENOR expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 34 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 34 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 34 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MAS             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 68

    (35) expresion -> expresion MAYOR_I expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 35 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MAS             [ reduce using rule 35 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 35 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 35 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 69

    (36) expresion -> expresion MENOR_I expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 36 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MAS             [ reduce using rule 36 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 36 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 36 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 36 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 70

    (37) expresion -> expresion D_IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 37 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 37 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 37 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 37 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44

  ! MAS             [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 37 (expresion -> expresion D_IGUAL expresion .) ]


state 71

    (38) expresion -> expresion NO_IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36

  ! MAS             [ reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 37 ]
  ! MENOR           [ shift and go to state 38 ]
  ! MAYOR_I         [ shift and go to state 39 ]
  ! MENOR_I         [ shift and go to state 40 ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! NO_IGUAL        [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 72

    (39) expresion -> expresion OR expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 39 (expresion -> expresion OR expresion .)
    OR              reduce using rule 39 (expresion -> expresion OR expresion .)
    AND             reduce using rule 39 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 39 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 39 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 39 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 39 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    NO_IGUAL        shift and go to state 42

  ! MAS             [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 39 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 73

    (40) expresion -> expresion AND expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 40 (expresion -> expresion AND expresion .)
    OR              reduce using rule 40 (expresion -> expresion AND expresion .)
    AND             reduce using rule 40 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 40 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 40 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 40 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 40 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    NO_IGUAL        shift and go to state 42

  ! MAS             [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 40 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 41 ]
  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 74

    (12) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (13) asignacion -> . LET ID IGUAL expresion
    (14) asignacion -> . LET MUT ID IGUAL expresion
    (15) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (16) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    LLV_D           shift and go to state 83
    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instruccion                    shift and go to state 10
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 75

    (26) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 84


state 76

    (42) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 42 (expresion -> PAR_I expresion PAR_D .)


state 77

    (27) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 85


state 78

    (15) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 86

state 79

    (14) asignacion -> LET MUT ID IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 14 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 80

    (16) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 87


state 81

    (10) else -> ELSE statement .

    EJECUTAR        reduce using rule 10 (else -> ELSE statement .)
    LET             reduce using rule 10 (else -> ELSE statement .)
    IF              reduce using rule 10 (else -> ELSE statement .)
    $end            reduce using rule 10 (else -> ELSE statement .)
    LLV_D           reduce using rule 10 (else -> ELSE statement .)


state 82

    (11) else -> ELSE if .

    EJECUTAR        reduce using rule 11 (else -> ELSE if .)
    LET             reduce using rule 11 (else -> ELSE if .)
    IF              reduce using rule 11 (else -> ELSE if .)
    $end            reduce using rule 11 (else -> ELSE if .)
    LLV_D           reduce using rule 11 (else -> ELSE if .)


state 83

    (12) statement -> LLV_I instrucciones LLV_D .

    ELSE            reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    EJECUTAR        reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)


state 84

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 88


state 85

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 89


state 86

    (15) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 15 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 87

    (16) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 90

state 88

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 91

state 89

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 92

state 90

    (16) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 16 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 91

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    COMA            shift and go to state 93
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 92

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    COMA            shift and go to state 94
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 93

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 95

state 94

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (20) expresion -> . expresion MAS expresion
    (21) expresion -> . expresion MENOS expresion
    (22) expresion -> . expresion MULTI expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion MODULO expresion
    (25) expresion -> . MENOS expresion
    (26) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (27) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (28) expresion -> . ENTERO
    (29) expresion -> . DECIMAL
    (30) expresion -> . TRUE
    (31) expresion -> . FALSE
    (32) expresion -> . ID
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYOR_I expresion
    (36) expresion -> . expresion MENOR_I expresion
    (37) expresion -> . expresion D_IGUAL expresion
    (38) expresion -> . expresion NO_IGUAL expresion
    (39) expresion -> . expresion OR expresion
    (40) expresion -> . expresion AND expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . PAR_I expresion PAR_D

    MENOS           shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 20
    ENTERO          shift and go to state 21
    DECIMAL         shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 25
    NOT             shift and go to state 26
    PAR_I           shift and go to state 19

    expresion                      shift and go to state 96

state 95

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 97
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 96

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (20) expresion -> expresion . MAS expresion
    (21) expresion -> expresion . MENOS expresion
    (22) expresion -> expresion . MULTI expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYOR_I expresion
    (36) expresion -> expresion . MENOR_I expresion
    (37) expresion -> expresion . D_IGUAL expresion
    (38) expresion -> expresion . NO_IGUAL expresion
    (39) expresion -> expresion . OR expresion
    (40) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 98
    MAS             shift and go to state 32
    MENOS           shift and go to state 33
    MULTI           shift and go to state 34
    DIV             shift and go to state 35
    MODULO          shift and go to state 36
    MAYOR           shift and go to state 37
    MENOR           shift and go to state 38
    MAYOR_I         shift and go to state 39
    MENOR_I         shift and go to state 40
    D_IGUAL         shift and go to state 41
    NO_IGUAL        shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 97

    (26) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 26 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 98

    (27) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 27 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 70 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV in state 70 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 70 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 70 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 70 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
