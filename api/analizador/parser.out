Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    PRINT
    STR
    STRING
    TO_OWNED
    TO_STRING

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 8     if -> IF expresion statement
Rule 9     if -> IF expresion statement else
Rule 10    else -> ELSE statement
Rule 11    else -> ELSE if
Rule 12    statement -> LLV_I instrucciones LLV_D
Rule 13    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 14    exp_else -> ELSE LLV_I expresion LLV_D
Rule 15    exp_else -> ELSE exp_if
Rule 16    asignacion -> LET ID IGUAL expresion
Rule 17    asignacion -> LET MUT ID IGUAL expresion
Rule 18    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 19    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 20    tipo -> INT
Rule 21    tipo -> FLOAT
Rule 22    tipo -> BOOL
Rule 23    expresion -> expresion MAS expresion
Rule 24    expresion -> expresion MENOS expresion
Rule 25    expresion -> expresion MULTI expresion
Rule 26    expresion -> expresion DIV expresion
Rule 27    expresion -> expresion MODULO expresion
Rule 28    expresion -> MENOS expresion
Rule 29    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 30    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 31    expresion -> ABS PAR_I expresion PAR_D
Rule 32    expresion -> SQRT PAR_I expresion PAR_D
Rule 33    expresion -> ENTERO
Rule 34    expresion -> DECIMAL
Rule 35    expresion -> TRUE
Rule 36    expresion -> FALSE
Rule 37    expresion -> ID
Rule 38    expresion -> expresion MAYOR expresion
Rule 39    expresion -> expresion MENOR expresion
Rule 40    expresion -> expresion MAYOR_I expresion
Rule 41    expresion -> expresion MENOR_I expresion
Rule 42    expresion -> expresion D_IGUAL expresion
Rule 43    expresion -> expresion NO_IGUAL expresion
Rule 44    expresion -> expresion OR expresion
Rule 45    expresion -> expresion AND expresion
Rule 46    expresion -> NOT expresion
Rule 47    expresion -> PAR_I expresion PAR_D
Rule 48    expresion -> exp_if

Terminals, with rules where they appear

ABS                  : 31
AND                  : 45
BOOL                 : 22
CHAR                 : 
COMA                 : 29 30
DECIMAL              : 34
DIV                  : 26
D_IGUAL              : 42
D_PUNTO              : 18 19 29 29 30 30
EJECUTAR             : 7
ELSE                 : 10 11 14 15
ENTERO               : 33
FALSE                : 36
FLOAT                : 21 30
ID                   : 16 17 18 19 37
IF                   : 8 9 13
IGUAL                : 16 17 18 19
INT                  : 20 29
LET                  : 16 17 18 19
LLV_D                : 12 13 14
LLV_I                : 12 13 14
MAS                  : 23
MAYOR                : 38
MAYOR_I              : 40
MENOR                : 39
MENOR_I              : 41
MENOS                : 24 28
MODULO               : 27
MULTI                : 25
MUT                  : 17 19
NOT                  : 46
NO_IGUAL             : 43
OR                   : 44
PAR_D                : 7 29 30 31 32 47
PAR_I                : 7 29 30 31 32 47
POW_FLOAT            : 30
POW_INT              : 29
PRINT                : 
PUNTOCOMA            : 4 5
SQRT                 : 32
STR                  : 
STRING               : 
TO_OWNED             : 
TO_STRING            : 
TRUE                 : 35
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
ejecutar             : 4
else                 : 9
exp_else             : 13
exp_if               : 15 48
expresion            : 7 8 9 13 13 14 16 17 18 19 23 23 24 24 25 25 26 26 27 27 28 29 29 30 30 31 32 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 47
if                   : 6 11
ini                  : 0
instruccion          : 2 3
instrucciones        : 1 2 12
statement            : 8 9 10
tipo                 : 18 19

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (16) asignacion -> . LET ID IGUAL expresion
    (17) asignacion -> . LET MUT ID IGUAL expresion
    (18) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (19) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (16) asignacion -> . LET ID IGUAL expresion
    (17) asignacion -> . LET MUT ID IGUAL expresion
    (18) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (19) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instruccion                    shift and go to state 10
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 11


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 12


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 13


state 8

    (16) asignacion -> LET . ID IGUAL expresion
    (17) asignacion -> LET . MUT ID IGUAL expresion
    (18) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (19) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 14
    MUT             shift and go to state 15


state 9

    (8) if -> IF . expresion statement
    (9) if -> IF . expresion statement else
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 17
    exp_if                         shift and go to state 30

state 10

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 11

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 12

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 13

    (7) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 31
    exp_if                         shift and go to state 30

state 14

    (16) asignacion -> LET ID . IGUAL expresion
    (18) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 32
    D_PUNTO         shift and go to state 33


state 15

    (17) asignacion -> LET MUT . ID IGUAL expresion
    (19) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 34


state 16

    (13) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 35
    exp_if                         shift and go to state 30

state 17

    (8) if -> IF expresion . statement
    (9) if -> IF expresion . statement else
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion
    (12) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    LLV_I           shift and go to state 50

    statement                      shift and go to state 36

state 18

    (28) expresion -> MENOS . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 51
    exp_if                         shift and go to state 30

state 19

    (29) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 52


state 20

    (47) expresion -> PAR_I . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 53
    exp_if                         shift and go to state 30

state 21

    (30) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 54


state 22

    (31) expresion -> ABS . PAR_I expresion PAR_D

    PAR_I           shift and go to state 55


state 23

    (32) expresion -> SQRT . PAR_I expresion PAR_D

    PAR_I           shift and go to state 56


state 24

    (33) expresion -> ENTERO .

    MAS             reduce using rule 33 (expresion -> ENTERO .)
    MENOS           reduce using rule 33 (expresion -> ENTERO .)
    MULTI           reduce using rule 33 (expresion -> ENTERO .)
    DIV             reduce using rule 33 (expresion -> ENTERO .)
    MODULO          reduce using rule 33 (expresion -> ENTERO .)
    MAYOR           reduce using rule 33 (expresion -> ENTERO .)
    MENOR           reduce using rule 33 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 33 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 33 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 33 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 33 (expresion -> ENTERO .)
    OR              reduce using rule 33 (expresion -> ENTERO .)
    AND             reduce using rule 33 (expresion -> ENTERO .)
    LLV_I           reduce using rule 33 (expresion -> ENTERO .)
    PAR_D           reduce using rule 33 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 33 (expresion -> ENTERO .)
    LLV_D           reduce using rule 33 (expresion -> ENTERO .)
    COMA            reduce using rule 33 (expresion -> ENTERO .)


state 25

    (34) expresion -> DECIMAL .

    MAS             reduce using rule 34 (expresion -> DECIMAL .)
    MENOS           reduce using rule 34 (expresion -> DECIMAL .)
    MULTI           reduce using rule 34 (expresion -> DECIMAL .)
    DIV             reduce using rule 34 (expresion -> DECIMAL .)
    MODULO          reduce using rule 34 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 34 (expresion -> DECIMAL .)
    MENOR           reduce using rule 34 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 34 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 34 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 34 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 34 (expresion -> DECIMAL .)
    OR              reduce using rule 34 (expresion -> DECIMAL .)
    AND             reduce using rule 34 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 34 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 34 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 34 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 34 (expresion -> DECIMAL .)
    COMA            reduce using rule 34 (expresion -> DECIMAL .)


state 26

    (35) expresion -> TRUE .

    MAS             reduce using rule 35 (expresion -> TRUE .)
    MENOS           reduce using rule 35 (expresion -> TRUE .)
    MULTI           reduce using rule 35 (expresion -> TRUE .)
    DIV             reduce using rule 35 (expresion -> TRUE .)
    MODULO          reduce using rule 35 (expresion -> TRUE .)
    MAYOR           reduce using rule 35 (expresion -> TRUE .)
    MENOR           reduce using rule 35 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 35 (expresion -> TRUE .)
    MENOR_I         reduce using rule 35 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 35 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 35 (expresion -> TRUE .)
    OR              reduce using rule 35 (expresion -> TRUE .)
    AND             reduce using rule 35 (expresion -> TRUE .)
    LLV_I           reduce using rule 35 (expresion -> TRUE .)
    PAR_D           reduce using rule 35 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 35 (expresion -> TRUE .)
    LLV_D           reduce using rule 35 (expresion -> TRUE .)
    COMA            reduce using rule 35 (expresion -> TRUE .)


state 27

    (36) expresion -> FALSE .

    MAS             reduce using rule 36 (expresion -> FALSE .)
    MENOS           reduce using rule 36 (expresion -> FALSE .)
    MULTI           reduce using rule 36 (expresion -> FALSE .)
    DIV             reduce using rule 36 (expresion -> FALSE .)
    MODULO          reduce using rule 36 (expresion -> FALSE .)
    MAYOR           reduce using rule 36 (expresion -> FALSE .)
    MENOR           reduce using rule 36 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 36 (expresion -> FALSE .)
    MENOR_I         reduce using rule 36 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 36 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 36 (expresion -> FALSE .)
    OR              reduce using rule 36 (expresion -> FALSE .)
    AND             reduce using rule 36 (expresion -> FALSE .)
    LLV_I           reduce using rule 36 (expresion -> FALSE .)
    PAR_D           reduce using rule 36 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 36 (expresion -> FALSE .)
    LLV_D           reduce using rule 36 (expresion -> FALSE .)
    COMA            reduce using rule 36 (expresion -> FALSE .)


state 28

    (37) expresion -> ID .

    MAS             reduce using rule 37 (expresion -> ID .)
    MENOS           reduce using rule 37 (expresion -> ID .)
    MULTI           reduce using rule 37 (expresion -> ID .)
    DIV             reduce using rule 37 (expresion -> ID .)
    MODULO          reduce using rule 37 (expresion -> ID .)
    MAYOR           reduce using rule 37 (expresion -> ID .)
    MENOR           reduce using rule 37 (expresion -> ID .)
    MAYOR_I         reduce using rule 37 (expresion -> ID .)
    MENOR_I         reduce using rule 37 (expresion -> ID .)
    D_IGUAL         reduce using rule 37 (expresion -> ID .)
    NO_IGUAL        reduce using rule 37 (expresion -> ID .)
    OR              reduce using rule 37 (expresion -> ID .)
    AND             reduce using rule 37 (expresion -> ID .)
    LLV_I           reduce using rule 37 (expresion -> ID .)
    PAR_D           reduce using rule 37 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 37 (expresion -> ID .)
    LLV_D           reduce using rule 37 (expresion -> ID .)
    COMA            reduce using rule 37 (expresion -> ID .)


state 29

    (46) expresion -> NOT . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 57
    exp_if                         shift and go to state 30

state 30

    (48) expresion -> exp_if .

    MAS             reduce using rule 48 (expresion -> exp_if .)
    MENOS           reduce using rule 48 (expresion -> exp_if .)
    MULTI           reduce using rule 48 (expresion -> exp_if .)
    DIV             reduce using rule 48 (expresion -> exp_if .)
    MODULO          reduce using rule 48 (expresion -> exp_if .)
    MAYOR           reduce using rule 48 (expresion -> exp_if .)
    MENOR           reduce using rule 48 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 48 (expresion -> exp_if .)
    MENOR_I         reduce using rule 48 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 48 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 48 (expresion -> exp_if .)
    OR              reduce using rule 48 (expresion -> exp_if .)
    AND             reduce using rule 48 (expresion -> exp_if .)
    LLV_I           reduce using rule 48 (expresion -> exp_if .)
    PAR_D           reduce using rule 48 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 48 (expresion -> exp_if .)
    LLV_D           reduce using rule 48 (expresion -> exp_if .)
    COMA            reduce using rule 48 (expresion -> exp_if .)


state 31

    (7) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 58
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 32

    (16) asignacion -> LET ID IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 59
    exp_if                         shift and go to state 30

state 33

    (18) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL

    INT             shift and go to state 61
    FLOAT           shift and go to state 62
    BOOL            shift and go to state 63

    tipo                           shift and go to state 60

state 34

    (17) asignacion -> LET MUT ID . IGUAL expresion
    (19) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 64
    D_PUNTO         shift and go to state 65


state 35

    (13) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 66
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 36

    (8) if -> IF expresion statement .
    (9) if -> IF expresion statement . else
    (10) else -> . ELSE statement
    (11) else -> . ELSE if

    EJECUTAR        reduce using rule 8 (if -> IF expresion statement .)
    LET             reduce using rule 8 (if -> IF expresion statement .)
    IF              reduce using rule 8 (if -> IF expresion statement .)
    $end            reduce using rule 8 (if -> IF expresion statement .)
    LLV_D           reduce using rule 8 (if -> IF expresion statement .)
    ELSE            shift and go to state 68

    else                           shift and go to state 67

state 37

    (23) expresion -> expresion MAS . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 69
    exp_if                         shift and go to state 30

state 38

    (24) expresion -> expresion MENOS . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 70
    exp_if                         shift and go to state 30

state 39

    (25) expresion -> expresion MULTI . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 71
    exp_if                         shift and go to state 30

state 40

    (26) expresion -> expresion DIV . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 72
    exp_if                         shift and go to state 30

state 41

    (27) expresion -> expresion MODULO . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 73
    exp_if                         shift and go to state 30

state 42

    (38) expresion -> expresion MAYOR . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 74
    exp_if                         shift and go to state 30

state 43

    (39) expresion -> expresion MENOR . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 75
    exp_if                         shift and go to state 30

state 44

    (40) expresion -> expresion MAYOR_I . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 76
    exp_if                         shift and go to state 30

state 45

    (41) expresion -> expresion MENOR_I . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 77
    exp_if                         shift and go to state 30

state 46

    (42) expresion -> expresion D_IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 78
    exp_if                         shift and go to state 30

state 47

    (43) expresion -> expresion NO_IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 79
    exp_if                         shift and go to state 30

state 48

    (44) expresion -> expresion OR . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 80
    exp_if                         shift and go to state 30

state 49

    (45) expresion -> expresion AND . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 81
    exp_if                         shift and go to state 30

state 50

    (12) statement -> LLV_I . instrucciones LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (16) asignacion -> . LET ID IGUAL expresion
    (17) asignacion -> . LET MUT ID IGUAL expresion
    (18) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (19) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instrucciones                  shift and go to state 82
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 51

    (28) expresion -> MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 28 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 28 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 28 (expresion -> MENOS expresion .)
    DIV             reduce using rule 28 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 28 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 28 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 28 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 28 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 28 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 28 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 28 (expresion -> MENOS expresion .)
    OR              reduce using rule 28 (expresion -> MENOS expresion .)
    AND             reduce using rule 28 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 28 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 28 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 28 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 28 (expresion -> MENOS expresion .)
    COMA            reduce using rule 28 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 52

    (29) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 83


state 53

    (47) expresion -> PAR_I expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 84
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 54

    (30) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 85


state 55

    (31) expresion -> ABS PAR_I . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 86
    exp_if                         shift and go to state 30

state 56

    (32) expresion -> SQRT PAR_I . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 87
    exp_if                         shift and go to state 30

state 57

    (46) expresion -> NOT expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 46 (expresion -> NOT expresion .)
    OR              reduce using rule 46 (expresion -> NOT expresion .)
    AND             reduce using rule 46 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 46 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 46 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 46 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 46 (expresion -> NOT expresion .)
    COMA            reduce using rule 46 (expresion -> NOT expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    NO_IGUAL        shift and go to state 47

  ! MAS             [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 46 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 58

    (7) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 7 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 59

    (16) asignacion -> LET ID IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 16 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 60

    (18) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 88


state 61

    (20) tipo -> INT .

    IGUAL           reduce using rule 20 (tipo -> INT .)


state 62

    (21) tipo -> FLOAT .

    IGUAL           reduce using rule 21 (tipo -> FLOAT .)


state 63

    (22) tipo -> BOOL .

    IGUAL           reduce using rule 22 (tipo -> BOOL .)


state 64

    (17) asignacion -> LET MUT ID IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 89
    exp_if                         shift and go to state 30

state 65

    (19) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL

    INT             shift and go to state 61
    FLOAT           shift and go to state 62
    BOOL            shift and go to state 63

    tipo                           shift and go to state 90

state 66

    (13) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 91
    exp_if                         shift and go to state 30

state 67

    (9) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 9 (if -> IF expresion statement else .)
    LET             reduce using rule 9 (if -> IF expresion statement else .)
    IF              reduce using rule 9 (if -> IF expresion statement else .)
    $end            reduce using rule 9 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 9 (if -> IF expresion statement else .)


state 68

    (10) else -> ELSE . statement
    (11) else -> ELSE . if
    (12) statement -> . LLV_I instrucciones LLV_D
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    LLV_I           shift and go to state 50
    IF              shift and go to state 9

    statement                      shift and go to state 92
    if                             shift and go to state 93

state 69

    (23) expresion -> expresion MAS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 23 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 23 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 23 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 23 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 23 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 23 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 23 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 23 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 23 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 23 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 23 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 23 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MULTI           [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 70

    (24) expresion -> expresion MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 24 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MULTI           [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 71

    (25) expresion -> expresion MULTI expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 25 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 25 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 25 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 25 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 25 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 25 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 25 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 25 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 41

  ! MODULO          [ reduce using rule 25 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 72

    (26) expresion -> expresion DIV expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 26 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 26 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 26 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 26 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 26 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 26 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 26 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 26 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 26 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 26 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 26 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 26 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 26 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 26 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 26 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 26 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 41

  ! MODULO          [ reduce using rule 26 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 73

    (27) expresion -> expresion MODULO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAS             reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 27 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 27 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 27 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 27 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 27 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 27 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 27 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 27 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 27 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 74

    (38) expresion -> expresion MAYOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 38 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 38 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 38 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 38 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 75

    (39) expresion -> expresion MENOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 39 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 39 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 39 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 39 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 39 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 39 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 39 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 39 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 39 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 39 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 39 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 39 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 39 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 39 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 39 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 39 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 76

    (40) expresion -> expresion MAYOR_I expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 40 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 40 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 40 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 40 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 77

    (41) expresion -> expresion MENOR_I expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 41 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 41 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 41 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 41 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 78

    (42) expresion -> expresion D_IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 42 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 42 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 42 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 42 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 42 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49

  ! MAS             [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 42 (expresion -> expresion D_IGUAL expresion .) ]


state 79

    (43) expresion -> expresion NO_IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENOR           [ shift and go to state 43 ]
  ! MAYOR_I         [ shift and go to state 44 ]
  ! MENOR_I         [ shift and go to state 45 ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! NO_IGUAL        [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 80

    (44) expresion -> expresion OR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 44 (expresion -> expresion OR expresion .)
    OR              reduce using rule 44 (expresion -> expresion OR expresion .)
    AND             reduce using rule 44 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 44 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 44 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 44 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 44 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 44 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    NO_IGUAL        shift and go to state 47

  ! MAS             [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 44 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 81

    (45) expresion -> expresion AND expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    D_IGUAL         reduce using rule 45 (expresion -> expresion AND expresion .)
    OR              reduce using rule 45 (expresion -> expresion AND expresion .)
    AND             reduce using rule 45 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 45 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 45 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 45 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 45 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 45 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    NO_IGUAL        shift and go to state 47

  ! MAS             [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 46 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]


state 82

    (12) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (16) asignacion -> . LET ID IGUAL expresion
    (17) asignacion -> . LET MUT ID IGUAL expresion
    (18) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (19) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (8) if -> . IF expresion statement
    (9) if -> . IF expresion statement else

    LLV_D           shift and go to state 94
    EJECUTAR        shift and go to state 7
    LET             shift and go to state 8
    IF              shift and go to state 9

    instruccion                    shift and go to state 10
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6

state 83

    (29) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 95


state 84

    (47) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 47 (expresion -> PAR_I expresion PAR_D .)


state 85

    (30) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 96


state 86

    (31) expresion -> ABS PAR_I expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 97
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 87

    (32) expresion -> SQRT PAR_I expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 98
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 88

    (18) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 99
    exp_if                         shift and go to state 30

state 89

    (17) asignacion -> LET MUT ID IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 17 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 90

    (19) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 100


state 91

    (13) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 101
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 92

    (10) else -> ELSE statement .

    EJECUTAR        reduce using rule 10 (else -> ELSE statement .)
    LET             reduce using rule 10 (else -> ELSE statement .)
    IF              reduce using rule 10 (else -> ELSE statement .)
    $end            reduce using rule 10 (else -> ELSE statement .)
    LLV_D           reduce using rule 10 (else -> ELSE statement .)


state 93

    (11) else -> ELSE if .

    EJECUTAR        reduce using rule 11 (else -> ELSE if .)
    LET             reduce using rule 11 (else -> ELSE if .)
    IF              reduce using rule 11 (else -> ELSE if .)
    $end            reduce using rule 11 (else -> ELSE if .)
    LLV_D           reduce using rule 11 (else -> ELSE if .)


state 94

    (12) statement -> LLV_I instrucciones LLV_D .

    ELSE            reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    EJECUTAR        reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 12 (statement -> LLV_I instrucciones LLV_D .)


state 95

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 102


state 96

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 103


state 97

    (31) expresion -> ABS PAR_I expresion PAR_D .

    MAS             reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOS           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MULTI           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    DIV             reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MODULO          reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    OR              reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    AND             reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)
    COMA            reduce using rule 31 (expresion -> ABS PAR_I expresion PAR_D .)


state 98

    (32) expresion -> SQRT PAR_I expresion PAR_D .

    MAS             reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOS           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MULTI           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    DIV             reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MODULO          reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    OR              reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    AND             reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)
    COMA            reduce using rule 32 (expresion -> SQRT PAR_I expresion PAR_D .)


state 99

    (18) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 18 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 100

    (19) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 104
    exp_if                         shift and go to state 30

state 101

    (13) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (14) exp_else -> . ELSE LLV_I expresion LLV_D
    (15) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 106

    exp_else                       shift and go to state 105

state 102

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 107
    exp_if                         shift and go to state 30

state 103

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 108
    exp_if                         shift and go to state 30

state 104

    (19) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 19 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 105

    (13) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 13 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 106

    (14) exp_else -> ELSE . LLV_I expresion LLV_D
    (15) exp_else -> ELSE . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 109
    IF              shift and go to state 16

    exp_if                         shift and go to state 110

state 107

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    COMA            shift and go to state 111
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 108

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    COMA            shift and go to state 112
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 109

    (14) exp_else -> ELSE LLV_I . expresion LLV_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 113
    exp_if                         shift and go to state 30

state 110

    (15) exp_else -> ELSE exp_if .

    MAS             reduce using rule 15 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 15 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 15 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 15 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 15 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 15 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 15 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 15 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 15 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 15 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 15 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 15 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 15 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 15 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 15 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 15 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 15 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 15 (exp_else -> ELSE exp_if .)


state 111

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 114
    exp_if                         shift and go to state 30

state 112

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion MULTI expresion
    (26) expresion -> . expresion DIV expresion
    (27) expresion -> . expresion MODULO expresion
    (28) expresion -> . MENOS expresion
    (29) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (30) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (31) expresion -> . ABS PAR_I expresion PAR_D
    (32) expresion -> . SQRT PAR_I expresion PAR_D
    (33) expresion -> . ENTERO
    (34) expresion -> . DECIMAL
    (35) expresion -> . TRUE
    (36) expresion -> . FALSE
    (37) expresion -> . ID
    (38) expresion -> . expresion MAYOR expresion
    (39) expresion -> . expresion MENOR expresion
    (40) expresion -> . expresion MAYOR_I expresion
    (41) expresion -> . expresion MENOR_I expresion
    (42) expresion -> . expresion D_IGUAL expresion
    (43) expresion -> . expresion NO_IGUAL expresion
    (44) expresion -> . expresion OR expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . NOT expresion
    (47) expresion -> . PAR_I expresion PAR_D
    (48) expresion -> . exp_if
    (13) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    MENOS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 21
    ABS             shift and go to state 22
    SQRT            shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    ID              shift and go to state 28
    NOT             shift and go to state 29
    PAR_I           shift and go to state 20
    IF              shift and go to state 16

    expresion                      shift and go to state 115
    exp_if                         shift and go to state 30

state 113

    (14) exp_else -> ELSE LLV_I expresion . LLV_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 116
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 114

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 117
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 115

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . MULTI expresion
    (26) expresion -> expresion . DIV expresion
    (27) expresion -> expresion . MODULO expresion
    (38) expresion -> expresion . MAYOR expresion
    (39) expresion -> expresion . MENOR expresion
    (40) expresion -> expresion . MAYOR_I expresion
    (41) expresion -> expresion . MENOR_I expresion
    (42) expresion -> expresion . D_IGUAL expresion
    (43) expresion -> expresion . NO_IGUAL expresion
    (44) expresion -> expresion . OR expresion
    (45) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 118
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYOR_I         shift and go to state 44
    MENOR_I         shift and go to state 45
    D_IGUAL         shift and go to state 46
    NO_IGUAL        shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49


state 116

    (14) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 14 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 117

    (29) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 29 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 118

    (30) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 30 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 78 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
