Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     instruccion -> match
Rule 8     instruccion -> while
Rule 9     instruccion -> loop
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> print PUNTOCOMA
Rule 13    instruccion_no_pt -> ejecutar
Rule 14    instruccion_no_pt -> asignacion
Rule 15    instruccion_no_pt -> if
Rule 16    instruccion_no_pt -> match
Rule 17    ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 18    print -> PRINT NOT PAR_I expresion PAR_D
Rule 19    print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D
Rule 20    exp_list -> exp_list COMA expresion
Rule 21    exp_list -> expresion
Rule 22    if -> IF expresion statement
Rule 23    if -> IF expresion statement else
Rule 24    else -> ELSE statement
Rule 25    else -> ELSE if
Rule 26    statement -> LLV_I instrucciones LLV_D
Rule 27    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 28    exp_else -> ELSE LLV_I expresion LLV_D
Rule 29    exp_else -> ELSE exp_if
Rule 30    match -> MATCH expresion LLV_I case_list LLV_D
Rule 31    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 32    case_list -> case_list case
Rule 33    case_list -> case
Rule 34    case -> exp_list IGUAL MAYOR statement
Rule 35    case -> exp_list IGUAL MAYOR instruccion_no_pt COMA
Rule 36    default -> GUION_B IGUAL MAYOR statement
Rule 37    default -> GUION_B IGUAL MAYOR instruccion
Rule 38    exp_list_c -> exp_list_c BARRA expresion
Rule 39    exp_list_c -> expresion
Rule 40    match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 41    match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 42    case_list_exp -> case_list_exp case_exp
Rule 43    case_list_exp -> case_exp
Rule 44    case_exp -> exp_list_c IGUAL MAYOR expresion
Rule 45    case_exp -> exp_list_c IGUAL MAYOR expresion COMA
Rule 46    default_exp -> GUION_B IGUAL MAYOR expresion
Rule 47    while -> WHILE expresion statement
Rule 48    break -> BREAK PUNTOCOMA
Rule 49    break -> BREAK expresion PUNTOCOMA
Rule 50    continue -> CONTINUE PUNTOCOMA
Rule 51    loop -> LOOP statement
Rule 52    loop_exp -> LOOP statement
Rule 53    asignacion -> LET ID IGUAL expresion
Rule 54    asignacion -> LET MUT ID IGUAL expresion
Rule 55    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 56    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 57    asignacion -> ID IGUAL expresion
Rule 58    tipo -> INT
Rule 59    tipo -> FLOAT
Rule 60    tipo -> BOOL
Rule 61    tipo -> AMP STR
Rule 62    tipo -> STRING
Rule 63    tipo -> CHAR
Rule 64    expresion -> expresion MAS expresion
Rule 65    expresion -> expresion MENOS expresion
Rule 66    expresion -> expresion MULTI expresion
Rule 67    expresion -> expresion DIV expresion
Rule 68    expresion -> expresion MODULO expresion
Rule 69    expresion -> MENOS expresion
Rule 70    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 71    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 72    expresion -> ABS PAR_I expresion PAR_D
Rule 73    expresion -> SQRT PAR_I expresion PAR_D
Rule 74    expresion -> ENTERO
Rule 75    expresion -> DECIMAL
Rule 76    expresion -> TRUE
Rule 77    expresion -> FALSE
Rule 78    expresion -> CHAR_S
Rule 79    expresion -> CADENA
Rule 80    expresion -> expresion PUNTO TO_STRING PAR_I PAR_D
Rule 81    expresion -> expresion AS tipo
Rule 82    expresion -> ID
Rule 83    expresion -> expresion MAYOR expresion
Rule 84    expresion -> expresion MENOR expresion
Rule 85    expresion -> expresion MAYOR_I expresion
Rule 86    expresion -> expresion MENOR_I expresion
Rule 87    expresion -> expresion D_IGUAL expresion
Rule 88    expresion -> expresion NO_IGUAL expresion
Rule 89    expresion -> expresion OR expresion
Rule 90    expresion -> expresion AND expresion
Rule 91    expresion -> NOT expresion
Rule 92    expresion -> PAR_I expresion PAR_D
Rule 93    expresion -> exp_if
Rule 94    expresion -> match_exp
Rule 95    expresion -> loop_exp

Terminals, with rules where they appear

ABS                  : 72
AMP                  : 61
AND                  : 90
AS                   : 81
BARRA                : 38
BOOL                 : 60
BREAK                : 48 49
CADENA               : 19 79
CHAR                 : 63
CHAR_S               : 78
COMA                 : 19 20 35 45 70 71
CONTINUE             : 50
DECIMAL              : 75
DIV                  : 67
D_IGUAL              : 87
D_PUNTO              : 55 56 70 70 71 71
EJECUTAR             : 17
ELSE                 : 24 25 28 29
ENTERO               : 74
FALSE                : 77
FLOAT                : 59 71
GUION_B              : 36 37 46
ID                   : 53 54 55 56 57 82
IF                   : 22 23 27
IGUAL                : 34 35 36 37 44 45 46 53 54 55 56 57
INT                  : 58 70
LET                  : 53 54 55 56
LLV_D                : 26 27 28 30 31 40 41
LLV_I                : 26 27 28 30 31 40 41
LOOP                 : 51 52
MAS                  : 64
MATCH                : 30 31 40 41
MAYOR                : 34 35 36 37 44 45 46 83
MAYOR_I              : 85
MENOR                : 84
MENOR_I              : 86
MENOS                : 65 69
MODULO               : 68
MULTI                : 66
MUT                  : 54 56
NOT                  : 18 19 91
NO_IGUAL             : 88
OR                   : 89
PAR_D                : 17 18 19 70 71 72 73 80 92
PAR_I                : 17 18 19 70 71 72 73 80 92
POW_FLOAT            : 71
POW_INT              : 70
PRINT                : 18 19
PUNTO                : 80
PUNTOCOMA            : 4 5 12 48 49 50
SQRT                 : 73
STR                  : 61
STRING               : 62
TO_STRING            : 80
TRUE                 : 76
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

asignacion           : 5 14
break                : 10
case                 : 32 33
case_exp             : 42 43
case_list            : 30 31 32
case_list_exp        : 40 41 42
continue             : 11
default              : 31
default_exp          : 41
ejecutar             : 4 13
else                 : 23
exp_else             : 27
exp_if               : 29 93
exp_list             : 19 20 34 35
exp_list_c           : 38 44 45
expresion            : 17 18 20 21 22 23 27 27 28 30 31 38 39 40 41 44 45 46 47 49 53 54 55 56 57 64 64 65 65 66 66 67 67 68 68 69 70 70 71 71 72 73 80 81 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 92
if                   : 6 15 25
ini                  : 0
instruccion          : 2 3 37
instruccion_no_pt    : 35
instrucciones        : 1 2 26
loop                 : 9
loop_exp             : 95
match                : 7 16
match_exp            : 94
print                : 12
statement            : 22 23 24 34 36 47 51 52
tipo                 : 55 56 81
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . print PUNTOCOMA
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D
    (47) while -> . WHILE expresion statement
    (51) loop -> . LOOP statement
    (48) break -> . BREAK PUNTOCOMA
    (49) break -> . BREAK expresion PUNTOCOMA
    (50) continue -> . CONTINUE PUNTOCOMA
    (18) print -> . PRINT NOT PAR_I expresion PAR_D
    (19) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D

    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    WHILE           shift and go to state 18
    LOOP            shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    PRINT           shift and go to state 22

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    print                          shift and go to state 12

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . print PUNTOCOMA
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D
    (47) while -> . WHILE expresion statement
    (51) loop -> . LOOP statement
    (48) break -> . BREAK PUNTOCOMA
    (49) break -> . BREAK expresion PUNTOCOMA
    (50) continue -> . CONTINUE PUNTOCOMA
    (18) print -> . PRINT NOT PAR_I expresion PAR_D
    (19) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    WHILE           shift and go to state 18
    LOOP            shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    PRINT           shift and go to state 22

    instruccion                    shift and go to state 23
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    print                          shift and go to state 12

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 24


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 25


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    ID              reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    MATCH           reduce using rule 6 (instruccion -> if .)
    WHILE           reduce using rule 6 (instruccion -> if .)
    LOOP            reduce using rule 6 (instruccion -> if .)
    BREAK           reduce using rule 6 (instruccion -> if .)
    CONTINUE        reduce using rule 6 (instruccion -> if .)
    PRINT           reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) instruccion -> match .

    EJECUTAR        reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    WHILE           reduce using rule 7 (instruccion -> match .)
    LOOP            reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    PRINT           reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLV_D           reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> while .

    EJECUTAR        reduce using rule 8 (instruccion -> while .)
    LET             reduce using rule 8 (instruccion -> while .)
    ID              reduce using rule 8 (instruccion -> while .)
    IF              reduce using rule 8 (instruccion -> while .)
    MATCH           reduce using rule 8 (instruccion -> while .)
    WHILE           reduce using rule 8 (instruccion -> while .)
    LOOP            reduce using rule 8 (instruccion -> while .)
    BREAK           reduce using rule 8 (instruccion -> while .)
    CONTINUE        reduce using rule 8 (instruccion -> while .)
    PRINT           reduce using rule 8 (instruccion -> while .)
    $end            reduce using rule 8 (instruccion -> while .)
    LLV_D           reduce using rule 8 (instruccion -> while .)


state 9

    (9) instruccion -> loop .

    EJECUTAR        reduce using rule 9 (instruccion -> loop .)
    LET             reduce using rule 9 (instruccion -> loop .)
    ID              reduce using rule 9 (instruccion -> loop .)
    IF              reduce using rule 9 (instruccion -> loop .)
    MATCH           reduce using rule 9 (instruccion -> loop .)
    WHILE           reduce using rule 9 (instruccion -> loop .)
    LOOP            reduce using rule 9 (instruccion -> loop .)
    BREAK           reduce using rule 9 (instruccion -> loop .)
    CONTINUE        reduce using rule 9 (instruccion -> loop .)
    PRINT           reduce using rule 9 (instruccion -> loop .)
    $end            reduce using rule 9 (instruccion -> loop .)
    LLV_D           reduce using rule 9 (instruccion -> loop .)


state 10

    (10) instruccion -> break .

    EJECUTAR        reduce using rule 10 (instruccion -> break .)
    LET             reduce using rule 10 (instruccion -> break .)
    ID              reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    MATCH           reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    LOOP            reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLV_D           reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    EJECUTAR        reduce using rule 11 (instruccion -> continue .)
    LET             reduce using rule 11 (instruccion -> continue .)
    ID              reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    MATCH           reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    LOOP            reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLV_D           reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> print . PUNTOCOMA

    PUNTOCOMA       shift and go to state 26


state 13

    (17) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 27


state 14

    (53) asignacion -> LET . ID IGUAL expresion
    (54) asignacion -> LET . MUT ID IGUAL expresion
    (55) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 28
    MUT             shift and go to state 29


state 15

    (57) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 30


state 16

    (22) if -> IF . expresion statement
    (23) if -> IF . expresion statement else
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 32
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 17

    (30) match -> MATCH . expresion LLV_I case_list LLV_D
    (31) match -> MATCH . expresion LLV_I case_list default LLV_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 52
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 18

    (47) while -> WHILE . expresion statement
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 53
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 19

    (51) loop -> LOOP . statement
    (26) statement -> . LLV_I instrucciones LLV_D

    LLV_I           shift and go to state 55

    statement                      shift and go to state 54

state 20

    (48) break -> BREAK . PUNTOCOMA
    (49) break -> BREAK . expresion PUNTOCOMA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    PUNTOCOMA       shift and go to state 56
    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 57
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 21

    (50) continue -> CONTINUE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 58


state 22

    (18) print -> PRINT . NOT PAR_I expresion PAR_D
    (19) print -> PRINT . NOT PAR_I CADENA COMA exp_list PAR_D

    NOT             shift and go to state 59


state 23

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 24

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LOOP            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    PRINT           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 25

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LOOP            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    PRINT           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 26

    (12) instruccion -> print PUNTOCOMA .

    EJECUTAR        reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    LET             reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    MATCH           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    LOOP            reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    PRINT           reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    $end            reduce using rule 12 (instruccion -> print PUNTOCOMA .)
    LLV_D           reduce using rule 12 (instruccion -> print PUNTOCOMA .)


state 27

    (17) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 60
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 28

    (53) asignacion -> LET ID . IGUAL expresion
    (55) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 61
    D_PUNTO         shift and go to state 62


state 29

    (54) asignacion -> LET MUT . ID IGUAL expresion
    (56) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 63


state 30

    (57) asignacion -> ID IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 64
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 31

    (27) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 65
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 32

    (22) if -> IF expresion . statement
    (23) if -> IF expresion . statement else
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion
    (26) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81
    LLV_I           shift and go to state 55

    statement                      shift and go to state 66

state 33

    (69) expresion -> MENOS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 82
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 34

    (70) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 83


state 35

    (92) expresion -> PAR_I . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 84
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 36

    (71) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 85


state 37

    (72) expresion -> ABS . PAR_I expresion PAR_D

    PAR_I           shift and go to state 86


state 38

    (73) expresion -> SQRT . PAR_I expresion PAR_D

    PAR_I           shift and go to state 87


state 39

    (74) expresion -> ENTERO .

    MAS             reduce using rule 74 (expresion -> ENTERO .)
    MENOS           reduce using rule 74 (expresion -> ENTERO .)
    MULTI           reduce using rule 74 (expresion -> ENTERO .)
    DIV             reduce using rule 74 (expresion -> ENTERO .)
    MODULO          reduce using rule 74 (expresion -> ENTERO .)
    PUNTO           reduce using rule 74 (expresion -> ENTERO .)
    AS              reduce using rule 74 (expresion -> ENTERO .)
    MAYOR           reduce using rule 74 (expresion -> ENTERO .)
    MENOR           reduce using rule 74 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 74 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 74 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 74 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 74 (expresion -> ENTERO .)
    OR              reduce using rule 74 (expresion -> ENTERO .)
    AND             reduce using rule 74 (expresion -> ENTERO .)
    LLV_I           reduce using rule 74 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 74 (expresion -> ENTERO .)
    PAR_D           reduce using rule 74 (expresion -> ENTERO .)
    COMA            reduce using rule 74 (expresion -> ENTERO .)
    IGUAL           reduce using rule 74 (expresion -> ENTERO .)
    LLV_D           reduce using rule 74 (expresion -> ENTERO .)
    BARRA           reduce using rule 74 (expresion -> ENTERO .)
    GUION_B         reduce using rule 74 (expresion -> ENTERO .)
    INT             reduce using rule 74 (expresion -> ENTERO .)
    FLOAT           reduce using rule 74 (expresion -> ENTERO .)
    ABS             reduce using rule 74 (expresion -> ENTERO .)
    SQRT            reduce using rule 74 (expresion -> ENTERO .)
    ENTERO          reduce using rule 74 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 74 (expresion -> ENTERO .)
    TRUE            reduce using rule 74 (expresion -> ENTERO .)
    FALSE           reduce using rule 74 (expresion -> ENTERO .)
    CHAR_S          reduce using rule 74 (expresion -> ENTERO .)
    CADENA          reduce using rule 74 (expresion -> ENTERO .)
    ID              reduce using rule 74 (expresion -> ENTERO .)
    NOT             reduce using rule 74 (expresion -> ENTERO .)
    PAR_I           reduce using rule 74 (expresion -> ENTERO .)
    IF              reduce using rule 74 (expresion -> ENTERO .)
    MATCH           reduce using rule 74 (expresion -> ENTERO .)
    LOOP            reduce using rule 74 (expresion -> ENTERO .)


state 40

    (75) expresion -> DECIMAL .

    MAS             reduce using rule 75 (expresion -> DECIMAL .)
    MENOS           reduce using rule 75 (expresion -> DECIMAL .)
    MULTI           reduce using rule 75 (expresion -> DECIMAL .)
    DIV             reduce using rule 75 (expresion -> DECIMAL .)
    MODULO          reduce using rule 75 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 75 (expresion -> DECIMAL .)
    AS              reduce using rule 75 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 75 (expresion -> DECIMAL .)
    MENOR           reduce using rule 75 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 75 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 75 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 75 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 75 (expresion -> DECIMAL .)
    OR              reduce using rule 75 (expresion -> DECIMAL .)
    AND             reduce using rule 75 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 75 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 75 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 75 (expresion -> DECIMAL .)
    COMA            reduce using rule 75 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 75 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 75 (expresion -> DECIMAL .)
    BARRA           reduce using rule 75 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 75 (expresion -> DECIMAL .)
    INT             reduce using rule 75 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 75 (expresion -> DECIMAL .)
    ABS             reduce using rule 75 (expresion -> DECIMAL .)
    SQRT            reduce using rule 75 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 75 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 75 (expresion -> DECIMAL .)
    TRUE            reduce using rule 75 (expresion -> DECIMAL .)
    FALSE           reduce using rule 75 (expresion -> DECIMAL .)
    CHAR_S          reduce using rule 75 (expresion -> DECIMAL .)
    CADENA          reduce using rule 75 (expresion -> DECIMAL .)
    ID              reduce using rule 75 (expresion -> DECIMAL .)
    NOT             reduce using rule 75 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 75 (expresion -> DECIMAL .)
    IF              reduce using rule 75 (expresion -> DECIMAL .)
    MATCH           reduce using rule 75 (expresion -> DECIMAL .)
    LOOP            reduce using rule 75 (expresion -> DECIMAL .)


state 41

    (76) expresion -> TRUE .

    MAS             reduce using rule 76 (expresion -> TRUE .)
    MENOS           reduce using rule 76 (expresion -> TRUE .)
    MULTI           reduce using rule 76 (expresion -> TRUE .)
    DIV             reduce using rule 76 (expresion -> TRUE .)
    MODULO          reduce using rule 76 (expresion -> TRUE .)
    PUNTO           reduce using rule 76 (expresion -> TRUE .)
    AS              reduce using rule 76 (expresion -> TRUE .)
    MAYOR           reduce using rule 76 (expresion -> TRUE .)
    MENOR           reduce using rule 76 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 76 (expresion -> TRUE .)
    MENOR_I         reduce using rule 76 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 76 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 76 (expresion -> TRUE .)
    OR              reduce using rule 76 (expresion -> TRUE .)
    AND             reduce using rule 76 (expresion -> TRUE .)
    LLV_I           reduce using rule 76 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 76 (expresion -> TRUE .)
    PAR_D           reduce using rule 76 (expresion -> TRUE .)
    COMA            reduce using rule 76 (expresion -> TRUE .)
    IGUAL           reduce using rule 76 (expresion -> TRUE .)
    LLV_D           reduce using rule 76 (expresion -> TRUE .)
    BARRA           reduce using rule 76 (expresion -> TRUE .)
    GUION_B         reduce using rule 76 (expresion -> TRUE .)
    INT             reduce using rule 76 (expresion -> TRUE .)
    FLOAT           reduce using rule 76 (expresion -> TRUE .)
    ABS             reduce using rule 76 (expresion -> TRUE .)
    SQRT            reduce using rule 76 (expresion -> TRUE .)
    ENTERO          reduce using rule 76 (expresion -> TRUE .)
    DECIMAL         reduce using rule 76 (expresion -> TRUE .)
    TRUE            reduce using rule 76 (expresion -> TRUE .)
    FALSE           reduce using rule 76 (expresion -> TRUE .)
    CHAR_S          reduce using rule 76 (expresion -> TRUE .)
    CADENA          reduce using rule 76 (expresion -> TRUE .)
    ID              reduce using rule 76 (expresion -> TRUE .)
    NOT             reduce using rule 76 (expresion -> TRUE .)
    PAR_I           reduce using rule 76 (expresion -> TRUE .)
    IF              reduce using rule 76 (expresion -> TRUE .)
    MATCH           reduce using rule 76 (expresion -> TRUE .)
    LOOP            reduce using rule 76 (expresion -> TRUE .)


state 42

    (77) expresion -> FALSE .

    MAS             reduce using rule 77 (expresion -> FALSE .)
    MENOS           reduce using rule 77 (expresion -> FALSE .)
    MULTI           reduce using rule 77 (expresion -> FALSE .)
    DIV             reduce using rule 77 (expresion -> FALSE .)
    MODULO          reduce using rule 77 (expresion -> FALSE .)
    PUNTO           reduce using rule 77 (expresion -> FALSE .)
    AS              reduce using rule 77 (expresion -> FALSE .)
    MAYOR           reduce using rule 77 (expresion -> FALSE .)
    MENOR           reduce using rule 77 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 77 (expresion -> FALSE .)
    MENOR_I         reduce using rule 77 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 77 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 77 (expresion -> FALSE .)
    OR              reduce using rule 77 (expresion -> FALSE .)
    AND             reduce using rule 77 (expresion -> FALSE .)
    LLV_I           reduce using rule 77 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 77 (expresion -> FALSE .)
    PAR_D           reduce using rule 77 (expresion -> FALSE .)
    COMA            reduce using rule 77 (expresion -> FALSE .)
    IGUAL           reduce using rule 77 (expresion -> FALSE .)
    LLV_D           reduce using rule 77 (expresion -> FALSE .)
    BARRA           reduce using rule 77 (expresion -> FALSE .)
    GUION_B         reduce using rule 77 (expresion -> FALSE .)
    INT             reduce using rule 77 (expresion -> FALSE .)
    FLOAT           reduce using rule 77 (expresion -> FALSE .)
    ABS             reduce using rule 77 (expresion -> FALSE .)
    SQRT            reduce using rule 77 (expresion -> FALSE .)
    ENTERO          reduce using rule 77 (expresion -> FALSE .)
    DECIMAL         reduce using rule 77 (expresion -> FALSE .)
    TRUE            reduce using rule 77 (expresion -> FALSE .)
    FALSE           reduce using rule 77 (expresion -> FALSE .)
    CHAR_S          reduce using rule 77 (expresion -> FALSE .)
    CADENA          reduce using rule 77 (expresion -> FALSE .)
    ID              reduce using rule 77 (expresion -> FALSE .)
    NOT             reduce using rule 77 (expresion -> FALSE .)
    PAR_I           reduce using rule 77 (expresion -> FALSE .)
    IF              reduce using rule 77 (expresion -> FALSE .)
    MATCH           reduce using rule 77 (expresion -> FALSE .)
    LOOP            reduce using rule 77 (expresion -> FALSE .)


state 43

    (78) expresion -> CHAR_S .

    MAS             reduce using rule 78 (expresion -> CHAR_S .)
    MENOS           reduce using rule 78 (expresion -> CHAR_S .)
    MULTI           reduce using rule 78 (expresion -> CHAR_S .)
    DIV             reduce using rule 78 (expresion -> CHAR_S .)
    MODULO          reduce using rule 78 (expresion -> CHAR_S .)
    PUNTO           reduce using rule 78 (expresion -> CHAR_S .)
    AS              reduce using rule 78 (expresion -> CHAR_S .)
    MAYOR           reduce using rule 78 (expresion -> CHAR_S .)
    MENOR           reduce using rule 78 (expresion -> CHAR_S .)
    MAYOR_I         reduce using rule 78 (expresion -> CHAR_S .)
    MENOR_I         reduce using rule 78 (expresion -> CHAR_S .)
    D_IGUAL         reduce using rule 78 (expresion -> CHAR_S .)
    NO_IGUAL        reduce using rule 78 (expresion -> CHAR_S .)
    OR              reduce using rule 78 (expresion -> CHAR_S .)
    AND             reduce using rule 78 (expresion -> CHAR_S .)
    LLV_I           reduce using rule 78 (expresion -> CHAR_S .)
    PUNTOCOMA       reduce using rule 78 (expresion -> CHAR_S .)
    PAR_D           reduce using rule 78 (expresion -> CHAR_S .)
    COMA            reduce using rule 78 (expresion -> CHAR_S .)
    IGUAL           reduce using rule 78 (expresion -> CHAR_S .)
    LLV_D           reduce using rule 78 (expresion -> CHAR_S .)
    BARRA           reduce using rule 78 (expresion -> CHAR_S .)
    GUION_B         reduce using rule 78 (expresion -> CHAR_S .)
    INT             reduce using rule 78 (expresion -> CHAR_S .)
    FLOAT           reduce using rule 78 (expresion -> CHAR_S .)
    ABS             reduce using rule 78 (expresion -> CHAR_S .)
    SQRT            reduce using rule 78 (expresion -> CHAR_S .)
    ENTERO          reduce using rule 78 (expresion -> CHAR_S .)
    DECIMAL         reduce using rule 78 (expresion -> CHAR_S .)
    TRUE            reduce using rule 78 (expresion -> CHAR_S .)
    FALSE           reduce using rule 78 (expresion -> CHAR_S .)
    CHAR_S          reduce using rule 78 (expresion -> CHAR_S .)
    CADENA          reduce using rule 78 (expresion -> CHAR_S .)
    ID              reduce using rule 78 (expresion -> CHAR_S .)
    NOT             reduce using rule 78 (expresion -> CHAR_S .)
    PAR_I           reduce using rule 78 (expresion -> CHAR_S .)
    IF              reduce using rule 78 (expresion -> CHAR_S .)
    MATCH           reduce using rule 78 (expresion -> CHAR_S .)
    LOOP            reduce using rule 78 (expresion -> CHAR_S .)


state 44

    (79) expresion -> CADENA .

    MAS             reduce using rule 79 (expresion -> CADENA .)
    MENOS           reduce using rule 79 (expresion -> CADENA .)
    MULTI           reduce using rule 79 (expresion -> CADENA .)
    DIV             reduce using rule 79 (expresion -> CADENA .)
    MODULO          reduce using rule 79 (expresion -> CADENA .)
    PUNTO           reduce using rule 79 (expresion -> CADENA .)
    AS              reduce using rule 79 (expresion -> CADENA .)
    MAYOR           reduce using rule 79 (expresion -> CADENA .)
    MENOR           reduce using rule 79 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 79 (expresion -> CADENA .)
    MENOR_I         reduce using rule 79 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 79 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 79 (expresion -> CADENA .)
    OR              reduce using rule 79 (expresion -> CADENA .)
    AND             reduce using rule 79 (expresion -> CADENA .)
    LLV_I           reduce using rule 79 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 79 (expresion -> CADENA .)
    PAR_D           reduce using rule 79 (expresion -> CADENA .)
    COMA            reduce using rule 79 (expresion -> CADENA .)
    IGUAL           reduce using rule 79 (expresion -> CADENA .)
    LLV_D           reduce using rule 79 (expresion -> CADENA .)
    BARRA           reduce using rule 79 (expresion -> CADENA .)
    GUION_B         reduce using rule 79 (expresion -> CADENA .)
    INT             reduce using rule 79 (expresion -> CADENA .)
    FLOAT           reduce using rule 79 (expresion -> CADENA .)
    ABS             reduce using rule 79 (expresion -> CADENA .)
    SQRT            reduce using rule 79 (expresion -> CADENA .)
    ENTERO          reduce using rule 79 (expresion -> CADENA .)
    DECIMAL         reduce using rule 79 (expresion -> CADENA .)
    TRUE            reduce using rule 79 (expresion -> CADENA .)
    FALSE           reduce using rule 79 (expresion -> CADENA .)
    CHAR_S          reduce using rule 79 (expresion -> CADENA .)
    CADENA          reduce using rule 79 (expresion -> CADENA .)
    ID              reduce using rule 79 (expresion -> CADENA .)
    NOT             reduce using rule 79 (expresion -> CADENA .)
    PAR_I           reduce using rule 79 (expresion -> CADENA .)
    IF              reduce using rule 79 (expresion -> CADENA .)
    MATCH           reduce using rule 79 (expresion -> CADENA .)
    LOOP            reduce using rule 79 (expresion -> CADENA .)


state 45

    (82) expresion -> ID .

    MAS             reduce using rule 82 (expresion -> ID .)
    MENOS           reduce using rule 82 (expresion -> ID .)
    MULTI           reduce using rule 82 (expresion -> ID .)
    DIV             reduce using rule 82 (expresion -> ID .)
    MODULO          reduce using rule 82 (expresion -> ID .)
    PUNTO           reduce using rule 82 (expresion -> ID .)
    AS              reduce using rule 82 (expresion -> ID .)
    MAYOR           reduce using rule 82 (expresion -> ID .)
    MENOR           reduce using rule 82 (expresion -> ID .)
    MAYOR_I         reduce using rule 82 (expresion -> ID .)
    MENOR_I         reduce using rule 82 (expresion -> ID .)
    D_IGUAL         reduce using rule 82 (expresion -> ID .)
    NO_IGUAL        reduce using rule 82 (expresion -> ID .)
    OR              reduce using rule 82 (expresion -> ID .)
    AND             reduce using rule 82 (expresion -> ID .)
    LLV_I           reduce using rule 82 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 82 (expresion -> ID .)
    PAR_D           reduce using rule 82 (expresion -> ID .)
    COMA            reduce using rule 82 (expresion -> ID .)
    IGUAL           reduce using rule 82 (expresion -> ID .)
    LLV_D           reduce using rule 82 (expresion -> ID .)
    BARRA           reduce using rule 82 (expresion -> ID .)
    GUION_B         reduce using rule 82 (expresion -> ID .)
    INT             reduce using rule 82 (expresion -> ID .)
    FLOAT           reduce using rule 82 (expresion -> ID .)
    ABS             reduce using rule 82 (expresion -> ID .)
    SQRT            reduce using rule 82 (expresion -> ID .)
    ENTERO          reduce using rule 82 (expresion -> ID .)
    DECIMAL         reduce using rule 82 (expresion -> ID .)
    TRUE            reduce using rule 82 (expresion -> ID .)
    FALSE           reduce using rule 82 (expresion -> ID .)
    CHAR_S          reduce using rule 82 (expresion -> ID .)
    CADENA          reduce using rule 82 (expresion -> ID .)
    ID              reduce using rule 82 (expresion -> ID .)
    NOT             reduce using rule 82 (expresion -> ID .)
    PAR_I           reduce using rule 82 (expresion -> ID .)
    IF              reduce using rule 82 (expresion -> ID .)
    MATCH           reduce using rule 82 (expresion -> ID .)
    LOOP            reduce using rule 82 (expresion -> ID .)


state 46

    (91) expresion -> NOT . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 88
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 47

    (93) expresion -> exp_if .

    MAS             reduce using rule 93 (expresion -> exp_if .)
    MENOS           reduce using rule 93 (expresion -> exp_if .)
    MULTI           reduce using rule 93 (expresion -> exp_if .)
    DIV             reduce using rule 93 (expresion -> exp_if .)
    MODULO          reduce using rule 93 (expresion -> exp_if .)
    PUNTO           reduce using rule 93 (expresion -> exp_if .)
    AS              reduce using rule 93 (expresion -> exp_if .)
    MAYOR           reduce using rule 93 (expresion -> exp_if .)
    MENOR           reduce using rule 93 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 93 (expresion -> exp_if .)
    MENOR_I         reduce using rule 93 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 93 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 93 (expresion -> exp_if .)
    OR              reduce using rule 93 (expresion -> exp_if .)
    AND             reduce using rule 93 (expresion -> exp_if .)
    LLV_I           reduce using rule 93 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 93 (expresion -> exp_if .)
    PAR_D           reduce using rule 93 (expresion -> exp_if .)
    COMA            reduce using rule 93 (expresion -> exp_if .)
    IGUAL           reduce using rule 93 (expresion -> exp_if .)
    LLV_D           reduce using rule 93 (expresion -> exp_if .)
    BARRA           reduce using rule 93 (expresion -> exp_if .)
    GUION_B         reduce using rule 93 (expresion -> exp_if .)
    INT             reduce using rule 93 (expresion -> exp_if .)
    FLOAT           reduce using rule 93 (expresion -> exp_if .)
    ABS             reduce using rule 93 (expresion -> exp_if .)
    SQRT            reduce using rule 93 (expresion -> exp_if .)
    ENTERO          reduce using rule 93 (expresion -> exp_if .)
    DECIMAL         reduce using rule 93 (expresion -> exp_if .)
    TRUE            reduce using rule 93 (expresion -> exp_if .)
    FALSE           reduce using rule 93 (expresion -> exp_if .)
    CHAR_S          reduce using rule 93 (expresion -> exp_if .)
    CADENA          reduce using rule 93 (expresion -> exp_if .)
    ID              reduce using rule 93 (expresion -> exp_if .)
    NOT             reduce using rule 93 (expresion -> exp_if .)
    PAR_I           reduce using rule 93 (expresion -> exp_if .)
    IF              reduce using rule 93 (expresion -> exp_if .)
    MATCH           reduce using rule 93 (expresion -> exp_if .)
    LOOP            reduce using rule 93 (expresion -> exp_if .)


state 48

    (94) expresion -> match_exp .

    MAS             reduce using rule 94 (expresion -> match_exp .)
    MENOS           reduce using rule 94 (expresion -> match_exp .)
    MULTI           reduce using rule 94 (expresion -> match_exp .)
    DIV             reduce using rule 94 (expresion -> match_exp .)
    MODULO          reduce using rule 94 (expresion -> match_exp .)
    PUNTO           reduce using rule 94 (expresion -> match_exp .)
    AS              reduce using rule 94 (expresion -> match_exp .)
    MAYOR           reduce using rule 94 (expresion -> match_exp .)
    MENOR           reduce using rule 94 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 94 (expresion -> match_exp .)
    MENOR_I         reduce using rule 94 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 94 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 94 (expresion -> match_exp .)
    OR              reduce using rule 94 (expresion -> match_exp .)
    AND             reduce using rule 94 (expresion -> match_exp .)
    LLV_I           reduce using rule 94 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 94 (expresion -> match_exp .)
    PAR_D           reduce using rule 94 (expresion -> match_exp .)
    COMA            reduce using rule 94 (expresion -> match_exp .)
    IGUAL           reduce using rule 94 (expresion -> match_exp .)
    LLV_D           reduce using rule 94 (expresion -> match_exp .)
    BARRA           reduce using rule 94 (expresion -> match_exp .)
    GUION_B         reduce using rule 94 (expresion -> match_exp .)
    INT             reduce using rule 94 (expresion -> match_exp .)
    FLOAT           reduce using rule 94 (expresion -> match_exp .)
    ABS             reduce using rule 94 (expresion -> match_exp .)
    SQRT            reduce using rule 94 (expresion -> match_exp .)
    ENTERO          reduce using rule 94 (expresion -> match_exp .)
    DECIMAL         reduce using rule 94 (expresion -> match_exp .)
    TRUE            reduce using rule 94 (expresion -> match_exp .)
    FALSE           reduce using rule 94 (expresion -> match_exp .)
    CHAR_S          reduce using rule 94 (expresion -> match_exp .)
    CADENA          reduce using rule 94 (expresion -> match_exp .)
    ID              reduce using rule 94 (expresion -> match_exp .)
    NOT             reduce using rule 94 (expresion -> match_exp .)
    PAR_I           reduce using rule 94 (expresion -> match_exp .)
    IF              reduce using rule 94 (expresion -> match_exp .)
    MATCH           reduce using rule 94 (expresion -> match_exp .)
    LOOP            reduce using rule 94 (expresion -> match_exp .)


state 49

    (95) expresion -> loop_exp .

    MAS             reduce using rule 95 (expresion -> loop_exp .)
    MENOS           reduce using rule 95 (expresion -> loop_exp .)
    MULTI           reduce using rule 95 (expresion -> loop_exp .)
    DIV             reduce using rule 95 (expresion -> loop_exp .)
    MODULO          reduce using rule 95 (expresion -> loop_exp .)
    PUNTO           reduce using rule 95 (expresion -> loop_exp .)
    AS              reduce using rule 95 (expresion -> loop_exp .)
    MAYOR           reduce using rule 95 (expresion -> loop_exp .)
    MENOR           reduce using rule 95 (expresion -> loop_exp .)
    MAYOR_I         reduce using rule 95 (expresion -> loop_exp .)
    MENOR_I         reduce using rule 95 (expresion -> loop_exp .)
    D_IGUAL         reduce using rule 95 (expresion -> loop_exp .)
    NO_IGUAL        reduce using rule 95 (expresion -> loop_exp .)
    OR              reduce using rule 95 (expresion -> loop_exp .)
    AND             reduce using rule 95 (expresion -> loop_exp .)
    LLV_I           reduce using rule 95 (expresion -> loop_exp .)
    PUNTOCOMA       reduce using rule 95 (expresion -> loop_exp .)
    PAR_D           reduce using rule 95 (expresion -> loop_exp .)
    COMA            reduce using rule 95 (expresion -> loop_exp .)
    IGUAL           reduce using rule 95 (expresion -> loop_exp .)
    LLV_D           reduce using rule 95 (expresion -> loop_exp .)
    BARRA           reduce using rule 95 (expresion -> loop_exp .)
    GUION_B         reduce using rule 95 (expresion -> loop_exp .)
    INT             reduce using rule 95 (expresion -> loop_exp .)
    FLOAT           reduce using rule 95 (expresion -> loop_exp .)
    ABS             reduce using rule 95 (expresion -> loop_exp .)
    SQRT            reduce using rule 95 (expresion -> loop_exp .)
    ENTERO          reduce using rule 95 (expresion -> loop_exp .)
    DECIMAL         reduce using rule 95 (expresion -> loop_exp .)
    TRUE            reduce using rule 95 (expresion -> loop_exp .)
    FALSE           reduce using rule 95 (expresion -> loop_exp .)
    CHAR_S          reduce using rule 95 (expresion -> loop_exp .)
    CADENA          reduce using rule 95 (expresion -> loop_exp .)
    ID              reduce using rule 95 (expresion -> loop_exp .)
    NOT             reduce using rule 95 (expresion -> loop_exp .)
    PAR_I           reduce using rule 95 (expresion -> loop_exp .)
    IF              reduce using rule 95 (expresion -> loop_exp .)
    MATCH           reduce using rule 95 (expresion -> loop_exp .)
    LOOP            reduce using rule 95 (expresion -> loop_exp .)


state 50

    (40) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 89
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 51

    (52) loop_exp -> LOOP . statement
    (26) statement -> . LLV_I instrucciones LLV_D

    LLV_I           shift and go to state 55

    statement                      shift and go to state 90

state 52

    (30) match -> MATCH expresion . LLV_I case_list LLV_D
    (31) match -> MATCH expresion . LLV_I case_list default LLV_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 91
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 53

    (47) while -> WHILE expresion . statement
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion
    (26) statement -> . LLV_I instrucciones LLV_D

    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81
    LLV_I           shift and go to state 55

    statement                      shift and go to state 92

state 54

    (51) loop -> LOOP statement .

    EJECUTAR        reduce using rule 51 (loop -> LOOP statement .)
    LET             reduce using rule 51 (loop -> LOOP statement .)
    ID              reduce using rule 51 (loop -> LOOP statement .)
    IF              reduce using rule 51 (loop -> LOOP statement .)
    MATCH           reduce using rule 51 (loop -> LOOP statement .)
    WHILE           reduce using rule 51 (loop -> LOOP statement .)
    LOOP            reduce using rule 51 (loop -> LOOP statement .)
    BREAK           reduce using rule 51 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 51 (loop -> LOOP statement .)
    PRINT           reduce using rule 51 (loop -> LOOP statement .)
    $end            reduce using rule 51 (loop -> LOOP statement .)
    LLV_D           reduce using rule 51 (loop -> LOOP statement .)


state 55

    (26) statement -> LLV_I . instrucciones LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . print PUNTOCOMA
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D
    (47) while -> . WHILE expresion statement
    (51) loop -> . LOOP statement
    (48) break -> . BREAK PUNTOCOMA
    (49) break -> . BREAK expresion PUNTOCOMA
    (50) continue -> . CONTINUE PUNTOCOMA
    (18) print -> . PRINT NOT PAR_I expresion PAR_D
    (19) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D

    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    WHILE           shift and go to state 18
    LOOP            shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    PRINT           shift and go to state 22

    instrucciones                  shift and go to state 93
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    print                          shift and go to state 12

state 56

    (48) break -> BREAK PUNTOCOMA .

    EJECUTAR        reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    LET             reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    ID              reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    IF              reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    MATCH           reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    WHILE           reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    LOOP            reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    BREAK           reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    CONTINUE        reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    PRINT           reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    $end            reduce using rule 48 (break -> BREAK PUNTOCOMA .)
    LLV_D           reduce using rule 48 (break -> BREAK PUNTOCOMA .)


state 57

    (49) break -> BREAK expresion . PUNTOCOMA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       shift and go to state 94
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 58

    (50) continue -> CONTINUE PUNTOCOMA .

    EJECUTAR        reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    LET             reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    ID              reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    IF              reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    MATCH           reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    WHILE           reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    LOOP            reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    BREAK           reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    CONTINUE        reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    PRINT           reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    $end            reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)
    LLV_D           reduce using rule 50 (continue -> CONTINUE PUNTOCOMA .)


state 59

    (18) print -> PRINT NOT . PAR_I expresion PAR_D
    (19) print -> PRINT NOT . PAR_I CADENA COMA exp_list PAR_D

    PAR_I           shift and go to state 95


state 60

    (17) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 96
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 61

    (53) asignacion -> LET ID IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 97
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 62

    (55) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . BOOL
    (61) tipo -> . AMP STR
    (62) tipo -> . STRING
    (63) tipo -> . CHAR

    INT             shift and go to state 99
    FLOAT           shift and go to state 100
    BOOL            shift and go to state 101
    AMP             shift and go to state 102
    STRING          shift and go to state 103
    CHAR            shift and go to state 104

    tipo                           shift and go to state 98

state 63

    (54) asignacion -> LET MUT ID . IGUAL expresion
    (56) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 105
    D_PUNTO         shift and go to state 106


state 64

    (57) asignacion -> ID IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 65

    (27) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 107
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 66

    (22) if -> IF expresion statement .
    (23) if -> IF expresion statement . else
    (24) else -> . ELSE statement
    (25) else -> . ELSE if

    EJECUTAR        reduce using rule 22 (if -> IF expresion statement .)
    LET             reduce using rule 22 (if -> IF expresion statement .)
    ID              reduce using rule 22 (if -> IF expresion statement .)
    IF              reduce using rule 22 (if -> IF expresion statement .)
    MATCH           reduce using rule 22 (if -> IF expresion statement .)
    WHILE           reduce using rule 22 (if -> IF expresion statement .)
    LOOP            reduce using rule 22 (if -> IF expresion statement .)
    BREAK           reduce using rule 22 (if -> IF expresion statement .)
    CONTINUE        reduce using rule 22 (if -> IF expresion statement .)
    PRINT           reduce using rule 22 (if -> IF expresion statement .)
    $end            reduce using rule 22 (if -> IF expresion statement .)
    LLV_D           reduce using rule 22 (if -> IF expresion statement .)
    COMA            reduce using rule 22 (if -> IF expresion statement .)
    ELSE            shift and go to state 109

    else                           shift and go to state 108

state 67

    (64) expresion -> expresion MAS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 110
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 68

    (65) expresion -> expresion MENOS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 111
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 69

    (66) expresion -> expresion MULTI . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 112
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 70

    (67) expresion -> expresion DIV . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 113
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 71

    (68) expresion -> expresion MODULO . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 114
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 72

    (80) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D

    TO_STRING       shift and go to state 115


state 73

    (81) expresion -> expresion AS . tipo
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . BOOL
    (61) tipo -> . AMP STR
    (62) tipo -> . STRING
    (63) tipo -> . CHAR

    INT             shift and go to state 99
    FLOAT           shift and go to state 100
    BOOL            shift and go to state 101
    AMP             shift and go to state 102
    STRING          shift and go to state 103
    CHAR            shift and go to state 104

    tipo                           shift and go to state 116

state 74

    (83) expresion -> expresion MAYOR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 117
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 75

    (84) expresion -> expresion MENOR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 118
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 76

    (85) expresion -> expresion MAYOR_I . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 119
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 77

    (86) expresion -> expresion MENOR_I . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 120
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 78

    (87) expresion -> expresion D_IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 121
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 79

    (88) expresion -> expresion NO_IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 122
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 80

    (89) expresion -> expresion OR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 123
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 81

    (90) expresion -> expresion AND . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 124
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 82

    (69) expresion -> MENOS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 69 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 69 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 69 (expresion -> MENOS expresion .)
    DIV             reduce using rule 69 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 69 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 69 (expresion -> MENOS expresion .)
    AS              reduce using rule 69 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 69 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 69 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 69 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 69 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 69 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 69 (expresion -> MENOS expresion .)
    OR              reduce using rule 69 (expresion -> MENOS expresion .)
    AND             reduce using rule 69 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 69 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 69 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 69 (expresion -> MENOS expresion .)
    COMA            reduce using rule 69 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 69 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 69 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 69 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 69 (expresion -> MENOS expresion .)
    INT             reduce using rule 69 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 69 (expresion -> MENOS expresion .)
    ABS             reduce using rule 69 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 69 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 69 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 69 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 69 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 69 (expresion -> MENOS expresion .)
    CHAR_S          reduce using rule 69 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 69 (expresion -> MENOS expresion .)
    ID              reduce using rule 69 (expresion -> MENOS expresion .)
    NOT             reduce using rule 69 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 69 (expresion -> MENOS expresion .)
    IF              reduce using rule 69 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 69 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 69 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MULTI           [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! MODULO          [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 83

    (70) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 125


state 84

    (92) expresion -> PAR_I expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 126
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 85

    (71) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 127


state 86

    (72) expresion -> ABS PAR_I . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 128
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 87

    (73) expresion -> SQRT PAR_I . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 129
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 88

    (91) expresion -> NOT expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 91 (expresion -> NOT expresion .)
    D_IGUAL         reduce using rule 91 (expresion -> NOT expresion .)
    OR              reduce using rule 91 (expresion -> NOT expresion .)
    AND             reduce using rule 91 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 91 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 91 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 91 (expresion -> NOT expresion .)
    COMA            reduce using rule 91 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 91 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 91 (expresion -> NOT expresion .)
    BARRA           reduce using rule 91 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 91 (expresion -> NOT expresion .)
    INT             reduce using rule 91 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 91 (expresion -> NOT expresion .)
    ABS             reduce using rule 91 (expresion -> NOT expresion .)
    SQRT            reduce using rule 91 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 91 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 91 (expresion -> NOT expresion .)
    TRUE            reduce using rule 91 (expresion -> NOT expresion .)
    FALSE           reduce using rule 91 (expresion -> NOT expresion .)
    CHAR_S          reduce using rule 91 (expresion -> NOT expresion .)
    CADENA          reduce using rule 91 (expresion -> NOT expresion .)
    ID              reduce using rule 91 (expresion -> NOT expresion .)
    NOT             reduce using rule 91 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 91 (expresion -> NOT expresion .)
    IF              reduce using rule 91 (expresion -> NOT expresion .)
    MATCH           reduce using rule 91 (expresion -> NOT expresion .)
    LOOP            reduce using rule 91 (expresion -> NOT expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    NO_IGUAL        shift and go to state 79

  ! MAS             [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! PUNTO           [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 91 (expresion -> NOT expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 89

    (40) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (41) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 130
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 90

    (52) loop_exp -> LOOP statement .

    MAS             reduce using rule 52 (loop_exp -> LOOP statement .)
    MENOS           reduce using rule 52 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 52 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 52 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 52 (loop_exp -> LOOP statement .)
    PUNTO           reduce using rule 52 (loop_exp -> LOOP statement .)
    AS              reduce using rule 52 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 52 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 52 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 52 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 52 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 52 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 52 (loop_exp -> LOOP statement .)
    OR              reduce using rule 52 (loop_exp -> LOOP statement .)
    AND             reduce using rule 52 (loop_exp -> LOOP statement .)
    LLV_I           reduce using rule 52 (loop_exp -> LOOP statement .)
    PUNTOCOMA       reduce using rule 52 (loop_exp -> LOOP statement .)
    PAR_D           reduce using rule 52 (loop_exp -> LOOP statement .)
    COMA            reduce using rule 52 (loop_exp -> LOOP statement .)
    IGUAL           reduce using rule 52 (loop_exp -> LOOP statement .)
    LLV_D           reduce using rule 52 (loop_exp -> LOOP statement .)
    BARRA           reduce using rule 52 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 52 (loop_exp -> LOOP statement .)
    INT             reduce using rule 52 (loop_exp -> LOOP statement .)
    FLOAT           reduce using rule 52 (loop_exp -> LOOP statement .)
    ABS             reduce using rule 52 (loop_exp -> LOOP statement .)
    SQRT            reduce using rule 52 (loop_exp -> LOOP statement .)
    ENTERO          reduce using rule 52 (loop_exp -> LOOP statement .)
    DECIMAL         reduce using rule 52 (loop_exp -> LOOP statement .)
    TRUE            reduce using rule 52 (loop_exp -> LOOP statement .)
    FALSE           reduce using rule 52 (loop_exp -> LOOP statement .)
    CHAR_S          reduce using rule 52 (loop_exp -> LOOP statement .)
    CADENA          reduce using rule 52 (loop_exp -> LOOP statement .)
    ID              reduce using rule 52 (loop_exp -> LOOP statement .)
    NOT             reduce using rule 52 (loop_exp -> LOOP statement .)
    PAR_I           reduce using rule 52 (loop_exp -> LOOP statement .)
    IF              reduce using rule 52 (loop_exp -> LOOP statement .)
    MATCH           reduce using rule 52 (loop_exp -> LOOP statement .)
    LOOP            reduce using rule 52 (loop_exp -> LOOP statement .)


state 91

    (30) match -> MATCH expresion LLV_I . case_list LLV_D
    (31) match -> MATCH expresion LLV_I . case_list default LLV_D
    (32) case_list -> . case_list case
    (33) case_list -> . case
    (34) case -> . exp_list IGUAL MAYOR statement
    (35) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (20) exp_list -> . exp_list COMA expresion
    (21) exp_list -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 131
    case_list                      shift and go to state 132
    case                           shift and go to state 133
    exp_list                       shift and go to state 134
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 92

    (47) while -> WHILE expresion statement .

    EJECUTAR        reduce using rule 47 (while -> WHILE expresion statement .)
    LET             reduce using rule 47 (while -> WHILE expresion statement .)
    ID              reduce using rule 47 (while -> WHILE expresion statement .)
    IF              reduce using rule 47 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 47 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 47 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 47 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 47 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 47 (while -> WHILE expresion statement .)
    PRINT           reduce using rule 47 (while -> WHILE expresion statement .)
    $end            reduce using rule 47 (while -> WHILE expresion statement .)
    LLV_D           reduce using rule 47 (while -> WHILE expresion statement .)


state 93

    (26) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . print PUNTOCOMA
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D
    (47) while -> . WHILE expresion statement
    (51) loop -> . LOOP statement
    (48) break -> . BREAK PUNTOCOMA
    (49) break -> . BREAK expresion PUNTOCOMA
    (50) continue -> . CONTINUE PUNTOCOMA
    (18) print -> . PRINT NOT PAR_I expresion PAR_D
    (19) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D

    LLV_D           shift and go to state 135
    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    WHILE           shift and go to state 18
    LOOP            shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    PRINT           shift and go to state 22

    instruccion                    shift and go to state 23
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    print                          shift and go to state 12

state 94

    (49) break -> BREAK expresion PUNTOCOMA .

    EJECUTAR        reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    LET             reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    ID              reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    IF              reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    MATCH           reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    WHILE           reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    LOOP            reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    BREAK           reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    PRINT           reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    $end            reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)
    LLV_D           reduce using rule 49 (break -> BREAK expresion PUNTOCOMA .)


state 95

    (18) print -> PRINT NOT PAR_I . expresion PAR_D
    (19) print -> PRINT NOT PAR_I . CADENA COMA exp_list PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    CADENA          shift and go to state 137
    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 136
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 96

    (17) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 17 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)
    COMA            reduce using rule 17 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 97

    (53) asignacion -> LET ID IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 53 (asignacion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 53 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 98

    (55) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 138


state 99

    (58) tipo -> INT .

    IGUAL           reduce using rule 58 (tipo -> INT .)
    MAS             reduce using rule 58 (tipo -> INT .)
    MENOS           reduce using rule 58 (tipo -> INT .)
    MULTI           reduce using rule 58 (tipo -> INT .)
    DIV             reduce using rule 58 (tipo -> INT .)
    MODULO          reduce using rule 58 (tipo -> INT .)
    PUNTO           reduce using rule 58 (tipo -> INT .)
    AS              reduce using rule 58 (tipo -> INT .)
    MAYOR           reduce using rule 58 (tipo -> INT .)
    MENOR           reduce using rule 58 (tipo -> INT .)
    MAYOR_I         reduce using rule 58 (tipo -> INT .)
    MENOR_I         reduce using rule 58 (tipo -> INT .)
    D_IGUAL         reduce using rule 58 (tipo -> INT .)
    NO_IGUAL        reduce using rule 58 (tipo -> INT .)
    OR              reduce using rule 58 (tipo -> INT .)
    AND             reduce using rule 58 (tipo -> INT .)
    LLV_I           reduce using rule 58 (tipo -> INT .)
    PUNTOCOMA       reduce using rule 58 (tipo -> INT .)
    PAR_D           reduce using rule 58 (tipo -> INT .)
    COMA            reduce using rule 58 (tipo -> INT .)
    LLV_D           reduce using rule 58 (tipo -> INT .)
    BARRA           reduce using rule 58 (tipo -> INT .)
    GUION_B         reduce using rule 58 (tipo -> INT .)
    INT             reduce using rule 58 (tipo -> INT .)
    FLOAT           reduce using rule 58 (tipo -> INT .)
    ABS             reduce using rule 58 (tipo -> INT .)
    SQRT            reduce using rule 58 (tipo -> INT .)
    ENTERO          reduce using rule 58 (tipo -> INT .)
    DECIMAL         reduce using rule 58 (tipo -> INT .)
    TRUE            reduce using rule 58 (tipo -> INT .)
    FALSE           reduce using rule 58 (tipo -> INT .)
    CHAR_S          reduce using rule 58 (tipo -> INT .)
    CADENA          reduce using rule 58 (tipo -> INT .)
    ID              reduce using rule 58 (tipo -> INT .)
    NOT             reduce using rule 58 (tipo -> INT .)
    PAR_I           reduce using rule 58 (tipo -> INT .)
    IF              reduce using rule 58 (tipo -> INT .)
    MATCH           reduce using rule 58 (tipo -> INT .)
    LOOP            reduce using rule 58 (tipo -> INT .)


state 100

    (59) tipo -> FLOAT .

    IGUAL           reduce using rule 59 (tipo -> FLOAT .)
    MAS             reduce using rule 59 (tipo -> FLOAT .)
    MENOS           reduce using rule 59 (tipo -> FLOAT .)
    MULTI           reduce using rule 59 (tipo -> FLOAT .)
    DIV             reduce using rule 59 (tipo -> FLOAT .)
    MODULO          reduce using rule 59 (tipo -> FLOAT .)
    PUNTO           reduce using rule 59 (tipo -> FLOAT .)
    AS              reduce using rule 59 (tipo -> FLOAT .)
    MAYOR           reduce using rule 59 (tipo -> FLOAT .)
    MENOR           reduce using rule 59 (tipo -> FLOAT .)
    MAYOR_I         reduce using rule 59 (tipo -> FLOAT .)
    MENOR_I         reduce using rule 59 (tipo -> FLOAT .)
    D_IGUAL         reduce using rule 59 (tipo -> FLOAT .)
    NO_IGUAL        reduce using rule 59 (tipo -> FLOAT .)
    OR              reduce using rule 59 (tipo -> FLOAT .)
    AND             reduce using rule 59 (tipo -> FLOAT .)
    LLV_I           reduce using rule 59 (tipo -> FLOAT .)
    PUNTOCOMA       reduce using rule 59 (tipo -> FLOAT .)
    PAR_D           reduce using rule 59 (tipo -> FLOAT .)
    COMA            reduce using rule 59 (tipo -> FLOAT .)
    LLV_D           reduce using rule 59 (tipo -> FLOAT .)
    BARRA           reduce using rule 59 (tipo -> FLOAT .)
    GUION_B         reduce using rule 59 (tipo -> FLOAT .)
    INT             reduce using rule 59 (tipo -> FLOAT .)
    FLOAT           reduce using rule 59 (tipo -> FLOAT .)
    ABS             reduce using rule 59 (tipo -> FLOAT .)
    SQRT            reduce using rule 59 (tipo -> FLOAT .)
    ENTERO          reduce using rule 59 (tipo -> FLOAT .)
    DECIMAL         reduce using rule 59 (tipo -> FLOAT .)
    TRUE            reduce using rule 59 (tipo -> FLOAT .)
    FALSE           reduce using rule 59 (tipo -> FLOAT .)
    CHAR_S          reduce using rule 59 (tipo -> FLOAT .)
    CADENA          reduce using rule 59 (tipo -> FLOAT .)
    ID              reduce using rule 59 (tipo -> FLOAT .)
    NOT             reduce using rule 59 (tipo -> FLOAT .)
    PAR_I           reduce using rule 59 (tipo -> FLOAT .)
    IF              reduce using rule 59 (tipo -> FLOAT .)
    MATCH           reduce using rule 59 (tipo -> FLOAT .)
    LOOP            reduce using rule 59 (tipo -> FLOAT .)


state 101

    (60) tipo -> BOOL .

    IGUAL           reduce using rule 60 (tipo -> BOOL .)
    MAS             reduce using rule 60 (tipo -> BOOL .)
    MENOS           reduce using rule 60 (tipo -> BOOL .)
    MULTI           reduce using rule 60 (tipo -> BOOL .)
    DIV             reduce using rule 60 (tipo -> BOOL .)
    MODULO          reduce using rule 60 (tipo -> BOOL .)
    PUNTO           reduce using rule 60 (tipo -> BOOL .)
    AS              reduce using rule 60 (tipo -> BOOL .)
    MAYOR           reduce using rule 60 (tipo -> BOOL .)
    MENOR           reduce using rule 60 (tipo -> BOOL .)
    MAYOR_I         reduce using rule 60 (tipo -> BOOL .)
    MENOR_I         reduce using rule 60 (tipo -> BOOL .)
    D_IGUAL         reduce using rule 60 (tipo -> BOOL .)
    NO_IGUAL        reduce using rule 60 (tipo -> BOOL .)
    OR              reduce using rule 60 (tipo -> BOOL .)
    AND             reduce using rule 60 (tipo -> BOOL .)
    LLV_I           reduce using rule 60 (tipo -> BOOL .)
    PUNTOCOMA       reduce using rule 60 (tipo -> BOOL .)
    PAR_D           reduce using rule 60 (tipo -> BOOL .)
    COMA            reduce using rule 60 (tipo -> BOOL .)
    LLV_D           reduce using rule 60 (tipo -> BOOL .)
    BARRA           reduce using rule 60 (tipo -> BOOL .)
    GUION_B         reduce using rule 60 (tipo -> BOOL .)
    INT             reduce using rule 60 (tipo -> BOOL .)
    FLOAT           reduce using rule 60 (tipo -> BOOL .)
    ABS             reduce using rule 60 (tipo -> BOOL .)
    SQRT            reduce using rule 60 (tipo -> BOOL .)
    ENTERO          reduce using rule 60 (tipo -> BOOL .)
    DECIMAL         reduce using rule 60 (tipo -> BOOL .)
    TRUE            reduce using rule 60 (tipo -> BOOL .)
    FALSE           reduce using rule 60 (tipo -> BOOL .)
    CHAR_S          reduce using rule 60 (tipo -> BOOL .)
    CADENA          reduce using rule 60 (tipo -> BOOL .)
    ID              reduce using rule 60 (tipo -> BOOL .)
    NOT             reduce using rule 60 (tipo -> BOOL .)
    PAR_I           reduce using rule 60 (tipo -> BOOL .)
    IF              reduce using rule 60 (tipo -> BOOL .)
    MATCH           reduce using rule 60 (tipo -> BOOL .)
    LOOP            reduce using rule 60 (tipo -> BOOL .)


state 102

    (61) tipo -> AMP . STR

    STR             shift and go to state 139


state 103

    (62) tipo -> STRING .

    IGUAL           reduce using rule 62 (tipo -> STRING .)
    MAS             reduce using rule 62 (tipo -> STRING .)
    MENOS           reduce using rule 62 (tipo -> STRING .)
    MULTI           reduce using rule 62 (tipo -> STRING .)
    DIV             reduce using rule 62 (tipo -> STRING .)
    MODULO          reduce using rule 62 (tipo -> STRING .)
    PUNTO           reduce using rule 62 (tipo -> STRING .)
    AS              reduce using rule 62 (tipo -> STRING .)
    MAYOR           reduce using rule 62 (tipo -> STRING .)
    MENOR           reduce using rule 62 (tipo -> STRING .)
    MAYOR_I         reduce using rule 62 (tipo -> STRING .)
    MENOR_I         reduce using rule 62 (tipo -> STRING .)
    D_IGUAL         reduce using rule 62 (tipo -> STRING .)
    NO_IGUAL        reduce using rule 62 (tipo -> STRING .)
    OR              reduce using rule 62 (tipo -> STRING .)
    AND             reduce using rule 62 (tipo -> STRING .)
    LLV_I           reduce using rule 62 (tipo -> STRING .)
    PUNTOCOMA       reduce using rule 62 (tipo -> STRING .)
    PAR_D           reduce using rule 62 (tipo -> STRING .)
    COMA            reduce using rule 62 (tipo -> STRING .)
    LLV_D           reduce using rule 62 (tipo -> STRING .)
    BARRA           reduce using rule 62 (tipo -> STRING .)
    GUION_B         reduce using rule 62 (tipo -> STRING .)
    INT             reduce using rule 62 (tipo -> STRING .)
    FLOAT           reduce using rule 62 (tipo -> STRING .)
    ABS             reduce using rule 62 (tipo -> STRING .)
    SQRT            reduce using rule 62 (tipo -> STRING .)
    ENTERO          reduce using rule 62 (tipo -> STRING .)
    DECIMAL         reduce using rule 62 (tipo -> STRING .)
    TRUE            reduce using rule 62 (tipo -> STRING .)
    FALSE           reduce using rule 62 (tipo -> STRING .)
    CHAR_S          reduce using rule 62 (tipo -> STRING .)
    CADENA          reduce using rule 62 (tipo -> STRING .)
    ID              reduce using rule 62 (tipo -> STRING .)
    NOT             reduce using rule 62 (tipo -> STRING .)
    PAR_I           reduce using rule 62 (tipo -> STRING .)
    IF              reduce using rule 62 (tipo -> STRING .)
    MATCH           reduce using rule 62 (tipo -> STRING .)
    LOOP            reduce using rule 62 (tipo -> STRING .)


state 104

    (63) tipo -> CHAR .

    IGUAL           reduce using rule 63 (tipo -> CHAR .)
    MAS             reduce using rule 63 (tipo -> CHAR .)
    MENOS           reduce using rule 63 (tipo -> CHAR .)
    MULTI           reduce using rule 63 (tipo -> CHAR .)
    DIV             reduce using rule 63 (tipo -> CHAR .)
    MODULO          reduce using rule 63 (tipo -> CHAR .)
    PUNTO           reduce using rule 63 (tipo -> CHAR .)
    AS              reduce using rule 63 (tipo -> CHAR .)
    MAYOR           reduce using rule 63 (tipo -> CHAR .)
    MENOR           reduce using rule 63 (tipo -> CHAR .)
    MAYOR_I         reduce using rule 63 (tipo -> CHAR .)
    MENOR_I         reduce using rule 63 (tipo -> CHAR .)
    D_IGUAL         reduce using rule 63 (tipo -> CHAR .)
    NO_IGUAL        reduce using rule 63 (tipo -> CHAR .)
    OR              reduce using rule 63 (tipo -> CHAR .)
    AND             reduce using rule 63 (tipo -> CHAR .)
    LLV_I           reduce using rule 63 (tipo -> CHAR .)
    PUNTOCOMA       reduce using rule 63 (tipo -> CHAR .)
    PAR_D           reduce using rule 63 (tipo -> CHAR .)
    COMA            reduce using rule 63 (tipo -> CHAR .)
    LLV_D           reduce using rule 63 (tipo -> CHAR .)
    BARRA           reduce using rule 63 (tipo -> CHAR .)
    GUION_B         reduce using rule 63 (tipo -> CHAR .)
    INT             reduce using rule 63 (tipo -> CHAR .)
    FLOAT           reduce using rule 63 (tipo -> CHAR .)
    ABS             reduce using rule 63 (tipo -> CHAR .)
    SQRT            reduce using rule 63 (tipo -> CHAR .)
    ENTERO          reduce using rule 63 (tipo -> CHAR .)
    DECIMAL         reduce using rule 63 (tipo -> CHAR .)
    TRUE            reduce using rule 63 (tipo -> CHAR .)
    FALSE           reduce using rule 63 (tipo -> CHAR .)
    CHAR_S          reduce using rule 63 (tipo -> CHAR .)
    CADENA          reduce using rule 63 (tipo -> CHAR .)
    ID              reduce using rule 63 (tipo -> CHAR .)
    NOT             reduce using rule 63 (tipo -> CHAR .)
    PAR_I           reduce using rule 63 (tipo -> CHAR .)
    IF              reduce using rule 63 (tipo -> CHAR .)
    MATCH           reduce using rule 63 (tipo -> CHAR .)
    LOOP            reduce using rule 63 (tipo -> CHAR .)


state 105

    (54) asignacion -> LET MUT ID IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 140
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 106

    (56) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . BOOL
    (61) tipo -> . AMP STR
    (62) tipo -> . STRING
    (63) tipo -> . CHAR

    INT             shift and go to state 99
    FLOAT           shift and go to state 100
    BOOL            shift and go to state 101
    AMP             shift and go to state 102
    STRING          shift and go to state 103
    CHAR            shift and go to state 104

    tipo                           shift and go to state 141

state 107

    (27) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 142
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 108

    (23) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 23 (if -> IF expresion statement else .)
    LET             reduce using rule 23 (if -> IF expresion statement else .)
    ID              reduce using rule 23 (if -> IF expresion statement else .)
    IF              reduce using rule 23 (if -> IF expresion statement else .)
    MATCH           reduce using rule 23 (if -> IF expresion statement else .)
    WHILE           reduce using rule 23 (if -> IF expresion statement else .)
    LOOP            reduce using rule 23 (if -> IF expresion statement else .)
    BREAK           reduce using rule 23 (if -> IF expresion statement else .)
    CONTINUE        reduce using rule 23 (if -> IF expresion statement else .)
    PRINT           reduce using rule 23 (if -> IF expresion statement else .)
    $end            reduce using rule 23 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 23 (if -> IF expresion statement else .)
    COMA            reduce using rule 23 (if -> IF expresion statement else .)


state 109

    (24) else -> ELSE . statement
    (25) else -> ELSE . if
    (26) statement -> . LLV_I instrucciones LLV_D
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else

    LLV_I           shift and go to state 55
    IF              shift and go to state 16

    statement                      shift and go to state 143
    if                             shift and go to state 144

state 110

    (64) expresion -> expresion MAS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 64 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 64 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 64 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 64 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 64 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 64 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 64 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 64 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 64 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 64 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 64 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 64 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 64 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 64 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 64 (expresion -> expresion MAS expresion .)
    ABS             reduce using rule 64 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 64 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 64 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 64 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 64 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 64 (expresion -> expresion MAS expresion .)
    CHAR_S          reduce using rule 64 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 64 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 64 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 64 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 64 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 64 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 64 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 64 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MULTI           [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 111

    (65) expresion -> expresion MENOS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 65 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    ABS             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    CHAR_S          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MULTI           [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 112

    (66) expresion -> expresion MULTI expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 66 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 66 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 66 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 66 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 66 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 66 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 66 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    ABS             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    SQRT            reduce using rule 66 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 66 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 66 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 66 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    CHAR_S          reduce using rule 66 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 66 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 66 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 66 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 66 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 66 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MODULO          [ reduce using rule 66 (expresion -> expresion MULTI expresion .) ]
  ! PUNTO           [ reduce using rule 66 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MULTI           [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 113

    (67) expresion -> expresion DIV expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 67 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 67 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 67 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 67 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 67 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 67 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 67 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 67 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 67 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 67 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 67 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 67 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 67 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 67 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 67 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 67 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 67 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 67 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 67 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 67 (expresion -> expresion DIV expresion .)
    ABS             reduce using rule 67 (expresion -> expresion DIV expresion .)
    SQRT            reduce using rule 67 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 67 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 67 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 67 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 67 (expresion -> expresion DIV expresion .)
    CHAR_S          reduce using rule 67 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 67 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 67 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 67 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 67 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 67 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 67 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 67 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MODULO          [ reduce using rule 67 (expresion -> expresion DIV expresion .) ]
  ! PUNTO           [ reduce using rule 67 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MULTI           [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 114

    (68) expresion -> expresion MODULO expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    MAS             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 68 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 68 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 68 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 68 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 68 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 68 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 68 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 68 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    ABS             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    SQRT            reduce using rule 68 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 68 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 68 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 68 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    CHAR_S          reduce using rule 68 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 68 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 68 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 68 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 68 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 68 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 68 (expresion -> expresion MODULO expresion .)
    PUNTO           shift and go to state 72

  ! PUNTO           [ reduce using rule 68 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MULTI           [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! MODULO          [ shift and go to state 71 ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 115

    (80) expresion -> expresion PUNTO TO_STRING . PAR_I PAR_D

    PAR_I           shift and go to state 145


state 116

    (81) expresion -> expresion AS tipo .

    MAS             reduce using rule 81 (expresion -> expresion AS tipo .)
    MENOS           reduce using rule 81 (expresion -> expresion AS tipo .)
    MULTI           reduce using rule 81 (expresion -> expresion AS tipo .)
    DIV             reduce using rule 81 (expresion -> expresion AS tipo .)
    MODULO          reduce using rule 81 (expresion -> expresion AS tipo .)
    PUNTO           reduce using rule 81 (expresion -> expresion AS tipo .)
    AS              reduce using rule 81 (expresion -> expresion AS tipo .)
    MAYOR           reduce using rule 81 (expresion -> expresion AS tipo .)
    MENOR           reduce using rule 81 (expresion -> expresion AS tipo .)
    MAYOR_I         reduce using rule 81 (expresion -> expresion AS tipo .)
    MENOR_I         reduce using rule 81 (expresion -> expresion AS tipo .)
    D_IGUAL         reduce using rule 81 (expresion -> expresion AS tipo .)
    NO_IGUAL        reduce using rule 81 (expresion -> expresion AS tipo .)
    OR              reduce using rule 81 (expresion -> expresion AS tipo .)
    AND             reduce using rule 81 (expresion -> expresion AS tipo .)
    LLV_I           reduce using rule 81 (expresion -> expresion AS tipo .)
    PUNTOCOMA       reduce using rule 81 (expresion -> expresion AS tipo .)
    PAR_D           reduce using rule 81 (expresion -> expresion AS tipo .)
    COMA            reduce using rule 81 (expresion -> expresion AS tipo .)
    IGUAL           reduce using rule 81 (expresion -> expresion AS tipo .)
    LLV_D           reduce using rule 81 (expresion -> expresion AS tipo .)
    BARRA           reduce using rule 81 (expresion -> expresion AS tipo .)
    GUION_B         reduce using rule 81 (expresion -> expresion AS tipo .)
    INT             reduce using rule 81 (expresion -> expresion AS tipo .)
    FLOAT           reduce using rule 81 (expresion -> expresion AS tipo .)
    ABS             reduce using rule 81 (expresion -> expresion AS tipo .)
    SQRT            reduce using rule 81 (expresion -> expresion AS tipo .)
    ENTERO          reduce using rule 81 (expresion -> expresion AS tipo .)
    DECIMAL         reduce using rule 81 (expresion -> expresion AS tipo .)
    TRUE            reduce using rule 81 (expresion -> expresion AS tipo .)
    FALSE           reduce using rule 81 (expresion -> expresion AS tipo .)
    CHAR_S          reduce using rule 81 (expresion -> expresion AS tipo .)
    CADENA          reduce using rule 81 (expresion -> expresion AS tipo .)
    ID              reduce using rule 81 (expresion -> expresion AS tipo .)
    NOT             reduce using rule 81 (expresion -> expresion AS tipo .)
    PAR_I           reduce using rule 81 (expresion -> expresion AS tipo .)
    IF              reduce using rule 81 (expresion -> expresion AS tipo .)
    MATCH           reduce using rule 81 (expresion -> expresion AS tipo .)
    LOOP            reduce using rule 81 (expresion -> expresion AS tipo .)


state 117

    (83) expresion -> expresion MAYOR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    ABS             reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    SQRT            reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    CHAR_S          reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 83 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MAS             [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 83 (expresion -> expresion MAYOR expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 118

    (84) expresion -> expresion MENOR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 84 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 84 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 84 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 84 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 84 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 84 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 84 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 84 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    ABS             reduce using rule 84 (expresion -> expresion MENOR expresion .)
    SQRT            reduce using rule 84 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 84 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 84 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 84 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    CHAR_S          reduce using rule 84 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 84 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 84 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 84 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 84 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 84 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MAS             [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 84 (expresion -> expresion MENOR expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 119

    (85) expresion -> expresion MAYOR_I expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MAYOR           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    ABS             reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    SQRT            reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    CHAR_S          reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    CADENA          reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    LOOP            reduce using rule 85 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MAS             [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 85 (expresion -> expresion MAYOR_I expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 120

    (86) expresion -> expresion MENOR_I expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MAYOR           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    ABS             reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    SQRT            reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    CHAR_S          reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    CADENA          reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    LOOP            reduce using rule 86 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MAS             [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 86 (expresion -> expresion MENOR_I expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 121

    (87) expresion -> expresion D_IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    ABS             reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    SQRT            reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    CHAR_S          reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    CADENA          reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    LOOP            reduce using rule 87 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81

  ! MAS             [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! AS              [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 87 (expresion -> expresion D_IGUAL expresion .) ]


state 122

    (88) expresion -> expresion NO_IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    ABS             reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    SQRT            reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    CHAR_S          reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72

  ! MAS             [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 88 (expresion -> expresion NO_IGUAL expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! MAYOR           [ shift and go to state 74 ]
  ! MENOR           [ shift and go to state 75 ]
  ! MAYOR_I         [ shift and go to state 76 ]
  ! MENOR_I         [ shift and go to state 77 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! NO_IGUAL        [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 123

    (89) expresion -> expresion OR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 89 (expresion -> expresion OR expresion .)
    D_IGUAL         reduce using rule 89 (expresion -> expresion OR expresion .)
    OR              reduce using rule 89 (expresion -> expresion OR expresion .)
    AND             reduce using rule 89 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 89 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 89 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 89 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 89 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 89 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 89 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 89 (expresion -> expresion OR expresion .)
    INT             reduce using rule 89 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 89 (expresion -> expresion OR expresion .)
    ABS             reduce using rule 89 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 89 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 89 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 89 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 89 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 89 (expresion -> expresion OR expresion .)
    CHAR_S          reduce using rule 89 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 89 (expresion -> expresion OR expresion .)
    ID              reduce using rule 89 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 89 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 89 (expresion -> expresion OR expresion .)
    IF              reduce using rule 89 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 89 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 89 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    NO_IGUAL        shift and go to state 79

  ! MAS             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 124

    (90) expresion -> expresion AND expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    AS              reduce using rule 90 (expresion -> expresion AND expresion .)
    D_IGUAL         reduce using rule 90 (expresion -> expresion AND expresion .)
    OR              reduce using rule 90 (expresion -> expresion AND expresion .)
    AND             reduce using rule 90 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 90 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 90 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 90 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 90 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 90 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 90 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 90 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 90 (expresion -> expresion AND expresion .)
    INT             reduce using rule 90 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 90 (expresion -> expresion AND expresion .)
    ABS             reduce using rule 90 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 90 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 90 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 90 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 90 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 90 (expresion -> expresion AND expresion .)
    CHAR_S          reduce using rule 90 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 90 (expresion -> expresion AND expresion .)
    ID              reduce using rule 90 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 90 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 90 (expresion -> expresion AND expresion .)
    IF              reduce using rule 90 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 90 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 90 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    NO_IGUAL        shift and go to state 79

  ! MAS             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! AS              [ shift and go to state 73 ]
  ! D_IGUAL         [ shift and go to state 78 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 125

    (70) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 146


state 126

    (92) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    AS              reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    ABS             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    SQRT            reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    CADENA          reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)
    LOOP            reduce using rule 92 (expresion -> PAR_I expresion PAR_D .)


state 127

    (71) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 147


state 128

    (72) expresion -> ABS PAR_I expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 148
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 129

    (73) expresion -> SQRT PAR_I expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 149
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 130

    (40) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (41) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (42) case_list_exp -> . case_list_exp case_exp
    (43) case_list_exp -> . case_exp
    (44) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (45) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (38) exp_list_c -> . exp_list_c BARRA expresion
    (39) exp_list_c -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 150
    case_list_exp                  shift and go to state 151
    case_exp                       shift and go to state 152
    exp_list_c                     shift and go to state 153
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 131

    (21) exp_list -> expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 21 (exp_list -> expresion .)
    COMA            reduce using rule 21 (exp_list -> expresion .)
    PAR_D           reduce using rule 21 (exp_list -> expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 132

    (30) match -> MATCH expresion LLV_I case_list . LLV_D
    (31) match -> MATCH expresion LLV_I case_list . default LLV_D
    (32) case_list -> case_list . case
    (36) default -> . GUION_B IGUAL MAYOR statement
    (37) default -> . GUION_B IGUAL MAYOR instruccion
    (34) case -> . exp_list IGUAL MAYOR statement
    (35) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (20) exp_list -> . exp_list COMA expresion
    (21) exp_list -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    LLV_D           shift and go to state 154
    GUION_B         shift and go to state 157
    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 131
    default                        shift and go to state 155
    case                           shift and go to state 156
    exp_list                       shift and go to state 134
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 133

    (33) case_list -> case .

    LLV_D           reduce using rule 33 (case_list -> case .)
    GUION_B         reduce using rule 33 (case_list -> case .)
    MENOS           reduce using rule 33 (case_list -> case .)
    INT             reduce using rule 33 (case_list -> case .)
    FLOAT           reduce using rule 33 (case_list -> case .)
    ABS             reduce using rule 33 (case_list -> case .)
    SQRT            reduce using rule 33 (case_list -> case .)
    ENTERO          reduce using rule 33 (case_list -> case .)
    DECIMAL         reduce using rule 33 (case_list -> case .)
    TRUE            reduce using rule 33 (case_list -> case .)
    FALSE           reduce using rule 33 (case_list -> case .)
    CHAR_S          reduce using rule 33 (case_list -> case .)
    CADENA          reduce using rule 33 (case_list -> case .)
    ID              reduce using rule 33 (case_list -> case .)
    NOT             reduce using rule 33 (case_list -> case .)
    PAR_I           reduce using rule 33 (case_list -> case .)
    IF              reduce using rule 33 (case_list -> case .)
    MATCH           reduce using rule 33 (case_list -> case .)
    LOOP            reduce using rule 33 (case_list -> case .)


state 134

    (34) case -> exp_list . IGUAL MAYOR statement
    (35) case -> exp_list . IGUAL MAYOR instruccion_no_pt COMA
    (20) exp_list -> exp_list . COMA expresion

    IGUAL           shift and go to state 158
    COMA            shift and go to state 159


state 135

    (26) statement -> LLV_I instrucciones LLV_D .

    EJECUTAR        reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    WHILE           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    LOOP            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    BREAK           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    CONTINUE        reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    PRINT           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    ELSE            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MAS             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MULTI           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    DIV             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MODULO          reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    PUNTO           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    AS              reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MENOR           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR_I         reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    MENOR_I         reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    D_IGUAL         reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    NO_IGUAL        reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    OR              reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    AND             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    LLV_I           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    PUNTOCOMA       reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    PAR_D           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    IGUAL           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    BARRA           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    ABS             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    SQRT            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    CHAR_S          reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    CADENA          reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 26 (statement -> LLV_I instrucciones LLV_D .)


state 136

    (18) print -> PRINT NOT PAR_I expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 160
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 137

    (19) print -> PRINT NOT PAR_I CADENA . COMA exp_list PAR_D
    (79) expresion -> CADENA .

    COMA            shift and go to state 161
    PAR_D           reduce using rule 79 (expresion -> CADENA .)
    MAS             reduce using rule 79 (expresion -> CADENA .)
    MENOS           reduce using rule 79 (expresion -> CADENA .)
    MULTI           reduce using rule 79 (expresion -> CADENA .)
    DIV             reduce using rule 79 (expresion -> CADENA .)
    MODULO          reduce using rule 79 (expresion -> CADENA .)
    PUNTO           reduce using rule 79 (expresion -> CADENA .)
    AS              reduce using rule 79 (expresion -> CADENA .)
    MAYOR           reduce using rule 79 (expresion -> CADENA .)
    MENOR           reduce using rule 79 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 79 (expresion -> CADENA .)
    MENOR_I         reduce using rule 79 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 79 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 79 (expresion -> CADENA .)
    OR              reduce using rule 79 (expresion -> CADENA .)
    AND             reduce using rule 79 (expresion -> CADENA .)


state 138

    (55) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 162
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 139

    (61) tipo -> AMP STR .

    IGUAL           reduce using rule 61 (tipo -> AMP STR .)
    MAS             reduce using rule 61 (tipo -> AMP STR .)
    MENOS           reduce using rule 61 (tipo -> AMP STR .)
    MULTI           reduce using rule 61 (tipo -> AMP STR .)
    DIV             reduce using rule 61 (tipo -> AMP STR .)
    MODULO          reduce using rule 61 (tipo -> AMP STR .)
    PUNTO           reduce using rule 61 (tipo -> AMP STR .)
    AS              reduce using rule 61 (tipo -> AMP STR .)
    MAYOR           reduce using rule 61 (tipo -> AMP STR .)
    MENOR           reduce using rule 61 (tipo -> AMP STR .)
    MAYOR_I         reduce using rule 61 (tipo -> AMP STR .)
    MENOR_I         reduce using rule 61 (tipo -> AMP STR .)
    D_IGUAL         reduce using rule 61 (tipo -> AMP STR .)
    NO_IGUAL        reduce using rule 61 (tipo -> AMP STR .)
    OR              reduce using rule 61 (tipo -> AMP STR .)
    AND             reduce using rule 61 (tipo -> AMP STR .)
    LLV_I           reduce using rule 61 (tipo -> AMP STR .)
    PUNTOCOMA       reduce using rule 61 (tipo -> AMP STR .)
    PAR_D           reduce using rule 61 (tipo -> AMP STR .)
    COMA            reduce using rule 61 (tipo -> AMP STR .)
    LLV_D           reduce using rule 61 (tipo -> AMP STR .)
    BARRA           reduce using rule 61 (tipo -> AMP STR .)
    GUION_B         reduce using rule 61 (tipo -> AMP STR .)
    INT             reduce using rule 61 (tipo -> AMP STR .)
    FLOAT           reduce using rule 61 (tipo -> AMP STR .)
    ABS             reduce using rule 61 (tipo -> AMP STR .)
    SQRT            reduce using rule 61 (tipo -> AMP STR .)
    ENTERO          reduce using rule 61 (tipo -> AMP STR .)
    DECIMAL         reduce using rule 61 (tipo -> AMP STR .)
    TRUE            reduce using rule 61 (tipo -> AMP STR .)
    FALSE           reduce using rule 61 (tipo -> AMP STR .)
    CHAR_S          reduce using rule 61 (tipo -> AMP STR .)
    CADENA          reduce using rule 61 (tipo -> AMP STR .)
    ID              reduce using rule 61 (tipo -> AMP STR .)
    NOT             reduce using rule 61 (tipo -> AMP STR .)
    PAR_I           reduce using rule 61 (tipo -> AMP STR .)
    IF              reduce using rule 61 (tipo -> AMP STR .)
    MATCH           reduce using rule 61 (tipo -> AMP STR .)
    LOOP            reduce using rule 61 (tipo -> AMP STR .)


state 140

    (54) asignacion -> LET MUT ID IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 54 (asignacion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 54 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 141

    (56) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 163


state 142

    (27) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 164
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 143

    (24) else -> ELSE statement .

    EJECUTAR        reduce using rule 24 (else -> ELSE statement .)
    LET             reduce using rule 24 (else -> ELSE statement .)
    ID              reduce using rule 24 (else -> ELSE statement .)
    IF              reduce using rule 24 (else -> ELSE statement .)
    MATCH           reduce using rule 24 (else -> ELSE statement .)
    WHILE           reduce using rule 24 (else -> ELSE statement .)
    LOOP            reduce using rule 24 (else -> ELSE statement .)
    BREAK           reduce using rule 24 (else -> ELSE statement .)
    CONTINUE        reduce using rule 24 (else -> ELSE statement .)
    PRINT           reduce using rule 24 (else -> ELSE statement .)
    $end            reduce using rule 24 (else -> ELSE statement .)
    LLV_D           reduce using rule 24 (else -> ELSE statement .)
    COMA            reduce using rule 24 (else -> ELSE statement .)


state 144

    (25) else -> ELSE if .

    EJECUTAR        reduce using rule 25 (else -> ELSE if .)
    LET             reduce using rule 25 (else -> ELSE if .)
    ID              reduce using rule 25 (else -> ELSE if .)
    IF              reduce using rule 25 (else -> ELSE if .)
    MATCH           reduce using rule 25 (else -> ELSE if .)
    WHILE           reduce using rule 25 (else -> ELSE if .)
    LOOP            reduce using rule 25 (else -> ELSE if .)
    BREAK           reduce using rule 25 (else -> ELSE if .)
    CONTINUE        reduce using rule 25 (else -> ELSE if .)
    PRINT           reduce using rule 25 (else -> ELSE if .)
    $end            reduce using rule 25 (else -> ELSE if .)
    LLV_D           reduce using rule 25 (else -> ELSE if .)
    COMA            reduce using rule 25 (else -> ELSE if .)


state 145

    (80) expresion -> expresion PUNTO TO_STRING PAR_I . PAR_D

    PAR_D           shift and go to state 165


state 146

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 166


state 147

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 167


state 148

    (72) expresion -> ABS PAR_I expresion PAR_D .

    MAS             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOS           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MULTI           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    DIV             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MODULO          reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    AS              reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    OR              reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    AND             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    COMA            reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    BARRA           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    INT             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    ABS             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    SQRT            reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    TRUE            reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    FALSE           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    CADENA          reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    ID              reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    NOT             reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    IF              reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    MATCH           reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)
    LOOP            reduce using rule 72 (expresion -> ABS PAR_I expresion PAR_D .)


state 149

    (73) expresion -> SQRT PAR_I expresion PAR_D .

    MAS             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOS           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MULTI           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    DIV             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MODULO          reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    AS              reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    OR              reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    AND             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    COMA            reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    BARRA           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    INT             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    ABS             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    SQRT            reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    TRUE            reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    FALSE           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    CADENA          reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    ID              reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    NOT             reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    IF              reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    MATCH           reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)
    LOOP            reduce using rule 73 (expresion -> SQRT PAR_I expresion PAR_D .)


state 150

    (39) exp_list_c -> expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 39 (exp_list_c -> expresion .)
    BARRA           reduce using rule 39 (exp_list_c -> expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 151

    (40) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (41) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (42) case_list_exp -> case_list_exp . case_exp
    (46) default_exp -> . GUION_B IGUAL MAYOR expresion
    (44) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (45) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (38) exp_list_c -> . exp_list_c BARRA expresion
    (39) exp_list_c -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    LLV_D           shift and go to state 168
    GUION_B         shift and go to state 171
    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 150
    default_exp                    shift and go to state 169
    case_exp                       shift and go to state 170
    exp_list_c                     shift and go to state 153
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 152

    (43) case_list_exp -> case_exp .

    LLV_D           reduce using rule 43 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 43 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 43 (case_list_exp -> case_exp .)
    INT             reduce using rule 43 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 43 (case_list_exp -> case_exp .)
    ABS             reduce using rule 43 (case_list_exp -> case_exp .)
    SQRT            reduce using rule 43 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 43 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 43 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 43 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 43 (case_list_exp -> case_exp .)
    CHAR_S          reduce using rule 43 (case_list_exp -> case_exp .)
    CADENA          reduce using rule 43 (case_list_exp -> case_exp .)
    ID              reduce using rule 43 (case_list_exp -> case_exp .)
    NOT             reduce using rule 43 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 43 (case_list_exp -> case_exp .)
    IF              reduce using rule 43 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 43 (case_list_exp -> case_exp .)
    LOOP            reduce using rule 43 (case_list_exp -> case_exp .)


state 153

    (44) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (45) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (38) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 172
    BARRA           shift and go to state 173


state 154

    (30) match -> MATCH expresion LLV_I case_list LLV_D .

    EJECUTAR        reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ID              reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    WHILE           reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LOOP            reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    BREAK           reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CONTINUE        reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    PRINT           reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    $end            reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LLV_D           reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 30 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 155

    (31) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 174


state 156

    (32) case_list -> case_list case .

    LLV_D           reduce using rule 32 (case_list -> case_list case .)
    GUION_B         reduce using rule 32 (case_list -> case_list case .)
    MENOS           reduce using rule 32 (case_list -> case_list case .)
    INT             reduce using rule 32 (case_list -> case_list case .)
    FLOAT           reduce using rule 32 (case_list -> case_list case .)
    ABS             reduce using rule 32 (case_list -> case_list case .)
    SQRT            reduce using rule 32 (case_list -> case_list case .)
    ENTERO          reduce using rule 32 (case_list -> case_list case .)
    DECIMAL         reduce using rule 32 (case_list -> case_list case .)
    TRUE            reduce using rule 32 (case_list -> case_list case .)
    FALSE           reduce using rule 32 (case_list -> case_list case .)
    CHAR_S          reduce using rule 32 (case_list -> case_list case .)
    CADENA          reduce using rule 32 (case_list -> case_list case .)
    ID              reduce using rule 32 (case_list -> case_list case .)
    NOT             reduce using rule 32 (case_list -> case_list case .)
    PAR_I           reduce using rule 32 (case_list -> case_list case .)
    IF              reduce using rule 32 (case_list -> case_list case .)
    MATCH           reduce using rule 32 (case_list -> case_list case .)
    LOOP            reduce using rule 32 (case_list -> case_list case .)


state 157

    (36) default -> GUION_B . IGUAL MAYOR statement
    (37) default -> GUION_B . IGUAL MAYOR instruccion

    IGUAL           shift and go to state 175


state 158

    (34) case -> exp_list IGUAL . MAYOR statement
    (35) case -> exp_list IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 176


state 159

    (20) exp_list -> exp_list COMA . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 177
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 160

    (18) print -> PRINT NOT PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 18 (print -> PRINT NOT PAR_I expresion PAR_D .)


state 161

    (19) print -> PRINT NOT PAR_I CADENA COMA . exp_list PAR_D
    (20) exp_list -> . exp_list COMA expresion
    (21) exp_list -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    exp_list                       shift and go to state 178
    expresion                      shift and go to state 131
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 162

    (55) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 55 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 55 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 163

    (56) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 179
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 164

    (27) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (28) exp_else -> . ELSE LLV_I expresion LLV_D
    (29) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 181

    exp_else                       shift and go to state 180

state 165

    (80) expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .

    MAS             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOS           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MULTI           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DIV             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MODULO          reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTO           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AS              reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR_I         reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR_I         reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    D_IGUAL         reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    OR              reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AND             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_I           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_D           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COMA            reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IGUAL           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_D           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    BARRA           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    GUION_B         reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    INT             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FLOAT           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ABS             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    SQRT            reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ENTERO          reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DECIMAL         reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    TRUE            reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FALSE           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CHAR_S          reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CADENA          reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ID              reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NOT             reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_I           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IF              reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MATCH           reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LOOP            reduce using rule 80 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)


state 166

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 182
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 167

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 183
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 168

    (40) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    MAS             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTO           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AS              reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ABS             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    SQRT            reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CHAR_S          reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CADENA          reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LOOP            reduce using rule 40 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 169

    (41) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 184


state 170

    (42) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    ABS             reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    SQRT            reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    CHAR_S          reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    CADENA          reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)
    LOOP            reduce using rule 42 (case_list_exp -> case_list_exp case_exp .)


state 171

    (46) default_exp -> GUION_B . IGUAL MAYOR expresion

    IGUAL           shift and go to state 185


state 172

    (44) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (45) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 186


state 173

    (38) exp_list_c -> exp_list_c BARRA . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 187
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 174

    (31) match -> MATCH expresion LLV_I case_list default LLV_D .

    EJECUTAR        reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ID              reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    WHILE           reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LOOP            reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    BREAK           reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CONTINUE        reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    PRINT           reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    $end            reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LLV_D           reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 31 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 175

    (36) default -> GUION_B IGUAL . MAYOR statement
    (37) default -> GUION_B IGUAL . MAYOR instruccion

    MAYOR           shift and go to state 188


state 176

    (34) case -> exp_list IGUAL MAYOR . statement
    (35) case -> exp_list IGUAL MAYOR . instruccion_no_pt COMA
    (26) statement -> . LLV_I instrucciones LLV_D
    (13) instruccion_no_pt -> . ejecutar
    (14) instruccion_no_pt -> . asignacion
    (15) instruccion_no_pt -> . if
    (16) instruccion_no_pt -> . match
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_I           shift and go to state 55
    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17

    statement                      shift and go to state 189
    instruccion_no_pt              shift and go to state 190
    ejecutar                       shift and go to state 191
    asignacion                     shift and go to state 192
    if                             shift and go to state 193
    match                          shift and go to state 194

state 177

    (20) exp_list -> exp_list COMA expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 20 (exp_list -> exp_list COMA expresion .)
    COMA            reduce using rule 20 (exp_list -> exp_list COMA expresion .)
    PAR_D           reduce using rule 20 (exp_list -> exp_list COMA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 178

    (19) print -> PRINT NOT PAR_I CADENA COMA exp_list . PAR_D
    (20) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 195
    COMA            shift and go to state 159


state 179

    (56) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 56 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 56 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 180

    (27) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTO           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AS              reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ABS             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    SQRT            reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CHAR_S          reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CADENA          reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LOOP            reduce using rule 27 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 181

    (28) exp_else -> ELSE . LLV_I expresion LLV_D
    (29) exp_else -> ELSE . exp_if
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 196
    IF              shift and go to state 31

    exp_if                         shift and go to state 197

state 182

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    COMA            shift and go to state 198
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 183

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    COMA            shift and go to state 199
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 184

    (41) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    MAS             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTO           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AS              reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ABS             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    SQRT            reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CHAR_S          reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CADENA          reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LOOP            reduce using rule 41 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 185

    (46) default_exp -> GUION_B IGUAL . MAYOR expresion

    MAYOR           shift and go to state 200


state 186

    (44) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (45) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 201
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 187

    (38) exp_list_c -> exp_list_c BARRA expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 38 (exp_list_c -> exp_list_c BARRA expresion .)
    BARRA           reduce using rule 38 (exp_list_c -> exp_list_c BARRA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 188

    (36) default -> GUION_B IGUAL MAYOR . statement
    (37) default -> GUION_B IGUAL MAYOR . instruccion
    (26) statement -> . LLV_I instrucciones LLV_D
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . print PUNTOCOMA
    (17) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (53) asignacion -> . LET ID IGUAL expresion
    (54) asignacion -> . LET MUT ID IGUAL expresion
    (55) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (56) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (57) asignacion -> . ID IGUAL expresion
    (22) if -> . IF expresion statement
    (23) if -> . IF expresion statement else
    (30) match -> . MATCH expresion LLV_I case_list LLV_D
    (31) match -> . MATCH expresion LLV_I case_list default LLV_D
    (47) while -> . WHILE expresion statement
    (51) loop -> . LOOP statement
    (48) break -> . BREAK PUNTOCOMA
    (49) break -> . BREAK expresion PUNTOCOMA
    (50) continue -> . CONTINUE PUNTOCOMA
    (18) print -> . PRINT NOT PAR_I expresion PAR_D
    (19) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D

    LLV_I           shift and go to state 55
    EJECUTAR        shift and go to state 13
    LET             shift and go to state 14
    ID              shift and go to state 15
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    WHILE           shift and go to state 18
    LOOP            shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    PRINT           shift and go to state 22

    statement                      shift and go to state 202
    instruccion                    shift and go to state 203
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    print                          shift and go to state 12

state 189

    (34) case -> exp_list IGUAL MAYOR statement .

    LLV_D           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    GUION_B         reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    MENOS           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    INT             reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    FLOAT           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    ABS             reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    SQRT            reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    ENTERO          reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    TRUE            reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    FALSE           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    CHAR_S          reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    CADENA          reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    ID              reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    NOT             reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    PAR_I           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    IF              reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    MATCH           reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)
    LOOP            reduce using rule 34 (case -> exp_list IGUAL MAYOR statement .)


state 190

    (35) case -> exp_list IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 204


state 191

    (13) instruccion_no_pt -> ejecutar .

    COMA            reduce using rule 13 (instruccion_no_pt -> ejecutar .)


state 192

    (14) instruccion_no_pt -> asignacion .

    COMA            reduce using rule 14 (instruccion_no_pt -> asignacion .)


state 193

    (15) instruccion_no_pt -> if .

    COMA            reduce using rule 15 (instruccion_no_pt -> if .)


state 194

    (16) instruccion_no_pt -> match .

    COMA            reduce using rule 16 (instruccion_no_pt -> match .)


state 195

    (19) print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .

    PUNTOCOMA       reduce using rule 19 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)


state 196

    (28) exp_else -> ELSE LLV_I . expresion LLV_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 205
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 197

    (29) exp_else -> ELSE exp_if .

    MAS             reduce using rule 29 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 29 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 29 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 29 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 29 (exp_else -> ELSE exp_if .)
    PUNTO           reduce using rule 29 (exp_else -> ELSE exp_if .)
    AS              reduce using rule 29 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 29 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 29 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 29 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 29 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 29 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 29 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 29 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 29 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 29 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 29 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 29 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 29 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 29 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 29 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 29 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 29 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 29 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 29 (exp_else -> ELSE exp_if .)
    ABS             reduce using rule 29 (exp_else -> ELSE exp_if .)
    SQRT            reduce using rule 29 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 29 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 29 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 29 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 29 (exp_else -> ELSE exp_if .)
    CHAR_S          reduce using rule 29 (exp_else -> ELSE exp_if .)
    CADENA          reduce using rule 29 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 29 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 29 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 29 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 29 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 29 (exp_else -> ELSE exp_if .)
    LOOP            reduce using rule 29 (exp_else -> ELSE exp_if .)


state 198

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 206
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 199

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 207
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 200

    (46) default_exp -> GUION_B IGUAL MAYOR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion MULTI expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion MODULO expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (71) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (72) expresion -> . ABS PAR_I expresion PAR_D
    (73) expresion -> . SQRT PAR_I expresion PAR_D
    (74) expresion -> . ENTERO
    (75) expresion -> . DECIMAL
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . CHAR_S
    (79) expresion -> . CADENA
    (80) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> . expresion AS tipo
    (82) expresion -> . ID
    (83) expresion -> . expresion MAYOR expresion
    (84) expresion -> . expresion MENOR expresion
    (85) expresion -> . expresion MAYOR_I expresion
    (86) expresion -> . expresion MENOR_I expresion
    (87) expresion -> . expresion D_IGUAL expresion
    (88) expresion -> . expresion NO_IGUAL expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PAR_I expresion PAR_D
    (93) expresion -> . exp_if
    (94) expresion -> . match_exp
    (95) expresion -> . loop_exp
    (27) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (40) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (41) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (52) loop_exp -> . LOOP statement

    MENOS           shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 36
    ABS             shift and go to state 37
    SQRT            shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    CHAR_S          shift and go to state 43
    CADENA          shift and go to state 44
    ID              shift and go to state 45
    NOT             shift and go to state 46
    PAR_I           shift and go to state 35
    IF              shift and go to state 31
    MATCH           shift and go to state 50
    LOOP            shift and go to state 51

    expresion                      shift and go to state 208
    exp_if                         shift and go to state 47
    match_exp                      shift and go to state 48
    loop_exp                       shift and go to state 49

state 201

    (44) case_exp -> exp_list_c IGUAL MAYOR expresion .
    (45) case_exp -> exp_list_c IGUAL MAYOR expresion . COMA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    INT             reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ABS             reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    SQRT            reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    TRUE            reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FALSE           reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CHAR_S          reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CADENA          reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ID              reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    NOT             reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    IF              reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    MATCH           reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    LOOP            reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    COMA            shift and go to state 209
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81

  ! MENOS           [ reduce using rule 44 (case_exp -> exp_list_c IGUAL MAYOR expresion .) ]


state 202

    (36) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 36 (default -> GUION_B IGUAL MAYOR statement .)


state 203

    (37) default -> GUION_B IGUAL MAYOR instruccion .

    LLV_D           reduce using rule 37 (default -> GUION_B IGUAL MAYOR instruccion .)


state 204

    (35) case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ABS             reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    SQRT            reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CHAR_S          reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CADENA          reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    LOOP            reduce using rule 35 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)


state 205

    (28) exp_else -> ELSE LLV_I expresion . LLV_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 210
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 206

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 211
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 207

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 212
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 208

    (46) default_exp -> GUION_B IGUAL MAYOR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . MULTI expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . MODULO expresion
    (80) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (81) expresion -> expresion . AS tipo
    (83) expresion -> expresion . MAYOR expresion
    (84) expresion -> expresion . MENOR expresion
    (85) expresion -> expresion . MAYOR_I expresion
    (86) expresion -> expresion . MENOR_I expresion
    (87) expresion -> expresion . D_IGUAL expresion
    (88) expresion -> expresion . NO_IGUAL expresion
    (89) expresion -> expresion . OR expresion
    (90) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 46 (default_exp -> GUION_B IGUAL MAYOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    MODULO          shift and go to state 71
    PUNTO           shift and go to state 72
    AS              shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYOR_I         shift and go to state 76
    MENOR_I         shift and go to state 77
    D_IGUAL         shift and go to state 78
    NO_IGUAL        shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 209

    (45) case_exp -> exp_list_c IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ABS             reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    SQRT            reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CHAR_S          reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CADENA          reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    LOOP            reduce using rule 45 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)


state 210

    (28) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTO           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AS              reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ABS             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    SQRT            reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CHAR_S          reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CADENA          reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LOOP            reduce using rule 28 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 211

    (70) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 70 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 212

    (71) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 71 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 121 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 121 resolved as shift
WARNING: shift/reduce conflict for DIV in state 121 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 121 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 121 resolved as shift
WARNING: shift/reduce conflict for AS in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 121 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
