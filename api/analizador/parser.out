Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COR_D
    COR_I

Grammar

Rule 0     S' -> ini
Rule 1     ini -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> ejecutar PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> if
Rule 7     instruccion -> match
Rule 8     instruccion -> while
Rule 9     instruccion -> loop
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> return PUNTOCOMA
Rule 13    instruccion -> print PUNTOCOMA
Rule 14    instruccion -> funcion
Rule 15    instruccion -> llamada PUNTOCOMA
Rule 16    instruccion_no_pt -> ejecutar
Rule 17    instruccion_no_pt -> asignacion
Rule 18    instruccion_no_pt -> if
Rule 19    instruccion_no_pt -> match
Rule 20    ejecutar -> EJECUTAR PAR_I expresion PAR_D
Rule 21    print -> PRINT NOT PAR_I expresion PAR_D
Rule 22    print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D
Rule 23    exp_list -> exp_list COMA expresion
Rule 24    exp_list -> expresion
Rule 25    funcion -> FN ID PAR_I lista_param PAR_D statement
Rule 26    funcion -> FN ID PAR_I PAR_D statement
Rule 27    funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
Rule 28    funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement
Rule 29    lista_param -> lista_param COMA ID D_PUNTO tipo
Rule 30    lista_param -> ID D_PUNTO tipo
Rule 31    return -> RETURN expresion
Rule 32    return -> RETURN
Rule 33    llamada -> ID PAR_I PAR_D
Rule 34    llamada -> ID PAR_I exp_list PAR_D
Rule 35    if -> IF expresion statement
Rule 36    if -> IF expresion statement else
Rule 37    else -> ELSE statement
Rule 38    else -> ELSE if
Rule 39    statement -> LLV_I instrucciones LLV_D
Rule 40    statement -> LLV_I LLV_D
Rule 41    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 42    exp_else -> ELSE LLV_I expresion LLV_D
Rule 43    exp_else -> ELSE exp_if
Rule 44    match -> MATCH expresion LLV_I case_list LLV_D
Rule 45    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 46    case_list -> case_list case
Rule 47    case_list -> case
Rule 48    case -> exp_list IGUAL MAYOR statement
Rule 49    case -> exp_list IGUAL MAYOR instruccion_no_pt COMA
Rule 50    default -> GUION_B IGUAL MAYOR statement
Rule 51    default -> GUION_B IGUAL MAYOR instruccion
Rule 52    exp_list_c -> exp_list_c BARRA expresion
Rule 53    exp_list_c -> expresion
Rule 54    match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 55    match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 56    case_list_exp -> case_list_exp case_exp
Rule 57    case_list_exp -> case_exp
Rule 58    case_exp -> exp_list_c IGUAL MAYOR expresion
Rule 59    case_exp -> exp_list_c IGUAL MAYOR expresion COMA
Rule 60    default_exp -> GUION_B IGUAL MAYOR expresion
Rule 61    while -> WHILE expresion statement
Rule 62    break -> BREAK PUNTOCOMA
Rule 63    break -> BREAK expresion PUNTOCOMA
Rule 64    continue -> CONTINUE PUNTOCOMA
Rule 65    loop -> LOOP statement
Rule 66    loop_exp -> LOOP statement
Rule 67    asignacion -> LET ID IGUAL expresion
Rule 68    asignacion -> LET MUT ID IGUAL expresion
Rule 69    asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 70    asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 71    asignacion -> ID IGUAL expresion
Rule 72    tipo -> INT
Rule 73    tipo -> FLOAT
Rule 74    tipo -> BOOL
Rule 75    tipo -> AMP STR
Rule 76    tipo -> STRING
Rule 77    tipo -> CHAR
Rule 78    tipo -> VOID
Rule 79    expresion -> expresion MAS expresion
Rule 80    expresion -> expresion MENOS expresion
Rule 81    expresion -> expresion MULTI expresion
Rule 82    expresion -> expresion DIV expresion
Rule 83    expresion -> expresion MODULO expresion
Rule 84    expresion -> MENOS expresion
Rule 85    expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 86    expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 87    expresion -> ABS PAR_I expresion PAR_D
Rule 88    expresion -> SQRT PAR_I expresion PAR_D
Rule 89    expresion -> ENTERO
Rule 90    expresion -> DECIMAL
Rule 91    expresion -> TRUE
Rule 92    expresion -> FALSE
Rule 93    expresion -> CHAR_S
Rule 94    expresion -> CADENA
Rule 95    expresion -> expresion PUNTO TO_STRING PAR_I PAR_D
Rule 96    expresion -> expresion AS tipo
Rule 97    expresion -> ID
Rule 98    expresion -> expresion MAYOR expresion
Rule 99    expresion -> expresion MENOR expresion
Rule 100   expresion -> expresion MAYOR_I expresion
Rule 101   expresion -> expresion MENOR_I expresion
Rule 102   expresion -> expresion D_IGUAL expresion
Rule 103   expresion -> expresion NO_IGUAL expresion
Rule 104   expresion -> expresion OR expresion
Rule 105   expresion -> expresion AND expresion
Rule 106   expresion -> NOT expresion
Rule 107   expresion -> PAR_I expresion PAR_D
Rule 108   expresion -> exp_if
Rule 109   expresion -> match_exp
Rule 110   expresion -> loop_exp
Rule 111   expresion -> llamada

Terminals, with rules where they appear

ABS                  : 87
AMP                  : 75
AND                  : 105
AS                   : 96
BARRA                : 52
BOOL                 : 74
BREAK                : 62 63
CADENA               : 22 94
CHAR                 : 77
CHAR_S               : 93
COMA                 : 22 23 29 49 59 85 86
CONTINUE             : 64
COR_D                : 
COR_I                : 
DECIMAL              : 90
DIV                  : 82
D_IGUAL              : 102
D_PUNTO              : 29 30 69 70 85 85 86 86
EJECUTAR             : 20
ELSE                 : 37 38 42 43
ENTERO               : 89
FALSE                : 92
FLOAT                : 73 86
FN                   : 25 26 27 28
GUION_B              : 50 51 60
ID                   : 25 26 27 28 29 30 33 34 67 68 69 70 71 97
IF                   : 35 36 41
IGUAL                : 48 49 50 51 58 59 60 67 68 69 70 71
INT                  : 72 85
LET                  : 67 68 69 70
LLV_D                : 39 40 41 42 44 45 54 55
LLV_I                : 39 40 41 42 44 45 54 55
LOOP                 : 65 66
MAS                  : 79
MATCH                : 44 45 54 55
MAYOR                : 27 28 48 49 50 51 58 59 60 98
MAYOR_I              : 100
MENOR                : 99
MENOR_I              : 101
MENOS                : 27 28 80 84
MODULO               : 83
MULTI                : 81
MUT                  : 68 70
NOT                  : 21 22 106
NO_IGUAL             : 103
OR                   : 104
PAR_D                : 20 21 22 25 26 27 28 33 34 85 86 87 88 95 107
PAR_I                : 20 21 22 25 26 27 28 33 34 85 86 87 88 95 107
POW_FLOAT            : 86
POW_INT              : 85
PRINT                : 21 22
PUNTO                : 95
PUNTOCOMA            : 4 5 12 13 15 62 63 64
RETURN               : 31 32
SQRT                 : 88
STR                  : 75
STRING               : 76
TO_STRING            : 95
TRUE                 : 91
VOID                 : 78
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

asignacion           : 5 17
break                : 10
case                 : 46 47
case_exp             : 56 57
case_list            : 44 45 46
case_list_exp        : 54 55 56
continue             : 11
default              : 45
default_exp          : 55
ejecutar             : 4 16
else                 : 36
exp_else             : 41
exp_if               : 43 108
exp_list             : 22 23 34 48 49
exp_list_c           : 52 58 59
expresion            : 20 21 23 24 31 35 36 41 41 42 44 45 52 53 54 55 58 59 60 61 63 67 68 69 70 71 79 79 80 80 81 81 82 82 83 83 84 85 85 86 86 87 88 95 96 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 107
funcion              : 14
if                   : 6 18 38
ini                  : 0
instruccion          : 2 3 51
instruccion_no_pt    : 49
instrucciones        : 1 2 39
lista_param          : 25 27 29
llamada              : 15 111
loop                 : 9
loop_exp             : 110
match                : 7 19
match_exp            : 109
print                : 13
return               : 12
statement            : 25 26 27 28 35 36 37 48 50 61 65 66
tipo                 : 27 28 29 30 69 70 96
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . return PUNTOCOMA
    (13) instruccion -> . print PUNTOCOMA
    (14) instruccion -> . funcion
    (15) instruccion -> . llamada PUNTOCOMA
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D
    (61) while -> . WHILE expresion statement
    (65) loop -> . LOOP statement
    (62) break -> . BREAK PUNTOCOMA
    (63) break -> . BREAK expresion PUNTOCOMA
    (64) continue -> . CONTINUE PUNTOCOMA
    (31) return -> . RETURN expresion
    (32) return -> . RETURN
    (21) print -> . PRINT NOT PAR_I expresion PAR_D
    (22) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (25) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (26) funcion -> . FN ID PAR_I PAR_D statement
    (27) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 18
    IF              shift and go to state 19
    MATCH           shift and go to state 20
    WHILE           shift and go to state 21
    LOOP            shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    FN              shift and go to state 27

    ini                            shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    print                          shift and go to state 13
    funcion                        shift and go to state 14
    llamada                        shift and go to state 15

state 1

    (0) S' -> ini .



state 2

    (1) ini -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . return PUNTOCOMA
    (13) instruccion -> . print PUNTOCOMA
    (14) instruccion -> . funcion
    (15) instruccion -> . llamada PUNTOCOMA
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D
    (61) while -> . WHILE expresion statement
    (65) loop -> . LOOP statement
    (62) break -> . BREAK PUNTOCOMA
    (63) break -> . BREAK expresion PUNTOCOMA
    (64) continue -> . CONTINUE PUNTOCOMA
    (31) return -> . RETURN expresion
    (32) return -> . RETURN
    (21) print -> . PRINT NOT PAR_I expresion PAR_D
    (22) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (25) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (26) funcion -> . FN ID PAR_I PAR_D statement
    (27) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    $end            reduce using rule 1 (ini -> instrucciones .)
    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 18
    IF              shift and go to state 19
    MATCH           shift and go to state 20
    WHILE           shift and go to state 21
    LOOP            shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    FN              shift and go to state 27

    instruccion                    shift and go to state 28
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    print                          shift and go to state 13
    funcion                        shift and go to state 14
    llamada                        shift and go to state 15

state 3

    (3) instrucciones -> instruccion .

    EJECUTAR        reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    FN              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> ejecutar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 29


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 30


state 6

    (6) instruccion -> if .

    EJECUTAR        reduce using rule 6 (instruccion -> if .)
    LET             reduce using rule 6 (instruccion -> if .)
    ID              reduce using rule 6 (instruccion -> if .)
    IF              reduce using rule 6 (instruccion -> if .)
    MATCH           reduce using rule 6 (instruccion -> if .)
    WHILE           reduce using rule 6 (instruccion -> if .)
    LOOP            reduce using rule 6 (instruccion -> if .)
    BREAK           reduce using rule 6 (instruccion -> if .)
    CONTINUE        reduce using rule 6 (instruccion -> if .)
    RETURN          reduce using rule 6 (instruccion -> if .)
    PRINT           reduce using rule 6 (instruccion -> if .)
    FN              reduce using rule 6 (instruccion -> if .)
    $end            reduce using rule 6 (instruccion -> if .)
    LLV_D           reduce using rule 6 (instruccion -> if .)


state 7

    (7) instruccion -> match .

    EJECUTAR        reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    WHILE           reduce using rule 7 (instruccion -> match .)
    LOOP            reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    RETURN          reduce using rule 7 (instruccion -> match .)
    PRINT           reduce using rule 7 (instruccion -> match .)
    FN              reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLV_D           reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> while .

    EJECUTAR        reduce using rule 8 (instruccion -> while .)
    LET             reduce using rule 8 (instruccion -> while .)
    ID              reduce using rule 8 (instruccion -> while .)
    IF              reduce using rule 8 (instruccion -> while .)
    MATCH           reduce using rule 8 (instruccion -> while .)
    WHILE           reduce using rule 8 (instruccion -> while .)
    LOOP            reduce using rule 8 (instruccion -> while .)
    BREAK           reduce using rule 8 (instruccion -> while .)
    CONTINUE        reduce using rule 8 (instruccion -> while .)
    RETURN          reduce using rule 8 (instruccion -> while .)
    PRINT           reduce using rule 8 (instruccion -> while .)
    FN              reduce using rule 8 (instruccion -> while .)
    $end            reduce using rule 8 (instruccion -> while .)
    LLV_D           reduce using rule 8 (instruccion -> while .)


state 9

    (9) instruccion -> loop .

    EJECUTAR        reduce using rule 9 (instruccion -> loop .)
    LET             reduce using rule 9 (instruccion -> loop .)
    ID              reduce using rule 9 (instruccion -> loop .)
    IF              reduce using rule 9 (instruccion -> loop .)
    MATCH           reduce using rule 9 (instruccion -> loop .)
    WHILE           reduce using rule 9 (instruccion -> loop .)
    LOOP            reduce using rule 9 (instruccion -> loop .)
    BREAK           reduce using rule 9 (instruccion -> loop .)
    CONTINUE        reduce using rule 9 (instruccion -> loop .)
    RETURN          reduce using rule 9 (instruccion -> loop .)
    PRINT           reduce using rule 9 (instruccion -> loop .)
    FN              reduce using rule 9 (instruccion -> loop .)
    $end            reduce using rule 9 (instruccion -> loop .)
    LLV_D           reduce using rule 9 (instruccion -> loop .)


state 10

    (10) instruccion -> break .

    EJECUTAR        reduce using rule 10 (instruccion -> break .)
    LET             reduce using rule 10 (instruccion -> break .)
    ID              reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    MATCH           reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    LOOP            reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    RETURN          reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    FN              reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLV_D           reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    EJECUTAR        reduce using rule 11 (instruccion -> continue .)
    LET             reduce using rule 11 (instruccion -> continue .)
    ID              reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    MATCH           reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    LOOP            reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    RETURN          reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    FN              reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLV_D           reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> return . PUNTOCOMA

    PUNTOCOMA       shift and go to state 31


state 13

    (13) instruccion -> print . PUNTOCOMA

    PUNTOCOMA       shift and go to state 32


state 14

    (14) instruccion -> funcion .

    EJECUTAR        reduce using rule 14 (instruccion -> funcion .)
    LET             reduce using rule 14 (instruccion -> funcion .)
    ID              reduce using rule 14 (instruccion -> funcion .)
    IF              reduce using rule 14 (instruccion -> funcion .)
    MATCH           reduce using rule 14 (instruccion -> funcion .)
    WHILE           reduce using rule 14 (instruccion -> funcion .)
    LOOP            reduce using rule 14 (instruccion -> funcion .)
    BREAK           reduce using rule 14 (instruccion -> funcion .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion .)
    RETURN          reduce using rule 14 (instruccion -> funcion .)
    PRINT           reduce using rule 14 (instruccion -> funcion .)
    FN              reduce using rule 14 (instruccion -> funcion .)
    $end            reduce using rule 14 (instruccion -> funcion .)
    LLV_D           reduce using rule 14 (instruccion -> funcion .)


state 15

    (15) instruccion -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 33


state 16

    (20) ejecutar -> EJECUTAR . PAR_I expresion PAR_D

    PAR_I           shift and go to state 34


state 17

    (67) asignacion -> LET . ID IGUAL expresion
    (68) asignacion -> LET . MUT ID IGUAL expresion
    (69) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 35
    MUT             shift and go to state 36


state 18

    (71) asignacion -> ID . IGUAL expresion
    (33) llamada -> ID . PAR_I PAR_D
    (34) llamada -> ID . PAR_I exp_list PAR_D

    IGUAL           shift and go to state 37
    PAR_I           shift and go to state 38


state 19

    (35) if -> IF . expresion statement
    (36) if -> IF . expresion statement else
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 40
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 20

    (44) match -> MATCH . expresion LLV_I case_list LLV_D
    (45) match -> MATCH . expresion LLV_I case_list default LLV_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 61
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 21

    (61) while -> WHILE . expresion statement
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 62
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 22

    (65) loop -> LOOP . statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 64

    statement                      shift and go to state 63

state 23

    (62) break -> BREAK . PUNTOCOMA
    (63) break -> BREAK . expresion PUNTOCOMA
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    PUNTOCOMA       shift and go to state 65
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 66
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 24

    (64) continue -> CONTINUE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 67


state 25

    (31) return -> RETURN . expresion
    (32) return -> RETURN .
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    PUNTOCOMA       reduce using rule 32 (return -> RETURN .)
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 68
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 26

    (21) print -> PRINT . NOT PAR_I expresion PAR_D
    (22) print -> PRINT . NOT PAR_I CADENA COMA exp_list PAR_D

    NOT             shift and go to state 69


state 27

    (25) funcion -> FN . ID PAR_I lista_param PAR_D statement
    (26) funcion -> FN . ID PAR_I PAR_D statement
    (27) funcion -> FN . ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> FN . ID PAR_I PAR_D MENOS MAYOR tipo statement

    ID              shift and go to state 70


state 28

    (2) instrucciones -> instrucciones instruccion .

    EJECUTAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FN              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 29

    (4) instruccion -> ejecutar PUNTOCOMA .

    EJECUTAR        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LOOP            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    RETURN          reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    PRINT           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    FN              reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)
    LLV_D           reduce using rule 4 (instruccion -> ejecutar PUNTOCOMA .)


state 30

    (5) instruccion -> asignacion PUNTOCOMA .

    EJECUTAR        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LOOP            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RETURN          reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    PRINT           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    FN              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLV_D           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 31

    (12) instruccion -> return PUNTOCOMA .

    EJECUTAR        reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    LET             reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    MATCH           reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    LOOP            reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    RETURN          reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    PRINT           reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    FN              reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    $end            reduce using rule 12 (instruccion -> return PUNTOCOMA .)
    LLV_D           reduce using rule 12 (instruccion -> return PUNTOCOMA .)


state 32

    (13) instruccion -> print PUNTOCOMA .

    EJECUTAR        reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    LET             reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    ID              reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    IF              reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    MATCH           reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    WHILE           reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    LOOP            reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    BREAK           reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    RETURN          reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    PRINT           reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    FN              reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    $end            reduce using rule 13 (instruccion -> print PUNTOCOMA .)
    LLV_D           reduce using rule 13 (instruccion -> print PUNTOCOMA .)


state 33

    (15) instruccion -> llamada PUNTOCOMA .

    EJECUTAR        reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    LET             reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    ID              reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    IF              reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    MATCH           reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    WHILE           reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    LOOP            reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    BREAK           reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    RETURN          reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    PRINT           reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    FN              reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    $end            reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)
    LLV_D           reduce using rule 15 (instruccion -> llamada PUNTOCOMA .)


state 34

    (20) ejecutar -> EJECUTAR PAR_I . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 71
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 35

    (67) asignacion -> LET ID . IGUAL expresion
    (69) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 72
    D_PUNTO         shift and go to state 73


state 36

    (68) asignacion -> LET MUT . ID IGUAL expresion
    (70) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 74


state 37

    (71) asignacion -> ID IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 75
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 38

    (33) llamada -> ID PAR_I . PAR_D
    (34) llamada -> ID PAR_I . exp_list PAR_D
    (23) exp_list -> . exp_list COMA expresion
    (24) exp_list -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    PAR_D           shift and go to state 76
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    exp_list                       shift and go to state 77
    expresion                      shift and go to state 78
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 39

    (41) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 79
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 40

    (35) if -> IF expresion . statement
    (36) if -> IF expresion . statement else
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    LLV_I           shift and go to state 64

    statement                      shift and go to state 80

state 41

    (84) expresion -> MENOS . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 96
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 42

    (85) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 97


state 43

    (107) expresion -> PAR_I . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 98
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 44

    (86) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 99


state 45

    (87) expresion -> ABS . PAR_I expresion PAR_D

    PAR_I           shift and go to state 100


state 46

    (88) expresion -> SQRT . PAR_I expresion PAR_D

    PAR_I           shift and go to state 101


state 47

    (89) expresion -> ENTERO .

    MAS             reduce using rule 89 (expresion -> ENTERO .)
    MENOS           reduce using rule 89 (expresion -> ENTERO .)
    MULTI           reduce using rule 89 (expresion -> ENTERO .)
    DIV             reduce using rule 89 (expresion -> ENTERO .)
    MODULO          reduce using rule 89 (expresion -> ENTERO .)
    PUNTO           reduce using rule 89 (expresion -> ENTERO .)
    AS              reduce using rule 89 (expresion -> ENTERO .)
    MAYOR           reduce using rule 89 (expresion -> ENTERO .)
    MENOR           reduce using rule 89 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 89 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 89 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 89 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 89 (expresion -> ENTERO .)
    OR              reduce using rule 89 (expresion -> ENTERO .)
    AND             reduce using rule 89 (expresion -> ENTERO .)
    LLV_I           reduce using rule 89 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 89 (expresion -> ENTERO .)
    PAR_D           reduce using rule 89 (expresion -> ENTERO .)
    COMA            reduce using rule 89 (expresion -> ENTERO .)
    IGUAL           reduce using rule 89 (expresion -> ENTERO .)
    LLV_D           reduce using rule 89 (expresion -> ENTERO .)
    BARRA           reduce using rule 89 (expresion -> ENTERO .)
    GUION_B         reduce using rule 89 (expresion -> ENTERO .)
    INT             reduce using rule 89 (expresion -> ENTERO .)
    FLOAT           reduce using rule 89 (expresion -> ENTERO .)
    ABS             reduce using rule 89 (expresion -> ENTERO .)
    SQRT            reduce using rule 89 (expresion -> ENTERO .)
    ENTERO          reduce using rule 89 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 89 (expresion -> ENTERO .)
    TRUE            reduce using rule 89 (expresion -> ENTERO .)
    FALSE           reduce using rule 89 (expresion -> ENTERO .)
    CHAR_S          reduce using rule 89 (expresion -> ENTERO .)
    CADENA          reduce using rule 89 (expresion -> ENTERO .)
    ID              reduce using rule 89 (expresion -> ENTERO .)
    NOT             reduce using rule 89 (expresion -> ENTERO .)
    PAR_I           reduce using rule 89 (expresion -> ENTERO .)
    IF              reduce using rule 89 (expresion -> ENTERO .)
    MATCH           reduce using rule 89 (expresion -> ENTERO .)
    LOOP            reduce using rule 89 (expresion -> ENTERO .)


state 48

    (90) expresion -> DECIMAL .

    MAS             reduce using rule 90 (expresion -> DECIMAL .)
    MENOS           reduce using rule 90 (expresion -> DECIMAL .)
    MULTI           reduce using rule 90 (expresion -> DECIMAL .)
    DIV             reduce using rule 90 (expresion -> DECIMAL .)
    MODULO          reduce using rule 90 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 90 (expresion -> DECIMAL .)
    AS              reduce using rule 90 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 90 (expresion -> DECIMAL .)
    MENOR           reduce using rule 90 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 90 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 90 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 90 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 90 (expresion -> DECIMAL .)
    OR              reduce using rule 90 (expresion -> DECIMAL .)
    AND             reduce using rule 90 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 90 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 90 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 90 (expresion -> DECIMAL .)
    COMA            reduce using rule 90 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 90 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 90 (expresion -> DECIMAL .)
    BARRA           reduce using rule 90 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 90 (expresion -> DECIMAL .)
    INT             reduce using rule 90 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 90 (expresion -> DECIMAL .)
    ABS             reduce using rule 90 (expresion -> DECIMAL .)
    SQRT            reduce using rule 90 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 90 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 90 (expresion -> DECIMAL .)
    TRUE            reduce using rule 90 (expresion -> DECIMAL .)
    FALSE           reduce using rule 90 (expresion -> DECIMAL .)
    CHAR_S          reduce using rule 90 (expresion -> DECIMAL .)
    CADENA          reduce using rule 90 (expresion -> DECIMAL .)
    ID              reduce using rule 90 (expresion -> DECIMAL .)
    NOT             reduce using rule 90 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 90 (expresion -> DECIMAL .)
    IF              reduce using rule 90 (expresion -> DECIMAL .)
    MATCH           reduce using rule 90 (expresion -> DECIMAL .)
    LOOP            reduce using rule 90 (expresion -> DECIMAL .)


state 49

    (91) expresion -> TRUE .

    MAS             reduce using rule 91 (expresion -> TRUE .)
    MENOS           reduce using rule 91 (expresion -> TRUE .)
    MULTI           reduce using rule 91 (expresion -> TRUE .)
    DIV             reduce using rule 91 (expresion -> TRUE .)
    MODULO          reduce using rule 91 (expresion -> TRUE .)
    PUNTO           reduce using rule 91 (expresion -> TRUE .)
    AS              reduce using rule 91 (expresion -> TRUE .)
    MAYOR           reduce using rule 91 (expresion -> TRUE .)
    MENOR           reduce using rule 91 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 91 (expresion -> TRUE .)
    MENOR_I         reduce using rule 91 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 91 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 91 (expresion -> TRUE .)
    OR              reduce using rule 91 (expresion -> TRUE .)
    AND             reduce using rule 91 (expresion -> TRUE .)
    LLV_I           reduce using rule 91 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 91 (expresion -> TRUE .)
    PAR_D           reduce using rule 91 (expresion -> TRUE .)
    COMA            reduce using rule 91 (expresion -> TRUE .)
    IGUAL           reduce using rule 91 (expresion -> TRUE .)
    LLV_D           reduce using rule 91 (expresion -> TRUE .)
    BARRA           reduce using rule 91 (expresion -> TRUE .)
    GUION_B         reduce using rule 91 (expresion -> TRUE .)
    INT             reduce using rule 91 (expresion -> TRUE .)
    FLOAT           reduce using rule 91 (expresion -> TRUE .)
    ABS             reduce using rule 91 (expresion -> TRUE .)
    SQRT            reduce using rule 91 (expresion -> TRUE .)
    ENTERO          reduce using rule 91 (expresion -> TRUE .)
    DECIMAL         reduce using rule 91 (expresion -> TRUE .)
    TRUE            reduce using rule 91 (expresion -> TRUE .)
    FALSE           reduce using rule 91 (expresion -> TRUE .)
    CHAR_S          reduce using rule 91 (expresion -> TRUE .)
    CADENA          reduce using rule 91 (expresion -> TRUE .)
    ID              reduce using rule 91 (expresion -> TRUE .)
    NOT             reduce using rule 91 (expresion -> TRUE .)
    PAR_I           reduce using rule 91 (expresion -> TRUE .)
    IF              reduce using rule 91 (expresion -> TRUE .)
    MATCH           reduce using rule 91 (expresion -> TRUE .)
    LOOP            reduce using rule 91 (expresion -> TRUE .)


state 50

    (92) expresion -> FALSE .

    MAS             reduce using rule 92 (expresion -> FALSE .)
    MENOS           reduce using rule 92 (expresion -> FALSE .)
    MULTI           reduce using rule 92 (expresion -> FALSE .)
    DIV             reduce using rule 92 (expresion -> FALSE .)
    MODULO          reduce using rule 92 (expresion -> FALSE .)
    PUNTO           reduce using rule 92 (expresion -> FALSE .)
    AS              reduce using rule 92 (expresion -> FALSE .)
    MAYOR           reduce using rule 92 (expresion -> FALSE .)
    MENOR           reduce using rule 92 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 92 (expresion -> FALSE .)
    MENOR_I         reduce using rule 92 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 92 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 92 (expresion -> FALSE .)
    OR              reduce using rule 92 (expresion -> FALSE .)
    AND             reduce using rule 92 (expresion -> FALSE .)
    LLV_I           reduce using rule 92 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 92 (expresion -> FALSE .)
    PAR_D           reduce using rule 92 (expresion -> FALSE .)
    COMA            reduce using rule 92 (expresion -> FALSE .)
    IGUAL           reduce using rule 92 (expresion -> FALSE .)
    LLV_D           reduce using rule 92 (expresion -> FALSE .)
    BARRA           reduce using rule 92 (expresion -> FALSE .)
    GUION_B         reduce using rule 92 (expresion -> FALSE .)
    INT             reduce using rule 92 (expresion -> FALSE .)
    FLOAT           reduce using rule 92 (expresion -> FALSE .)
    ABS             reduce using rule 92 (expresion -> FALSE .)
    SQRT            reduce using rule 92 (expresion -> FALSE .)
    ENTERO          reduce using rule 92 (expresion -> FALSE .)
    DECIMAL         reduce using rule 92 (expresion -> FALSE .)
    TRUE            reduce using rule 92 (expresion -> FALSE .)
    FALSE           reduce using rule 92 (expresion -> FALSE .)
    CHAR_S          reduce using rule 92 (expresion -> FALSE .)
    CADENA          reduce using rule 92 (expresion -> FALSE .)
    ID              reduce using rule 92 (expresion -> FALSE .)
    NOT             reduce using rule 92 (expresion -> FALSE .)
    PAR_I           reduce using rule 92 (expresion -> FALSE .)
    IF              reduce using rule 92 (expresion -> FALSE .)
    MATCH           reduce using rule 92 (expresion -> FALSE .)
    LOOP            reduce using rule 92 (expresion -> FALSE .)


state 51

    (93) expresion -> CHAR_S .

    MAS             reduce using rule 93 (expresion -> CHAR_S .)
    MENOS           reduce using rule 93 (expresion -> CHAR_S .)
    MULTI           reduce using rule 93 (expresion -> CHAR_S .)
    DIV             reduce using rule 93 (expresion -> CHAR_S .)
    MODULO          reduce using rule 93 (expresion -> CHAR_S .)
    PUNTO           reduce using rule 93 (expresion -> CHAR_S .)
    AS              reduce using rule 93 (expresion -> CHAR_S .)
    MAYOR           reduce using rule 93 (expresion -> CHAR_S .)
    MENOR           reduce using rule 93 (expresion -> CHAR_S .)
    MAYOR_I         reduce using rule 93 (expresion -> CHAR_S .)
    MENOR_I         reduce using rule 93 (expresion -> CHAR_S .)
    D_IGUAL         reduce using rule 93 (expresion -> CHAR_S .)
    NO_IGUAL        reduce using rule 93 (expresion -> CHAR_S .)
    OR              reduce using rule 93 (expresion -> CHAR_S .)
    AND             reduce using rule 93 (expresion -> CHAR_S .)
    LLV_I           reduce using rule 93 (expresion -> CHAR_S .)
    PUNTOCOMA       reduce using rule 93 (expresion -> CHAR_S .)
    PAR_D           reduce using rule 93 (expresion -> CHAR_S .)
    COMA            reduce using rule 93 (expresion -> CHAR_S .)
    IGUAL           reduce using rule 93 (expresion -> CHAR_S .)
    LLV_D           reduce using rule 93 (expresion -> CHAR_S .)
    BARRA           reduce using rule 93 (expresion -> CHAR_S .)
    GUION_B         reduce using rule 93 (expresion -> CHAR_S .)
    INT             reduce using rule 93 (expresion -> CHAR_S .)
    FLOAT           reduce using rule 93 (expresion -> CHAR_S .)
    ABS             reduce using rule 93 (expresion -> CHAR_S .)
    SQRT            reduce using rule 93 (expresion -> CHAR_S .)
    ENTERO          reduce using rule 93 (expresion -> CHAR_S .)
    DECIMAL         reduce using rule 93 (expresion -> CHAR_S .)
    TRUE            reduce using rule 93 (expresion -> CHAR_S .)
    FALSE           reduce using rule 93 (expresion -> CHAR_S .)
    CHAR_S          reduce using rule 93 (expresion -> CHAR_S .)
    CADENA          reduce using rule 93 (expresion -> CHAR_S .)
    ID              reduce using rule 93 (expresion -> CHAR_S .)
    NOT             reduce using rule 93 (expresion -> CHAR_S .)
    PAR_I           reduce using rule 93 (expresion -> CHAR_S .)
    IF              reduce using rule 93 (expresion -> CHAR_S .)
    MATCH           reduce using rule 93 (expresion -> CHAR_S .)
    LOOP            reduce using rule 93 (expresion -> CHAR_S .)


state 52

    (94) expresion -> CADENA .

    MAS             reduce using rule 94 (expresion -> CADENA .)
    MENOS           reduce using rule 94 (expresion -> CADENA .)
    MULTI           reduce using rule 94 (expresion -> CADENA .)
    DIV             reduce using rule 94 (expresion -> CADENA .)
    MODULO          reduce using rule 94 (expresion -> CADENA .)
    PUNTO           reduce using rule 94 (expresion -> CADENA .)
    AS              reduce using rule 94 (expresion -> CADENA .)
    MAYOR           reduce using rule 94 (expresion -> CADENA .)
    MENOR           reduce using rule 94 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 94 (expresion -> CADENA .)
    MENOR_I         reduce using rule 94 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 94 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 94 (expresion -> CADENA .)
    OR              reduce using rule 94 (expresion -> CADENA .)
    AND             reduce using rule 94 (expresion -> CADENA .)
    LLV_I           reduce using rule 94 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 94 (expresion -> CADENA .)
    PAR_D           reduce using rule 94 (expresion -> CADENA .)
    COMA            reduce using rule 94 (expresion -> CADENA .)
    IGUAL           reduce using rule 94 (expresion -> CADENA .)
    LLV_D           reduce using rule 94 (expresion -> CADENA .)
    BARRA           reduce using rule 94 (expresion -> CADENA .)
    GUION_B         reduce using rule 94 (expresion -> CADENA .)
    INT             reduce using rule 94 (expresion -> CADENA .)
    FLOAT           reduce using rule 94 (expresion -> CADENA .)
    ABS             reduce using rule 94 (expresion -> CADENA .)
    SQRT            reduce using rule 94 (expresion -> CADENA .)
    ENTERO          reduce using rule 94 (expresion -> CADENA .)
    DECIMAL         reduce using rule 94 (expresion -> CADENA .)
    TRUE            reduce using rule 94 (expresion -> CADENA .)
    FALSE           reduce using rule 94 (expresion -> CADENA .)
    CHAR_S          reduce using rule 94 (expresion -> CADENA .)
    CADENA          reduce using rule 94 (expresion -> CADENA .)
    ID              reduce using rule 94 (expresion -> CADENA .)
    NOT             reduce using rule 94 (expresion -> CADENA .)
    PAR_I           reduce using rule 94 (expresion -> CADENA .)
    IF              reduce using rule 94 (expresion -> CADENA .)
    MATCH           reduce using rule 94 (expresion -> CADENA .)
    LOOP            reduce using rule 94 (expresion -> CADENA .)


state 53

    (97) expresion -> ID .
    (33) llamada -> ID . PAR_I PAR_D
    (34) llamada -> ID . PAR_I exp_list PAR_D

  ! shift/reduce conflict for PAR_I resolved as shift
    MAS             reduce using rule 97 (expresion -> ID .)
    MENOS           reduce using rule 97 (expresion -> ID .)
    MULTI           reduce using rule 97 (expresion -> ID .)
    DIV             reduce using rule 97 (expresion -> ID .)
    MODULO          reduce using rule 97 (expresion -> ID .)
    PUNTO           reduce using rule 97 (expresion -> ID .)
    AS              reduce using rule 97 (expresion -> ID .)
    MAYOR           reduce using rule 97 (expresion -> ID .)
    MENOR           reduce using rule 97 (expresion -> ID .)
    MAYOR_I         reduce using rule 97 (expresion -> ID .)
    MENOR_I         reduce using rule 97 (expresion -> ID .)
    D_IGUAL         reduce using rule 97 (expresion -> ID .)
    NO_IGUAL        reduce using rule 97 (expresion -> ID .)
    OR              reduce using rule 97 (expresion -> ID .)
    AND             reduce using rule 97 (expresion -> ID .)
    LLV_I           reduce using rule 97 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 97 (expresion -> ID .)
    PAR_D           reduce using rule 97 (expresion -> ID .)
    COMA            reduce using rule 97 (expresion -> ID .)
    IGUAL           reduce using rule 97 (expresion -> ID .)
    LLV_D           reduce using rule 97 (expresion -> ID .)
    BARRA           reduce using rule 97 (expresion -> ID .)
    GUION_B         reduce using rule 97 (expresion -> ID .)
    INT             reduce using rule 97 (expresion -> ID .)
    FLOAT           reduce using rule 97 (expresion -> ID .)
    ABS             reduce using rule 97 (expresion -> ID .)
    SQRT            reduce using rule 97 (expresion -> ID .)
    ENTERO          reduce using rule 97 (expresion -> ID .)
    DECIMAL         reduce using rule 97 (expresion -> ID .)
    TRUE            reduce using rule 97 (expresion -> ID .)
    FALSE           reduce using rule 97 (expresion -> ID .)
    CHAR_S          reduce using rule 97 (expresion -> ID .)
    CADENA          reduce using rule 97 (expresion -> ID .)
    ID              reduce using rule 97 (expresion -> ID .)
    NOT             reduce using rule 97 (expresion -> ID .)
    IF              reduce using rule 97 (expresion -> ID .)
    MATCH           reduce using rule 97 (expresion -> ID .)
    LOOP            reduce using rule 97 (expresion -> ID .)
    PAR_I           shift and go to state 38

  ! PAR_I           [ reduce using rule 97 (expresion -> ID .) ]


state 54

    (106) expresion -> NOT . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 102
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 55

    (108) expresion -> exp_if .

    MAS             reduce using rule 108 (expresion -> exp_if .)
    MENOS           reduce using rule 108 (expresion -> exp_if .)
    MULTI           reduce using rule 108 (expresion -> exp_if .)
    DIV             reduce using rule 108 (expresion -> exp_if .)
    MODULO          reduce using rule 108 (expresion -> exp_if .)
    PUNTO           reduce using rule 108 (expresion -> exp_if .)
    AS              reduce using rule 108 (expresion -> exp_if .)
    MAYOR           reduce using rule 108 (expresion -> exp_if .)
    MENOR           reduce using rule 108 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 108 (expresion -> exp_if .)
    MENOR_I         reduce using rule 108 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 108 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 108 (expresion -> exp_if .)
    OR              reduce using rule 108 (expresion -> exp_if .)
    AND             reduce using rule 108 (expresion -> exp_if .)
    LLV_I           reduce using rule 108 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 108 (expresion -> exp_if .)
    PAR_D           reduce using rule 108 (expresion -> exp_if .)
    COMA            reduce using rule 108 (expresion -> exp_if .)
    IGUAL           reduce using rule 108 (expresion -> exp_if .)
    LLV_D           reduce using rule 108 (expresion -> exp_if .)
    BARRA           reduce using rule 108 (expresion -> exp_if .)
    GUION_B         reduce using rule 108 (expresion -> exp_if .)
    INT             reduce using rule 108 (expresion -> exp_if .)
    FLOAT           reduce using rule 108 (expresion -> exp_if .)
    ABS             reduce using rule 108 (expresion -> exp_if .)
    SQRT            reduce using rule 108 (expresion -> exp_if .)
    ENTERO          reduce using rule 108 (expresion -> exp_if .)
    DECIMAL         reduce using rule 108 (expresion -> exp_if .)
    TRUE            reduce using rule 108 (expresion -> exp_if .)
    FALSE           reduce using rule 108 (expresion -> exp_if .)
    CHAR_S          reduce using rule 108 (expresion -> exp_if .)
    CADENA          reduce using rule 108 (expresion -> exp_if .)
    ID              reduce using rule 108 (expresion -> exp_if .)
    NOT             reduce using rule 108 (expresion -> exp_if .)
    PAR_I           reduce using rule 108 (expresion -> exp_if .)
    IF              reduce using rule 108 (expresion -> exp_if .)
    MATCH           reduce using rule 108 (expresion -> exp_if .)
    LOOP            reduce using rule 108 (expresion -> exp_if .)


state 56

    (109) expresion -> match_exp .

    MAS             reduce using rule 109 (expresion -> match_exp .)
    MENOS           reduce using rule 109 (expresion -> match_exp .)
    MULTI           reduce using rule 109 (expresion -> match_exp .)
    DIV             reduce using rule 109 (expresion -> match_exp .)
    MODULO          reduce using rule 109 (expresion -> match_exp .)
    PUNTO           reduce using rule 109 (expresion -> match_exp .)
    AS              reduce using rule 109 (expresion -> match_exp .)
    MAYOR           reduce using rule 109 (expresion -> match_exp .)
    MENOR           reduce using rule 109 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 109 (expresion -> match_exp .)
    MENOR_I         reduce using rule 109 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 109 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 109 (expresion -> match_exp .)
    OR              reduce using rule 109 (expresion -> match_exp .)
    AND             reduce using rule 109 (expresion -> match_exp .)
    LLV_I           reduce using rule 109 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 109 (expresion -> match_exp .)
    PAR_D           reduce using rule 109 (expresion -> match_exp .)
    COMA            reduce using rule 109 (expresion -> match_exp .)
    IGUAL           reduce using rule 109 (expresion -> match_exp .)
    LLV_D           reduce using rule 109 (expresion -> match_exp .)
    BARRA           reduce using rule 109 (expresion -> match_exp .)
    GUION_B         reduce using rule 109 (expresion -> match_exp .)
    INT             reduce using rule 109 (expresion -> match_exp .)
    FLOAT           reduce using rule 109 (expresion -> match_exp .)
    ABS             reduce using rule 109 (expresion -> match_exp .)
    SQRT            reduce using rule 109 (expresion -> match_exp .)
    ENTERO          reduce using rule 109 (expresion -> match_exp .)
    DECIMAL         reduce using rule 109 (expresion -> match_exp .)
    TRUE            reduce using rule 109 (expresion -> match_exp .)
    FALSE           reduce using rule 109 (expresion -> match_exp .)
    CHAR_S          reduce using rule 109 (expresion -> match_exp .)
    CADENA          reduce using rule 109 (expresion -> match_exp .)
    ID              reduce using rule 109 (expresion -> match_exp .)
    NOT             reduce using rule 109 (expresion -> match_exp .)
    PAR_I           reduce using rule 109 (expresion -> match_exp .)
    IF              reduce using rule 109 (expresion -> match_exp .)
    MATCH           reduce using rule 109 (expresion -> match_exp .)
    LOOP            reduce using rule 109 (expresion -> match_exp .)


state 57

    (110) expresion -> loop_exp .

    MAS             reduce using rule 110 (expresion -> loop_exp .)
    MENOS           reduce using rule 110 (expresion -> loop_exp .)
    MULTI           reduce using rule 110 (expresion -> loop_exp .)
    DIV             reduce using rule 110 (expresion -> loop_exp .)
    MODULO          reduce using rule 110 (expresion -> loop_exp .)
    PUNTO           reduce using rule 110 (expresion -> loop_exp .)
    AS              reduce using rule 110 (expresion -> loop_exp .)
    MAYOR           reduce using rule 110 (expresion -> loop_exp .)
    MENOR           reduce using rule 110 (expresion -> loop_exp .)
    MAYOR_I         reduce using rule 110 (expresion -> loop_exp .)
    MENOR_I         reduce using rule 110 (expresion -> loop_exp .)
    D_IGUAL         reduce using rule 110 (expresion -> loop_exp .)
    NO_IGUAL        reduce using rule 110 (expresion -> loop_exp .)
    OR              reduce using rule 110 (expresion -> loop_exp .)
    AND             reduce using rule 110 (expresion -> loop_exp .)
    LLV_I           reduce using rule 110 (expresion -> loop_exp .)
    PUNTOCOMA       reduce using rule 110 (expresion -> loop_exp .)
    PAR_D           reduce using rule 110 (expresion -> loop_exp .)
    COMA            reduce using rule 110 (expresion -> loop_exp .)
    IGUAL           reduce using rule 110 (expresion -> loop_exp .)
    LLV_D           reduce using rule 110 (expresion -> loop_exp .)
    BARRA           reduce using rule 110 (expresion -> loop_exp .)
    GUION_B         reduce using rule 110 (expresion -> loop_exp .)
    INT             reduce using rule 110 (expresion -> loop_exp .)
    FLOAT           reduce using rule 110 (expresion -> loop_exp .)
    ABS             reduce using rule 110 (expresion -> loop_exp .)
    SQRT            reduce using rule 110 (expresion -> loop_exp .)
    ENTERO          reduce using rule 110 (expresion -> loop_exp .)
    DECIMAL         reduce using rule 110 (expresion -> loop_exp .)
    TRUE            reduce using rule 110 (expresion -> loop_exp .)
    FALSE           reduce using rule 110 (expresion -> loop_exp .)
    CHAR_S          reduce using rule 110 (expresion -> loop_exp .)
    CADENA          reduce using rule 110 (expresion -> loop_exp .)
    ID              reduce using rule 110 (expresion -> loop_exp .)
    NOT             reduce using rule 110 (expresion -> loop_exp .)
    PAR_I           reduce using rule 110 (expresion -> loop_exp .)
    IF              reduce using rule 110 (expresion -> loop_exp .)
    MATCH           reduce using rule 110 (expresion -> loop_exp .)
    LOOP            reduce using rule 110 (expresion -> loop_exp .)


state 58

    (111) expresion -> llamada .

    MAS             reduce using rule 111 (expresion -> llamada .)
    MENOS           reduce using rule 111 (expresion -> llamada .)
    MULTI           reduce using rule 111 (expresion -> llamada .)
    DIV             reduce using rule 111 (expresion -> llamada .)
    MODULO          reduce using rule 111 (expresion -> llamada .)
    PUNTO           reduce using rule 111 (expresion -> llamada .)
    AS              reduce using rule 111 (expresion -> llamada .)
    MAYOR           reduce using rule 111 (expresion -> llamada .)
    MENOR           reduce using rule 111 (expresion -> llamada .)
    MAYOR_I         reduce using rule 111 (expresion -> llamada .)
    MENOR_I         reduce using rule 111 (expresion -> llamada .)
    D_IGUAL         reduce using rule 111 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 111 (expresion -> llamada .)
    OR              reduce using rule 111 (expresion -> llamada .)
    AND             reduce using rule 111 (expresion -> llamada .)
    LLV_I           reduce using rule 111 (expresion -> llamada .)
    PUNTOCOMA       reduce using rule 111 (expresion -> llamada .)
    PAR_D           reduce using rule 111 (expresion -> llamada .)
    COMA            reduce using rule 111 (expresion -> llamada .)
    IGUAL           reduce using rule 111 (expresion -> llamada .)
    LLV_D           reduce using rule 111 (expresion -> llamada .)
    BARRA           reduce using rule 111 (expresion -> llamada .)
    GUION_B         reduce using rule 111 (expresion -> llamada .)
    INT             reduce using rule 111 (expresion -> llamada .)
    FLOAT           reduce using rule 111 (expresion -> llamada .)
    ABS             reduce using rule 111 (expresion -> llamada .)
    SQRT            reduce using rule 111 (expresion -> llamada .)
    ENTERO          reduce using rule 111 (expresion -> llamada .)
    DECIMAL         reduce using rule 111 (expresion -> llamada .)
    TRUE            reduce using rule 111 (expresion -> llamada .)
    FALSE           reduce using rule 111 (expresion -> llamada .)
    CHAR_S          reduce using rule 111 (expresion -> llamada .)
    CADENA          reduce using rule 111 (expresion -> llamada .)
    ID              reduce using rule 111 (expresion -> llamada .)
    NOT             reduce using rule 111 (expresion -> llamada .)
    PAR_I           reduce using rule 111 (expresion -> llamada .)
    IF              reduce using rule 111 (expresion -> llamada .)
    MATCH           reduce using rule 111 (expresion -> llamada .)
    LOOP            reduce using rule 111 (expresion -> llamada .)


state 59

    (54) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 103
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 60

    (66) loop_exp -> LOOP . statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 64

    statement                      shift and go to state 104

state 61

    (44) match -> MATCH expresion . LLV_I case_list LLV_D
    (45) match -> MATCH expresion . LLV_I case_list default LLV_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 105
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 62

    (61) while -> WHILE expresion . statement
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95
    LLV_I           shift and go to state 64

    statement                      shift and go to state 106

state 63

    (65) loop -> LOOP statement .

    EJECUTAR        reduce using rule 65 (loop -> LOOP statement .)
    LET             reduce using rule 65 (loop -> LOOP statement .)
    ID              reduce using rule 65 (loop -> LOOP statement .)
    IF              reduce using rule 65 (loop -> LOOP statement .)
    MATCH           reduce using rule 65 (loop -> LOOP statement .)
    WHILE           reduce using rule 65 (loop -> LOOP statement .)
    LOOP            reduce using rule 65 (loop -> LOOP statement .)
    BREAK           reduce using rule 65 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 65 (loop -> LOOP statement .)
    RETURN          reduce using rule 65 (loop -> LOOP statement .)
    PRINT           reduce using rule 65 (loop -> LOOP statement .)
    FN              reduce using rule 65 (loop -> LOOP statement .)
    $end            reduce using rule 65 (loop -> LOOP statement .)
    LLV_D           reduce using rule 65 (loop -> LOOP statement .)


state 64

    (39) statement -> LLV_I . instrucciones LLV_D
    (40) statement -> LLV_I . LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . return PUNTOCOMA
    (13) instruccion -> . print PUNTOCOMA
    (14) instruccion -> . funcion
    (15) instruccion -> . llamada PUNTOCOMA
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D
    (61) while -> . WHILE expresion statement
    (65) loop -> . LOOP statement
    (62) break -> . BREAK PUNTOCOMA
    (63) break -> . BREAK expresion PUNTOCOMA
    (64) continue -> . CONTINUE PUNTOCOMA
    (31) return -> . RETURN expresion
    (32) return -> . RETURN
    (21) print -> . PRINT NOT PAR_I expresion PAR_D
    (22) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (25) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (26) funcion -> . FN ID PAR_I PAR_D statement
    (27) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    LLV_D           shift and go to state 108
    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 18
    IF              shift and go to state 19
    MATCH           shift and go to state 20
    WHILE           shift and go to state 21
    LOOP            shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    FN              shift and go to state 27

    instrucciones                  shift and go to state 107
    instruccion                    shift and go to state 3
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    print                          shift and go to state 13
    funcion                        shift and go to state 14
    llamada                        shift and go to state 15

state 65

    (62) break -> BREAK PUNTOCOMA .

    EJECUTAR        reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    LET             reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    ID              reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    IF              reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    MATCH           reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    WHILE           reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    LOOP            reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    BREAK           reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    CONTINUE        reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    RETURN          reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    PRINT           reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    FN              reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    $end            reduce using rule 62 (break -> BREAK PUNTOCOMA .)
    LLV_D           reduce using rule 62 (break -> BREAK PUNTOCOMA .)


state 66

    (63) break -> BREAK expresion . PUNTOCOMA
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       shift and go to state 109
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 67

    (64) continue -> CONTINUE PUNTOCOMA .

    EJECUTAR        reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    LET             reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    ID              reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    IF              reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    MATCH           reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    WHILE           reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    LOOP            reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    BREAK           reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    CONTINUE        reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    RETURN          reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    PRINT           reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    FN              reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    $end            reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)
    LLV_D           reduce using rule 64 (continue -> CONTINUE PUNTOCOMA .)


state 68

    (31) return -> RETURN expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 31 (return -> RETURN expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 69

    (21) print -> PRINT NOT . PAR_I expresion PAR_D
    (22) print -> PRINT NOT . PAR_I CADENA COMA exp_list PAR_D

    PAR_I           shift and go to state 110


state 70

    (25) funcion -> FN ID . PAR_I lista_param PAR_D statement
    (26) funcion -> FN ID . PAR_I PAR_D statement
    (27) funcion -> FN ID . PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> FN ID . PAR_I PAR_D MENOS MAYOR tipo statement

    PAR_I           shift and go to state 111


state 71

    (20) ejecutar -> EJECUTAR PAR_I expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 112
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 72

    (67) asignacion -> LET ID IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 113
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 73

    (69) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 114

state 74

    (68) asignacion -> LET MUT ID . IGUAL expresion
    (70) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 122
    D_PUNTO         shift and go to state 123


state 75

    (71) asignacion -> ID IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 71 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 71 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 76

    (33) llamada -> ID PAR_I PAR_D .

    PUNTOCOMA       reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MAS             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MENOS           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MULTI           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    DIV             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MODULO          reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    PUNTO           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    AS              reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MAYOR           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MENOR           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MAYOR_I         reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MENOR_I         reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    D_IGUAL         reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    OR              reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    AND             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    LLV_I           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    PAR_D           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    COMA            reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    IGUAL           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    LLV_D           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    BARRA           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    GUION_B         reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    INT             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    FLOAT           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    ABS             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    SQRT            reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    ENTERO          reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    DECIMAL         reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    TRUE            reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    FALSE           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    CHAR_S          reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    CADENA          reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    ID              reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    NOT             reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    PAR_I           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    IF              reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    MATCH           reduce using rule 33 (llamada -> ID PAR_I PAR_D .)
    LOOP            reduce using rule 33 (llamada -> ID PAR_I PAR_D .)


state 77

    (34) llamada -> ID PAR_I exp_list . PAR_D
    (23) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 124
    COMA            shift and go to state 125


state 78

    (24) exp_list -> expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           reduce using rule 24 (exp_list -> expresion .)
    COMA            reduce using rule 24 (exp_list -> expresion .)
    IGUAL           reduce using rule 24 (exp_list -> expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 79

    (41) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 126
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 80

    (35) if -> IF expresion statement .
    (36) if -> IF expresion statement . else
    (37) else -> . ELSE statement
    (38) else -> . ELSE if

    EJECUTAR        reduce using rule 35 (if -> IF expresion statement .)
    LET             reduce using rule 35 (if -> IF expresion statement .)
    ID              reduce using rule 35 (if -> IF expresion statement .)
    IF              reduce using rule 35 (if -> IF expresion statement .)
    MATCH           reduce using rule 35 (if -> IF expresion statement .)
    WHILE           reduce using rule 35 (if -> IF expresion statement .)
    LOOP            reduce using rule 35 (if -> IF expresion statement .)
    BREAK           reduce using rule 35 (if -> IF expresion statement .)
    CONTINUE        reduce using rule 35 (if -> IF expresion statement .)
    RETURN          reduce using rule 35 (if -> IF expresion statement .)
    PRINT           reduce using rule 35 (if -> IF expresion statement .)
    FN              reduce using rule 35 (if -> IF expresion statement .)
    $end            reduce using rule 35 (if -> IF expresion statement .)
    LLV_D           reduce using rule 35 (if -> IF expresion statement .)
    COMA            reduce using rule 35 (if -> IF expresion statement .)
    ELSE            shift and go to state 128

    else                           shift and go to state 127

state 81

    (79) expresion -> expresion MAS . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 129
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 82

    (80) expresion -> expresion MENOS . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 130
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 83

    (81) expresion -> expresion MULTI . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 131
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 84

    (82) expresion -> expresion DIV . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 132
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 85

    (83) expresion -> expresion MODULO . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 133
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 86

    (95) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D

    TO_STRING       shift and go to state 134


state 87

    (96) expresion -> expresion AS . tipo
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 135

state 88

    (98) expresion -> expresion MAYOR . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 136
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 89

    (99) expresion -> expresion MENOR . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 137
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 90

    (100) expresion -> expresion MAYOR_I . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 138
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 91

    (101) expresion -> expresion MENOR_I . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 139
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 92

    (102) expresion -> expresion D_IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 140
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 93

    (103) expresion -> expresion NO_IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 141
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 94

    (104) expresion -> expresion OR . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 142
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 95

    (105) expresion -> expresion AND . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 143
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 96

    (84) expresion -> MENOS expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 84 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 84 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 84 (expresion -> MENOS expresion .)
    DIV             reduce using rule 84 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 84 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 84 (expresion -> MENOS expresion .)
    AS              reduce using rule 84 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 84 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 84 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 84 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 84 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 84 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 84 (expresion -> MENOS expresion .)
    OR              reduce using rule 84 (expresion -> MENOS expresion .)
    AND             reduce using rule 84 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 84 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 84 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 84 (expresion -> MENOS expresion .)
    COMA            reduce using rule 84 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 84 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 84 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 84 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 84 (expresion -> MENOS expresion .)
    INT             reduce using rule 84 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 84 (expresion -> MENOS expresion .)
    ABS             reduce using rule 84 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 84 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 84 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 84 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 84 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 84 (expresion -> MENOS expresion .)
    CHAR_S          reduce using rule 84 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 84 (expresion -> MENOS expresion .)
    ID              reduce using rule 84 (expresion -> MENOS expresion .)
    NOT             reduce using rule 84 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 84 (expresion -> MENOS expresion .)
    IF              reduce using rule 84 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 84 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 84 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! MULTI           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! MODULO          [ shift and go to state 85 ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 97

    (85) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 144


state 98

    (107) expresion -> PAR_I expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 145
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 99

    (86) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 146


state 100

    (87) expresion -> ABS PAR_I . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 147
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 101

    (88) expresion -> SQRT PAR_I . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 148
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 102

    (106) expresion -> NOT expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 106 (expresion -> NOT expresion .)
    D_IGUAL         reduce using rule 106 (expresion -> NOT expresion .)
    OR              reduce using rule 106 (expresion -> NOT expresion .)
    AND             reduce using rule 106 (expresion -> NOT expresion .)
    LLV_I           reduce using rule 106 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 106 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 106 (expresion -> NOT expresion .)
    COMA            reduce using rule 106 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 106 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 106 (expresion -> NOT expresion .)
    BARRA           reduce using rule 106 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 106 (expresion -> NOT expresion .)
    INT             reduce using rule 106 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 106 (expresion -> NOT expresion .)
    ABS             reduce using rule 106 (expresion -> NOT expresion .)
    SQRT            reduce using rule 106 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 106 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 106 (expresion -> NOT expresion .)
    TRUE            reduce using rule 106 (expresion -> NOT expresion .)
    FALSE           reduce using rule 106 (expresion -> NOT expresion .)
    CHAR_S          reduce using rule 106 (expresion -> NOT expresion .)
    CADENA          reduce using rule 106 (expresion -> NOT expresion .)
    ID              reduce using rule 106 (expresion -> NOT expresion .)
    NOT             reduce using rule 106 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 106 (expresion -> NOT expresion .)
    IF              reduce using rule 106 (expresion -> NOT expresion .)
    MATCH           reduce using rule 106 (expresion -> NOT expresion .)
    LOOP            reduce using rule 106 (expresion -> NOT expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    NO_IGUAL        shift and go to state 93

  ! MAS             [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! PUNTO           [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 106 (expresion -> NOT expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 103

    (54) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (55) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_I           shift and go to state 149
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 104

    (66) loop_exp -> LOOP statement .

    MAS             reduce using rule 66 (loop_exp -> LOOP statement .)
    MENOS           reduce using rule 66 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 66 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 66 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 66 (loop_exp -> LOOP statement .)
    PUNTO           reduce using rule 66 (loop_exp -> LOOP statement .)
    AS              reduce using rule 66 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 66 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 66 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 66 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 66 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 66 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 66 (loop_exp -> LOOP statement .)
    OR              reduce using rule 66 (loop_exp -> LOOP statement .)
    AND             reduce using rule 66 (loop_exp -> LOOP statement .)
    LLV_I           reduce using rule 66 (loop_exp -> LOOP statement .)
    PUNTOCOMA       reduce using rule 66 (loop_exp -> LOOP statement .)
    PAR_D           reduce using rule 66 (loop_exp -> LOOP statement .)
    COMA            reduce using rule 66 (loop_exp -> LOOP statement .)
    IGUAL           reduce using rule 66 (loop_exp -> LOOP statement .)
    LLV_D           reduce using rule 66 (loop_exp -> LOOP statement .)
    BARRA           reduce using rule 66 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 66 (loop_exp -> LOOP statement .)
    INT             reduce using rule 66 (loop_exp -> LOOP statement .)
    FLOAT           reduce using rule 66 (loop_exp -> LOOP statement .)
    ABS             reduce using rule 66 (loop_exp -> LOOP statement .)
    SQRT            reduce using rule 66 (loop_exp -> LOOP statement .)
    ENTERO          reduce using rule 66 (loop_exp -> LOOP statement .)
    DECIMAL         reduce using rule 66 (loop_exp -> LOOP statement .)
    TRUE            reduce using rule 66 (loop_exp -> LOOP statement .)
    FALSE           reduce using rule 66 (loop_exp -> LOOP statement .)
    CHAR_S          reduce using rule 66 (loop_exp -> LOOP statement .)
    CADENA          reduce using rule 66 (loop_exp -> LOOP statement .)
    ID              reduce using rule 66 (loop_exp -> LOOP statement .)
    NOT             reduce using rule 66 (loop_exp -> LOOP statement .)
    PAR_I           reduce using rule 66 (loop_exp -> LOOP statement .)
    IF              reduce using rule 66 (loop_exp -> LOOP statement .)
    MATCH           reduce using rule 66 (loop_exp -> LOOP statement .)
    LOOP            reduce using rule 66 (loop_exp -> LOOP statement .)


state 105

    (44) match -> MATCH expresion LLV_I . case_list LLV_D
    (45) match -> MATCH expresion LLV_I . case_list default LLV_D
    (46) case_list -> . case_list case
    (47) case_list -> . case
    (48) case -> . exp_list IGUAL MAYOR statement
    (49) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (23) exp_list -> . exp_list COMA expresion
    (24) exp_list -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 78
    case_list                      shift and go to state 150
    case                           shift and go to state 151
    exp_list                       shift and go to state 152
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 106

    (61) while -> WHILE expresion statement .

    EJECUTAR        reduce using rule 61 (while -> WHILE expresion statement .)
    LET             reduce using rule 61 (while -> WHILE expresion statement .)
    ID              reduce using rule 61 (while -> WHILE expresion statement .)
    IF              reduce using rule 61 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 61 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 61 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 61 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 61 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 61 (while -> WHILE expresion statement .)
    RETURN          reduce using rule 61 (while -> WHILE expresion statement .)
    PRINT           reduce using rule 61 (while -> WHILE expresion statement .)
    FN              reduce using rule 61 (while -> WHILE expresion statement .)
    $end            reduce using rule 61 (while -> WHILE expresion statement .)
    LLV_D           reduce using rule 61 (while -> WHILE expresion statement .)


state 107

    (39) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . return PUNTOCOMA
    (13) instruccion -> . print PUNTOCOMA
    (14) instruccion -> . funcion
    (15) instruccion -> . llamada PUNTOCOMA
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D
    (61) while -> . WHILE expresion statement
    (65) loop -> . LOOP statement
    (62) break -> . BREAK PUNTOCOMA
    (63) break -> . BREAK expresion PUNTOCOMA
    (64) continue -> . CONTINUE PUNTOCOMA
    (31) return -> . RETURN expresion
    (32) return -> . RETURN
    (21) print -> . PRINT NOT PAR_I expresion PAR_D
    (22) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (25) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (26) funcion -> . FN ID PAR_I PAR_D statement
    (27) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    LLV_D           shift and go to state 153
    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 18
    IF              shift and go to state 19
    MATCH           shift and go to state 20
    WHILE           shift and go to state 21
    LOOP            shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    FN              shift and go to state 27

    instruccion                    shift and go to state 28
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    print                          shift and go to state 13
    funcion                        shift and go to state 14
    llamada                        shift and go to state 15

state 108

    (40) statement -> LLV_I LLV_D .

    EJECUTAR        reduce using rule 40 (statement -> LLV_I LLV_D .)
    LET             reduce using rule 40 (statement -> LLV_I LLV_D .)
    ID              reduce using rule 40 (statement -> LLV_I LLV_D .)
    IF              reduce using rule 40 (statement -> LLV_I LLV_D .)
    MATCH           reduce using rule 40 (statement -> LLV_I LLV_D .)
    WHILE           reduce using rule 40 (statement -> LLV_I LLV_D .)
    LOOP            reduce using rule 40 (statement -> LLV_I LLV_D .)
    BREAK           reduce using rule 40 (statement -> LLV_I LLV_D .)
    CONTINUE        reduce using rule 40 (statement -> LLV_I LLV_D .)
    RETURN          reduce using rule 40 (statement -> LLV_I LLV_D .)
    PRINT           reduce using rule 40 (statement -> LLV_I LLV_D .)
    FN              reduce using rule 40 (statement -> LLV_I LLV_D .)
    $end            reduce using rule 40 (statement -> LLV_I LLV_D .)
    LLV_D           reduce using rule 40 (statement -> LLV_I LLV_D .)
    ELSE            reduce using rule 40 (statement -> LLV_I LLV_D .)
    COMA            reduce using rule 40 (statement -> LLV_I LLV_D .)
    MAS             reduce using rule 40 (statement -> LLV_I LLV_D .)
    MENOS           reduce using rule 40 (statement -> LLV_I LLV_D .)
    MULTI           reduce using rule 40 (statement -> LLV_I LLV_D .)
    DIV             reduce using rule 40 (statement -> LLV_I LLV_D .)
    MODULO          reduce using rule 40 (statement -> LLV_I LLV_D .)
    PUNTO           reduce using rule 40 (statement -> LLV_I LLV_D .)
    AS              reduce using rule 40 (statement -> LLV_I LLV_D .)
    MAYOR           reduce using rule 40 (statement -> LLV_I LLV_D .)
    MENOR           reduce using rule 40 (statement -> LLV_I LLV_D .)
    MAYOR_I         reduce using rule 40 (statement -> LLV_I LLV_D .)
    MENOR_I         reduce using rule 40 (statement -> LLV_I LLV_D .)
    D_IGUAL         reduce using rule 40 (statement -> LLV_I LLV_D .)
    NO_IGUAL        reduce using rule 40 (statement -> LLV_I LLV_D .)
    OR              reduce using rule 40 (statement -> LLV_I LLV_D .)
    AND             reduce using rule 40 (statement -> LLV_I LLV_D .)
    LLV_I           reduce using rule 40 (statement -> LLV_I LLV_D .)
    PUNTOCOMA       reduce using rule 40 (statement -> LLV_I LLV_D .)
    PAR_D           reduce using rule 40 (statement -> LLV_I LLV_D .)
    IGUAL           reduce using rule 40 (statement -> LLV_I LLV_D .)
    BARRA           reduce using rule 40 (statement -> LLV_I LLV_D .)
    GUION_B         reduce using rule 40 (statement -> LLV_I LLV_D .)
    INT             reduce using rule 40 (statement -> LLV_I LLV_D .)
    FLOAT           reduce using rule 40 (statement -> LLV_I LLV_D .)
    ABS             reduce using rule 40 (statement -> LLV_I LLV_D .)
    SQRT            reduce using rule 40 (statement -> LLV_I LLV_D .)
    ENTERO          reduce using rule 40 (statement -> LLV_I LLV_D .)
    DECIMAL         reduce using rule 40 (statement -> LLV_I LLV_D .)
    TRUE            reduce using rule 40 (statement -> LLV_I LLV_D .)
    FALSE           reduce using rule 40 (statement -> LLV_I LLV_D .)
    CHAR_S          reduce using rule 40 (statement -> LLV_I LLV_D .)
    CADENA          reduce using rule 40 (statement -> LLV_I LLV_D .)
    NOT             reduce using rule 40 (statement -> LLV_I LLV_D .)
    PAR_I           reduce using rule 40 (statement -> LLV_I LLV_D .)


state 109

    (63) break -> BREAK expresion PUNTOCOMA .

    EJECUTAR        reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    LET             reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    ID              reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    IF              reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    MATCH           reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    WHILE           reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    LOOP            reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    BREAK           reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    RETURN          reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    PRINT           reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    FN              reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    $end            reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)
    LLV_D           reduce using rule 63 (break -> BREAK expresion PUNTOCOMA .)


state 110

    (21) print -> PRINT NOT PAR_I . expresion PAR_D
    (22) print -> PRINT NOT PAR_I . CADENA COMA exp_list PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    CADENA          shift and go to state 155
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 154
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 111

    (25) funcion -> FN ID PAR_I . lista_param PAR_D statement
    (26) funcion -> FN ID PAR_I . PAR_D statement
    (27) funcion -> FN ID PAR_I . lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> FN ID PAR_I . PAR_D MENOS MAYOR tipo statement
    (29) lista_param -> . lista_param COMA ID D_PUNTO tipo
    (30) lista_param -> . ID D_PUNTO tipo

    PAR_D           shift and go to state 158
    ID              shift and go to state 156

    lista_param                    shift and go to state 157

state 112

    (20) ejecutar -> EJECUTAR PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 20 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)
    COMA            reduce using rule 20 (ejecutar -> EJECUTAR PAR_I expresion PAR_D .)


state 113

    (67) asignacion -> LET ID IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 67 (asignacion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 67 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 114

    (69) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 159


state 115

    (72) tipo -> INT .

    IGUAL           reduce using rule 72 (tipo -> INT .)
    MAS             reduce using rule 72 (tipo -> INT .)
    MENOS           reduce using rule 72 (tipo -> INT .)
    MULTI           reduce using rule 72 (tipo -> INT .)
    DIV             reduce using rule 72 (tipo -> INT .)
    MODULO          reduce using rule 72 (tipo -> INT .)
    PUNTO           reduce using rule 72 (tipo -> INT .)
    AS              reduce using rule 72 (tipo -> INT .)
    MAYOR           reduce using rule 72 (tipo -> INT .)
    MENOR           reduce using rule 72 (tipo -> INT .)
    MAYOR_I         reduce using rule 72 (tipo -> INT .)
    MENOR_I         reduce using rule 72 (tipo -> INT .)
    D_IGUAL         reduce using rule 72 (tipo -> INT .)
    NO_IGUAL        reduce using rule 72 (tipo -> INT .)
    OR              reduce using rule 72 (tipo -> INT .)
    AND             reduce using rule 72 (tipo -> INT .)
    LLV_I           reduce using rule 72 (tipo -> INT .)
    PUNTOCOMA       reduce using rule 72 (tipo -> INT .)
    PAR_D           reduce using rule 72 (tipo -> INT .)
    COMA            reduce using rule 72 (tipo -> INT .)
    LLV_D           reduce using rule 72 (tipo -> INT .)
    BARRA           reduce using rule 72 (tipo -> INT .)
    GUION_B         reduce using rule 72 (tipo -> INT .)
    INT             reduce using rule 72 (tipo -> INT .)
    FLOAT           reduce using rule 72 (tipo -> INT .)
    ABS             reduce using rule 72 (tipo -> INT .)
    SQRT            reduce using rule 72 (tipo -> INT .)
    ENTERO          reduce using rule 72 (tipo -> INT .)
    DECIMAL         reduce using rule 72 (tipo -> INT .)
    TRUE            reduce using rule 72 (tipo -> INT .)
    FALSE           reduce using rule 72 (tipo -> INT .)
    CHAR_S          reduce using rule 72 (tipo -> INT .)
    CADENA          reduce using rule 72 (tipo -> INT .)
    ID              reduce using rule 72 (tipo -> INT .)
    NOT             reduce using rule 72 (tipo -> INT .)
    PAR_I           reduce using rule 72 (tipo -> INT .)
    IF              reduce using rule 72 (tipo -> INT .)
    MATCH           reduce using rule 72 (tipo -> INT .)
    LOOP            reduce using rule 72 (tipo -> INT .)


state 116

    (73) tipo -> FLOAT .

    IGUAL           reduce using rule 73 (tipo -> FLOAT .)
    MAS             reduce using rule 73 (tipo -> FLOAT .)
    MENOS           reduce using rule 73 (tipo -> FLOAT .)
    MULTI           reduce using rule 73 (tipo -> FLOAT .)
    DIV             reduce using rule 73 (tipo -> FLOAT .)
    MODULO          reduce using rule 73 (tipo -> FLOAT .)
    PUNTO           reduce using rule 73 (tipo -> FLOAT .)
    AS              reduce using rule 73 (tipo -> FLOAT .)
    MAYOR           reduce using rule 73 (tipo -> FLOAT .)
    MENOR           reduce using rule 73 (tipo -> FLOAT .)
    MAYOR_I         reduce using rule 73 (tipo -> FLOAT .)
    MENOR_I         reduce using rule 73 (tipo -> FLOAT .)
    D_IGUAL         reduce using rule 73 (tipo -> FLOAT .)
    NO_IGUAL        reduce using rule 73 (tipo -> FLOAT .)
    OR              reduce using rule 73 (tipo -> FLOAT .)
    AND             reduce using rule 73 (tipo -> FLOAT .)
    LLV_I           reduce using rule 73 (tipo -> FLOAT .)
    PUNTOCOMA       reduce using rule 73 (tipo -> FLOAT .)
    PAR_D           reduce using rule 73 (tipo -> FLOAT .)
    COMA            reduce using rule 73 (tipo -> FLOAT .)
    LLV_D           reduce using rule 73 (tipo -> FLOAT .)
    BARRA           reduce using rule 73 (tipo -> FLOAT .)
    GUION_B         reduce using rule 73 (tipo -> FLOAT .)
    INT             reduce using rule 73 (tipo -> FLOAT .)
    FLOAT           reduce using rule 73 (tipo -> FLOAT .)
    ABS             reduce using rule 73 (tipo -> FLOAT .)
    SQRT            reduce using rule 73 (tipo -> FLOAT .)
    ENTERO          reduce using rule 73 (tipo -> FLOAT .)
    DECIMAL         reduce using rule 73 (tipo -> FLOAT .)
    TRUE            reduce using rule 73 (tipo -> FLOAT .)
    FALSE           reduce using rule 73 (tipo -> FLOAT .)
    CHAR_S          reduce using rule 73 (tipo -> FLOAT .)
    CADENA          reduce using rule 73 (tipo -> FLOAT .)
    ID              reduce using rule 73 (tipo -> FLOAT .)
    NOT             reduce using rule 73 (tipo -> FLOAT .)
    PAR_I           reduce using rule 73 (tipo -> FLOAT .)
    IF              reduce using rule 73 (tipo -> FLOAT .)
    MATCH           reduce using rule 73 (tipo -> FLOAT .)
    LOOP            reduce using rule 73 (tipo -> FLOAT .)


state 117

    (74) tipo -> BOOL .

    IGUAL           reduce using rule 74 (tipo -> BOOL .)
    MAS             reduce using rule 74 (tipo -> BOOL .)
    MENOS           reduce using rule 74 (tipo -> BOOL .)
    MULTI           reduce using rule 74 (tipo -> BOOL .)
    DIV             reduce using rule 74 (tipo -> BOOL .)
    MODULO          reduce using rule 74 (tipo -> BOOL .)
    PUNTO           reduce using rule 74 (tipo -> BOOL .)
    AS              reduce using rule 74 (tipo -> BOOL .)
    MAYOR           reduce using rule 74 (tipo -> BOOL .)
    MENOR           reduce using rule 74 (tipo -> BOOL .)
    MAYOR_I         reduce using rule 74 (tipo -> BOOL .)
    MENOR_I         reduce using rule 74 (tipo -> BOOL .)
    D_IGUAL         reduce using rule 74 (tipo -> BOOL .)
    NO_IGUAL        reduce using rule 74 (tipo -> BOOL .)
    OR              reduce using rule 74 (tipo -> BOOL .)
    AND             reduce using rule 74 (tipo -> BOOL .)
    LLV_I           reduce using rule 74 (tipo -> BOOL .)
    PUNTOCOMA       reduce using rule 74 (tipo -> BOOL .)
    PAR_D           reduce using rule 74 (tipo -> BOOL .)
    COMA            reduce using rule 74 (tipo -> BOOL .)
    LLV_D           reduce using rule 74 (tipo -> BOOL .)
    BARRA           reduce using rule 74 (tipo -> BOOL .)
    GUION_B         reduce using rule 74 (tipo -> BOOL .)
    INT             reduce using rule 74 (tipo -> BOOL .)
    FLOAT           reduce using rule 74 (tipo -> BOOL .)
    ABS             reduce using rule 74 (tipo -> BOOL .)
    SQRT            reduce using rule 74 (tipo -> BOOL .)
    ENTERO          reduce using rule 74 (tipo -> BOOL .)
    DECIMAL         reduce using rule 74 (tipo -> BOOL .)
    TRUE            reduce using rule 74 (tipo -> BOOL .)
    FALSE           reduce using rule 74 (tipo -> BOOL .)
    CHAR_S          reduce using rule 74 (tipo -> BOOL .)
    CADENA          reduce using rule 74 (tipo -> BOOL .)
    ID              reduce using rule 74 (tipo -> BOOL .)
    NOT             reduce using rule 74 (tipo -> BOOL .)
    PAR_I           reduce using rule 74 (tipo -> BOOL .)
    IF              reduce using rule 74 (tipo -> BOOL .)
    MATCH           reduce using rule 74 (tipo -> BOOL .)
    LOOP            reduce using rule 74 (tipo -> BOOL .)


state 118

    (75) tipo -> AMP . STR

    STR             shift and go to state 160


state 119

    (76) tipo -> STRING .

    IGUAL           reduce using rule 76 (tipo -> STRING .)
    MAS             reduce using rule 76 (tipo -> STRING .)
    MENOS           reduce using rule 76 (tipo -> STRING .)
    MULTI           reduce using rule 76 (tipo -> STRING .)
    DIV             reduce using rule 76 (tipo -> STRING .)
    MODULO          reduce using rule 76 (tipo -> STRING .)
    PUNTO           reduce using rule 76 (tipo -> STRING .)
    AS              reduce using rule 76 (tipo -> STRING .)
    MAYOR           reduce using rule 76 (tipo -> STRING .)
    MENOR           reduce using rule 76 (tipo -> STRING .)
    MAYOR_I         reduce using rule 76 (tipo -> STRING .)
    MENOR_I         reduce using rule 76 (tipo -> STRING .)
    D_IGUAL         reduce using rule 76 (tipo -> STRING .)
    NO_IGUAL        reduce using rule 76 (tipo -> STRING .)
    OR              reduce using rule 76 (tipo -> STRING .)
    AND             reduce using rule 76 (tipo -> STRING .)
    LLV_I           reduce using rule 76 (tipo -> STRING .)
    PUNTOCOMA       reduce using rule 76 (tipo -> STRING .)
    PAR_D           reduce using rule 76 (tipo -> STRING .)
    COMA            reduce using rule 76 (tipo -> STRING .)
    LLV_D           reduce using rule 76 (tipo -> STRING .)
    BARRA           reduce using rule 76 (tipo -> STRING .)
    GUION_B         reduce using rule 76 (tipo -> STRING .)
    INT             reduce using rule 76 (tipo -> STRING .)
    FLOAT           reduce using rule 76 (tipo -> STRING .)
    ABS             reduce using rule 76 (tipo -> STRING .)
    SQRT            reduce using rule 76 (tipo -> STRING .)
    ENTERO          reduce using rule 76 (tipo -> STRING .)
    DECIMAL         reduce using rule 76 (tipo -> STRING .)
    TRUE            reduce using rule 76 (tipo -> STRING .)
    FALSE           reduce using rule 76 (tipo -> STRING .)
    CHAR_S          reduce using rule 76 (tipo -> STRING .)
    CADENA          reduce using rule 76 (tipo -> STRING .)
    ID              reduce using rule 76 (tipo -> STRING .)
    NOT             reduce using rule 76 (tipo -> STRING .)
    PAR_I           reduce using rule 76 (tipo -> STRING .)
    IF              reduce using rule 76 (tipo -> STRING .)
    MATCH           reduce using rule 76 (tipo -> STRING .)
    LOOP            reduce using rule 76 (tipo -> STRING .)


state 120

    (77) tipo -> CHAR .

    IGUAL           reduce using rule 77 (tipo -> CHAR .)
    MAS             reduce using rule 77 (tipo -> CHAR .)
    MENOS           reduce using rule 77 (tipo -> CHAR .)
    MULTI           reduce using rule 77 (tipo -> CHAR .)
    DIV             reduce using rule 77 (tipo -> CHAR .)
    MODULO          reduce using rule 77 (tipo -> CHAR .)
    PUNTO           reduce using rule 77 (tipo -> CHAR .)
    AS              reduce using rule 77 (tipo -> CHAR .)
    MAYOR           reduce using rule 77 (tipo -> CHAR .)
    MENOR           reduce using rule 77 (tipo -> CHAR .)
    MAYOR_I         reduce using rule 77 (tipo -> CHAR .)
    MENOR_I         reduce using rule 77 (tipo -> CHAR .)
    D_IGUAL         reduce using rule 77 (tipo -> CHAR .)
    NO_IGUAL        reduce using rule 77 (tipo -> CHAR .)
    OR              reduce using rule 77 (tipo -> CHAR .)
    AND             reduce using rule 77 (tipo -> CHAR .)
    LLV_I           reduce using rule 77 (tipo -> CHAR .)
    PUNTOCOMA       reduce using rule 77 (tipo -> CHAR .)
    PAR_D           reduce using rule 77 (tipo -> CHAR .)
    COMA            reduce using rule 77 (tipo -> CHAR .)
    LLV_D           reduce using rule 77 (tipo -> CHAR .)
    BARRA           reduce using rule 77 (tipo -> CHAR .)
    GUION_B         reduce using rule 77 (tipo -> CHAR .)
    INT             reduce using rule 77 (tipo -> CHAR .)
    FLOAT           reduce using rule 77 (tipo -> CHAR .)
    ABS             reduce using rule 77 (tipo -> CHAR .)
    SQRT            reduce using rule 77 (tipo -> CHAR .)
    ENTERO          reduce using rule 77 (tipo -> CHAR .)
    DECIMAL         reduce using rule 77 (tipo -> CHAR .)
    TRUE            reduce using rule 77 (tipo -> CHAR .)
    FALSE           reduce using rule 77 (tipo -> CHAR .)
    CHAR_S          reduce using rule 77 (tipo -> CHAR .)
    CADENA          reduce using rule 77 (tipo -> CHAR .)
    ID              reduce using rule 77 (tipo -> CHAR .)
    NOT             reduce using rule 77 (tipo -> CHAR .)
    PAR_I           reduce using rule 77 (tipo -> CHAR .)
    IF              reduce using rule 77 (tipo -> CHAR .)
    MATCH           reduce using rule 77 (tipo -> CHAR .)
    LOOP            reduce using rule 77 (tipo -> CHAR .)


state 121

    (78) tipo -> VOID .

    IGUAL           reduce using rule 78 (tipo -> VOID .)
    MAS             reduce using rule 78 (tipo -> VOID .)
    MENOS           reduce using rule 78 (tipo -> VOID .)
    MULTI           reduce using rule 78 (tipo -> VOID .)
    DIV             reduce using rule 78 (tipo -> VOID .)
    MODULO          reduce using rule 78 (tipo -> VOID .)
    PUNTO           reduce using rule 78 (tipo -> VOID .)
    AS              reduce using rule 78 (tipo -> VOID .)
    MAYOR           reduce using rule 78 (tipo -> VOID .)
    MENOR           reduce using rule 78 (tipo -> VOID .)
    MAYOR_I         reduce using rule 78 (tipo -> VOID .)
    MENOR_I         reduce using rule 78 (tipo -> VOID .)
    D_IGUAL         reduce using rule 78 (tipo -> VOID .)
    NO_IGUAL        reduce using rule 78 (tipo -> VOID .)
    OR              reduce using rule 78 (tipo -> VOID .)
    AND             reduce using rule 78 (tipo -> VOID .)
    LLV_I           reduce using rule 78 (tipo -> VOID .)
    PUNTOCOMA       reduce using rule 78 (tipo -> VOID .)
    PAR_D           reduce using rule 78 (tipo -> VOID .)
    COMA            reduce using rule 78 (tipo -> VOID .)
    LLV_D           reduce using rule 78 (tipo -> VOID .)
    BARRA           reduce using rule 78 (tipo -> VOID .)
    GUION_B         reduce using rule 78 (tipo -> VOID .)
    INT             reduce using rule 78 (tipo -> VOID .)
    FLOAT           reduce using rule 78 (tipo -> VOID .)
    ABS             reduce using rule 78 (tipo -> VOID .)
    SQRT            reduce using rule 78 (tipo -> VOID .)
    ENTERO          reduce using rule 78 (tipo -> VOID .)
    DECIMAL         reduce using rule 78 (tipo -> VOID .)
    TRUE            reduce using rule 78 (tipo -> VOID .)
    FALSE           reduce using rule 78 (tipo -> VOID .)
    CHAR_S          reduce using rule 78 (tipo -> VOID .)
    CADENA          reduce using rule 78 (tipo -> VOID .)
    ID              reduce using rule 78 (tipo -> VOID .)
    NOT             reduce using rule 78 (tipo -> VOID .)
    PAR_I           reduce using rule 78 (tipo -> VOID .)
    IF              reduce using rule 78 (tipo -> VOID .)
    MATCH           reduce using rule 78 (tipo -> VOID .)
    LOOP            reduce using rule 78 (tipo -> VOID .)


state 122

    (68) asignacion -> LET MUT ID IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 161
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 123

    (70) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 162

state 124

    (34) llamada -> ID PAR_I exp_list PAR_D .

    PUNTOCOMA       reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MAS             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOS           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MULTI           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    DIV             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MODULO          reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    PUNTO           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    AS              reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MAYOR           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOR           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MAYOR_I         reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MENOR_I         reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    D_IGUAL         reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    NO_IGUAL        reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    OR              reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    AND             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    LLV_I           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    PAR_D           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    COMA            reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    IGUAL           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    LLV_D           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    BARRA           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    GUION_B         reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    INT             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    FLOAT           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    ABS             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    SQRT            reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    ENTERO          reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    DECIMAL         reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    TRUE            reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    FALSE           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    CHAR_S          reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    CADENA          reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    ID              reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    NOT             reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    PAR_I           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    IF              reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    MATCH           reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)
    LOOP            reduce using rule 34 (llamada -> ID PAR_I exp_list PAR_D .)


state 125

    (23) exp_list -> exp_list COMA . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 163
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 126

    (41) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 164
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 127

    (36) if -> IF expresion statement else .

    EJECUTAR        reduce using rule 36 (if -> IF expresion statement else .)
    LET             reduce using rule 36 (if -> IF expresion statement else .)
    ID              reduce using rule 36 (if -> IF expresion statement else .)
    IF              reduce using rule 36 (if -> IF expresion statement else .)
    MATCH           reduce using rule 36 (if -> IF expresion statement else .)
    WHILE           reduce using rule 36 (if -> IF expresion statement else .)
    LOOP            reduce using rule 36 (if -> IF expresion statement else .)
    BREAK           reduce using rule 36 (if -> IF expresion statement else .)
    CONTINUE        reduce using rule 36 (if -> IF expresion statement else .)
    RETURN          reduce using rule 36 (if -> IF expresion statement else .)
    PRINT           reduce using rule 36 (if -> IF expresion statement else .)
    FN              reduce using rule 36 (if -> IF expresion statement else .)
    $end            reduce using rule 36 (if -> IF expresion statement else .)
    LLV_D           reduce using rule 36 (if -> IF expresion statement else .)
    COMA            reduce using rule 36 (if -> IF expresion statement else .)


state 128

    (37) else -> ELSE . statement
    (38) else -> ELSE . if
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else

    LLV_I           shift and go to state 64
    IF              shift and go to state 19

    statement                      shift and go to state 165
    if                             shift and go to state 166

state 129

    (79) expresion -> expresion MAS expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 79 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 79 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 79 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 79 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 79 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 79 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 79 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 79 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 79 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 79 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 79 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 79 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 79 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 79 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 79 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 79 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 79 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 79 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 79 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 79 (expresion -> expresion MAS expresion .)
    ABS             reduce using rule 79 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 79 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 79 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 79 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 79 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 79 (expresion -> expresion MAS expresion .)
    CHAR_S          reduce using rule 79 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 79 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 79 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 79 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 79 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 79 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 79 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 79 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MULTI           [ reduce using rule 79 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ reduce using rule 79 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 130

    (80) expresion -> expresion MENOS expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 80 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 80 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 80 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 80 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 80 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 80 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 80 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 80 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    ABS             reduce using rule 80 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 80 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 80 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 80 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 80 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    CHAR_S          reduce using rule 80 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 80 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 80 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 80 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 80 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 80 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MULTI           [ reduce using rule 80 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 80 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 80 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 131

    (81) expresion -> expresion MULTI expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 81 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 81 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 81 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 81 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 81 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 81 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    ABS             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    SQRT            reduce using rule 81 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 81 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 81 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 81 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    CHAR_S          reduce using rule 81 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 81 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 81 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 81 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 81 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 81 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MODULO          [ reduce using rule 81 (expresion -> expresion MULTI expresion .) ]
  ! PUNTO           [ reduce using rule 81 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! MULTI           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 132

    (82) expresion -> expresion DIV expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 82 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 82 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 82 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 82 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 82 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 82 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 82 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 82 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 82 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 82 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 82 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 82 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 82 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 82 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 82 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 82 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 82 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 82 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 82 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 82 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 82 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 82 (expresion -> expresion DIV expresion .)
    ABS             reduce using rule 82 (expresion -> expresion DIV expresion .)
    SQRT            reduce using rule 82 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 82 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 82 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 82 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 82 (expresion -> expresion DIV expresion .)
    CHAR_S          reduce using rule 82 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 82 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 82 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 82 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 82 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 82 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 82 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 82 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MODULO          [ reduce using rule 82 (expresion -> expresion DIV expresion .) ]
  ! PUNTO           [ reduce using rule 82 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! MULTI           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 133

    (83) expresion -> expresion MODULO expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    MAS             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 83 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    ABS             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    SQRT            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CHAR_S          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PUNTO           shift and go to state 86

  ! PUNTO           [ reduce using rule 83 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 81 ]
  ! MENOS           [ shift and go to state 82 ]
  ! MULTI           [ shift and go to state 83 ]
  ! DIV             [ shift and go to state 84 ]
  ! MODULO          [ shift and go to state 85 ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 134

    (95) expresion -> expresion PUNTO TO_STRING . PAR_I PAR_D

    PAR_I           shift and go to state 167


state 135

    (96) expresion -> expresion AS tipo .

    MAS             reduce using rule 96 (expresion -> expresion AS tipo .)
    MENOS           reduce using rule 96 (expresion -> expresion AS tipo .)
    MULTI           reduce using rule 96 (expresion -> expresion AS tipo .)
    DIV             reduce using rule 96 (expresion -> expresion AS tipo .)
    MODULO          reduce using rule 96 (expresion -> expresion AS tipo .)
    PUNTO           reduce using rule 96 (expresion -> expresion AS tipo .)
    AS              reduce using rule 96 (expresion -> expresion AS tipo .)
    MAYOR           reduce using rule 96 (expresion -> expresion AS tipo .)
    MENOR           reduce using rule 96 (expresion -> expresion AS tipo .)
    MAYOR_I         reduce using rule 96 (expresion -> expresion AS tipo .)
    MENOR_I         reduce using rule 96 (expresion -> expresion AS tipo .)
    D_IGUAL         reduce using rule 96 (expresion -> expresion AS tipo .)
    NO_IGUAL        reduce using rule 96 (expresion -> expresion AS tipo .)
    OR              reduce using rule 96 (expresion -> expresion AS tipo .)
    AND             reduce using rule 96 (expresion -> expresion AS tipo .)
    LLV_I           reduce using rule 96 (expresion -> expresion AS tipo .)
    PUNTOCOMA       reduce using rule 96 (expresion -> expresion AS tipo .)
    PAR_D           reduce using rule 96 (expresion -> expresion AS tipo .)
    COMA            reduce using rule 96 (expresion -> expresion AS tipo .)
    IGUAL           reduce using rule 96 (expresion -> expresion AS tipo .)
    LLV_D           reduce using rule 96 (expresion -> expresion AS tipo .)
    BARRA           reduce using rule 96 (expresion -> expresion AS tipo .)
    GUION_B         reduce using rule 96 (expresion -> expresion AS tipo .)
    INT             reduce using rule 96 (expresion -> expresion AS tipo .)
    FLOAT           reduce using rule 96 (expresion -> expresion AS tipo .)
    ABS             reduce using rule 96 (expresion -> expresion AS tipo .)
    SQRT            reduce using rule 96 (expresion -> expresion AS tipo .)
    ENTERO          reduce using rule 96 (expresion -> expresion AS tipo .)
    DECIMAL         reduce using rule 96 (expresion -> expresion AS tipo .)
    TRUE            reduce using rule 96 (expresion -> expresion AS tipo .)
    FALSE           reduce using rule 96 (expresion -> expresion AS tipo .)
    CHAR_S          reduce using rule 96 (expresion -> expresion AS tipo .)
    CADENA          reduce using rule 96 (expresion -> expresion AS tipo .)
    ID              reduce using rule 96 (expresion -> expresion AS tipo .)
    NOT             reduce using rule 96 (expresion -> expresion AS tipo .)
    PAR_I           reduce using rule 96 (expresion -> expresion AS tipo .)
    IF              reduce using rule 96 (expresion -> expresion AS tipo .)
    MATCH           reduce using rule 96 (expresion -> expresion AS tipo .)
    LOOP            reduce using rule 96 (expresion -> expresion AS tipo .)


state 136

    (98) expresion -> expresion MAYOR expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    ABS             reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    SQRT            reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    CHAR_S          reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 98 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MAS             [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 98 (expresion -> expresion MAYOR expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 137

    (99) expresion -> expresion MENOR expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 99 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 99 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 99 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 99 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 99 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 99 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 99 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 99 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    ABS             reduce using rule 99 (expresion -> expresion MENOR expresion .)
    SQRT            reduce using rule 99 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 99 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 99 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 99 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    CHAR_S          reduce using rule 99 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 99 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 99 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 99 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 99 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 99 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MAS             [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 99 (expresion -> expresion MENOR expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 138

    (100) expresion -> expresion MAYOR_I expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MAYOR           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    ABS             reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    SQRT            reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    CHAR_S          reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    CADENA          reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    LOOP            reduce using rule 100 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MAS             [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 100 (expresion -> expresion MAYOR_I expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 139

    (101) expresion -> expresion MENOR_I expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MAYOR           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    ABS             reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    SQRT            reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    CHAR_S          reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    CADENA          reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    LOOP            reduce using rule 101 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MAS             [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! PUNTO           [ reduce using rule 101 (expresion -> expresion MENOR_I expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 140

    (102) expresion -> expresion D_IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LLV_I           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    ABS             reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    SQRT            reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    CHAR_S          reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    CADENA          reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    LOOP            reduce using rule 102 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95

  ! MAS             [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! AS              [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 102 (expresion -> expresion D_IGUAL expresion .) ]


state 141

    (103) expresion -> expresion NO_IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    ABS             reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    SQRT            reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    CHAR_S          reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86

  ! MAS             [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 103 (expresion -> expresion NO_IGUAL expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]
  ! MENOR           [ shift and go to state 89 ]
  ! MAYOR_I         [ shift and go to state 90 ]
  ! MENOR_I         [ shift and go to state 91 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! NO_IGUAL        [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 142

    (104) expresion -> expresion OR expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 104 (expresion -> expresion OR expresion .)
    D_IGUAL         reduce using rule 104 (expresion -> expresion OR expresion .)
    OR              reduce using rule 104 (expresion -> expresion OR expresion .)
    AND             reduce using rule 104 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 104 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 104 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 104 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 104 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 104 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 104 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 104 (expresion -> expresion OR expresion .)
    INT             reduce using rule 104 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 104 (expresion -> expresion OR expresion .)
    ABS             reduce using rule 104 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 104 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 104 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 104 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 104 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 104 (expresion -> expresion OR expresion .)
    CHAR_S          reduce using rule 104 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 104 (expresion -> expresion OR expresion .)
    ID              reduce using rule 104 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 104 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 104 (expresion -> expresion OR expresion .)
    IF              reduce using rule 104 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 104 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 104 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    NO_IGUAL        shift and go to state 93

  ! MAS             [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 104 (expresion -> expresion OR expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 143

    (105) expresion -> expresion AND expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    AS              reduce using rule 105 (expresion -> expresion AND expresion .)
    D_IGUAL         reduce using rule 105 (expresion -> expresion AND expresion .)
    OR              reduce using rule 105 (expresion -> expresion AND expresion .)
    AND             reduce using rule 105 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 105 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 105 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 105 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 105 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 105 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 105 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 105 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 105 (expresion -> expresion AND expresion .)
    INT             reduce using rule 105 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 105 (expresion -> expresion AND expresion .)
    ABS             reduce using rule 105 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 105 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 105 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 105 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 105 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 105 (expresion -> expresion AND expresion .)
    CHAR_S          reduce using rule 105 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 105 (expresion -> expresion AND expresion .)
    ID              reduce using rule 105 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 105 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 105 (expresion -> expresion AND expresion .)
    IF              reduce using rule 105 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 105 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 105 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    NO_IGUAL        shift and go to state 93

  ! MAS             [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 105 (expresion -> expresion AND expresion .) ]
  ! AS              [ shift and go to state 87 ]
  ! D_IGUAL         [ shift and go to state 92 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 144

    (85) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 168


state 145

    (107) expresion -> PAR_I expresion PAR_D .

    MAS             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    AS              reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    ABS             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    SQRT            reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    CADENA          reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)
    LOOP            reduce using rule 107 (expresion -> PAR_I expresion PAR_D .)


state 146

    (86) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 169


state 147

    (87) expresion -> ABS PAR_I expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 170
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 148

    (88) expresion -> SQRT PAR_I expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 171
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 149

    (54) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (55) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (56) case_list_exp -> . case_list_exp case_exp
    (57) case_list_exp -> . case_exp
    (58) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (59) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (52) exp_list_c -> . exp_list_c BARRA expresion
    (53) exp_list_c -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 172
    case_list_exp                  shift and go to state 173
    case_exp                       shift and go to state 174
    exp_list_c                     shift and go to state 175
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 150

    (44) match -> MATCH expresion LLV_I case_list . LLV_D
    (45) match -> MATCH expresion LLV_I case_list . default LLV_D
    (46) case_list -> case_list . case
    (50) default -> . GUION_B IGUAL MAYOR statement
    (51) default -> . GUION_B IGUAL MAYOR instruccion
    (48) case -> . exp_list IGUAL MAYOR statement
    (49) case -> . exp_list IGUAL MAYOR instruccion_no_pt COMA
    (23) exp_list -> . exp_list COMA expresion
    (24) exp_list -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    LLV_D           shift and go to state 176
    GUION_B         shift and go to state 179
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 78
    default                        shift and go to state 177
    case                           shift and go to state 178
    exp_list                       shift and go to state 152
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 151

    (47) case_list -> case .

    LLV_D           reduce using rule 47 (case_list -> case .)
    GUION_B         reduce using rule 47 (case_list -> case .)
    MENOS           reduce using rule 47 (case_list -> case .)
    INT             reduce using rule 47 (case_list -> case .)
    FLOAT           reduce using rule 47 (case_list -> case .)
    ABS             reduce using rule 47 (case_list -> case .)
    SQRT            reduce using rule 47 (case_list -> case .)
    ENTERO          reduce using rule 47 (case_list -> case .)
    DECIMAL         reduce using rule 47 (case_list -> case .)
    TRUE            reduce using rule 47 (case_list -> case .)
    FALSE           reduce using rule 47 (case_list -> case .)
    CHAR_S          reduce using rule 47 (case_list -> case .)
    CADENA          reduce using rule 47 (case_list -> case .)
    ID              reduce using rule 47 (case_list -> case .)
    NOT             reduce using rule 47 (case_list -> case .)
    PAR_I           reduce using rule 47 (case_list -> case .)
    IF              reduce using rule 47 (case_list -> case .)
    MATCH           reduce using rule 47 (case_list -> case .)
    LOOP            reduce using rule 47 (case_list -> case .)


state 152

    (48) case -> exp_list . IGUAL MAYOR statement
    (49) case -> exp_list . IGUAL MAYOR instruccion_no_pt COMA
    (23) exp_list -> exp_list . COMA expresion

    IGUAL           shift and go to state 180
    COMA            shift and go to state 125


state 153

    (39) statement -> LLV_I instrucciones LLV_D .

    EJECUTAR        reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    WHILE           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    LOOP            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    BREAK           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    CONTINUE        reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    RETURN          reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    PRINT           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    FN              reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    ELSE            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MAS             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MULTI           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    DIV             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MODULO          reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    PUNTO           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    AS              reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MENOR           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR_I         reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    MENOR_I         reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    D_IGUAL         reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    NO_IGUAL        reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    OR              reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    AND             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    LLV_I           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    PUNTOCOMA       reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    PAR_D           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    IGUAL           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    BARRA           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    ABS             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    SQRT            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    CHAR_S          reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    CADENA          reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 39 (statement -> LLV_I instrucciones LLV_D .)


state 154

    (21) print -> PRINT NOT PAR_I expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 181
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 155

    (22) print -> PRINT NOT PAR_I CADENA . COMA exp_list PAR_D
    (94) expresion -> CADENA .

    COMA            shift and go to state 182
    PAR_D           reduce using rule 94 (expresion -> CADENA .)
    MAS             reduce using rule 94 (expresion -> CADENA .)
    MENOS           reduce using rule 94 (expresion -> CADENA .)
    MULTI           reduce using rule 94 (expresion -> CADENA .)
    DIV             reduce using rule 94 (expresion -> CADENA .)
    MODULO          reduce using rule 94 (expresion -> CADENA .)
    PUNTO           reduce using rule 94 (expresion -> CADENA .)
    AS              reduce using rule 94 (expresion -> CADENA .)
    MAYOR           reduce using rule 94 (expresion -> CADENA .)
    MENOR           reduce using rule 94 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 94 (expresion -> CADENA .)
    MENOR_I         reduce using rule 94 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 94 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 94 (expresion -> CADENA .)
    OR              reduce using rule 94 (expresion -> CADENA .)
    AND             reduce using rule 94 (expresion -> CADENA .)


state 156

    (30) lista_param -> ID . D_PUNTO tipo

    D_PUNTO         shift and go to state 183


state 157

    (25) funcion -> FN ID PAR_I lista_param . PAR_D statement
    (27) funcion -> FN ID PAR_I lista_param . PAR_D MENOS MAYOR tipo statement
    (29) lista_param -> lista_param . COMA ID D_PUNTO tipo

    PAR_D           shift and go to state 184
    COMA            shift and go to state 185


state 158

    (26) funcion -> FN ID PAR_I PAR_D . statement
    (28) funcion -> FN ID PAR_I PAR_D . MENOS MAYOR tipo statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    MENOS           shift and go to state 187
    LLV_I           shift and go to state 64

    statement                      shift and go to state 186

state 159

    (69) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 188
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 160

    (75) tipo -> AMP STR .

    IGUAL           reduce using rule 75 (tipo -> AMP STR .)
    MAS             reduce using rule 75 (tipo -> AMP STR .)
    MENOS           reduce using rule 75 (tipo -> AMP STR .)
    MULTI           reduce using rule 75 (tipo -> AMP STR .)
    DIV             reduce using rule 75 (tipo -> AMP STR .)
    MODULO          reduce using rule 75 (tipo -> AMP STR .)
    PUNTO           reduce using rule 75 (tipo -> AMP STR .)
    AS              reduce using rule 75 (tipo -> AMP STR .)
    MAYOR           reduce using rule 75 (tipo -> AMP STR .)
    MENOR           reduce using rule 75 (tipo -> AMP STR .)
    MAYOR_I         reduce using rule 75 (tipo -> AMP STR .)
    MENOR_I         reduce using rule 75 (tipo -> AMP STR .)
    D_IGUAL         reduce using rule 75 (tipo -> AMP STR .)
    NO_IGUAL        reduce using rule 75 (tipo -> AMP STR .)
    OR              reduce using rule 75 (tipo -> AMP STR .)
    AND             reduce using rule 75 (tipo -> AMP STR .)
    LLV_I           reduce using rule 75 (tipo -> AMP STR .)
    PUNTOCOMA       reduce using rule 75 (tipo -> AMP STR .)
    PAR_D           reduce using rule 75 (tipo -> AMP STR .)
    COMA            reduce using rule 75 (tipo -> AMP STR .)
    LLV_D           reduce using rule 75 (tipo -> AMP STR .)
    BARRA           reduce using rule 75 (tipo -> AMP STR .)
    GUION_B         reduce using rule 75 (tipo -> AMP STR .)
    INT             reduce using rule 75 (tipo -> AMP STR .)
    FLOAT           reduce using rule 75 (tipo -> AMP STR .)
    ABS             reduce using rule 75 (tipo -> AMP STR .)
    SQRT            reduce using rule 75 (tipo -> AMP STR .)
    ENTERO          reduce using rule 75 (tipo -> AMP STR .)
    DECIMAL         reduce using rule 75 (tipo -> AMP STR .)
    TRUE            reduce using rule 75 (tipo -> AMP STR .)
    FALSE           reduce using rule 75 (tipo -> AMP STR .)
    CHAR_S          reduce using rule 75 (tipo -> AMP STR .)
    CADENA          reduce using rule 75 (tipo -> AMP STR .)
    ID              reduce using rule 75 (tipo -> AMP STR .)
    NOT             reduce using rule 75 (tipo -> AMP STR .)
    PAR_I           reduce using rule 75 (tipo -> AMP STR .)
    IF              reduce using rule 75 (tipo -> AMP STR .)
    MATCH           reduce using rule 75 (tipo -> AMP STR .)
    LOOP            reduce using rule 75 (tipo -> AMP STR .)


state 161

    (68) asignacion -> LET MUT ID IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 68 (asignacion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 68 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 162

    (70) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 189


state 163

    (23) exp_list -> exp_list COMA expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           reduce using rule 23 (exp_list -> exp_list COMA expresion .)
    COMA            reduce using rule 23 (exp_list -> exp_list COMA expresion .)
    IGUAL           reduce using rule 23 (exp_list -> exp_list COMA expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 164

    (41) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 190
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 165

    (37) else -> ELSE statement .

    EJECUTAR        reduce using rule 37 (else -> ELSE statement .)
    LET             reduce using rule 37 (else -> ELSE statement .)
    ID              reduce using rule 37 (else -> ELSE statement .)
    IF              reduce using rule 37 (else -> ELSE statement .)
    MATCH           reduce using rule 37 (else -> ELSE statement .)
    WHILE           reduce using rule 37 (else -> ELSE statement .)
    LOOP            reduce using rule 37 (else -> ELSE statement .)
    BREAK           reduce using rule 37 (else -> ELSE statement .)
    CONTINUE        reduce using rule 37 (else -> ELSE statement .)
    RETURN          reduce using rule 37 (else -> ELSE statement .)
    PRINT           reduce using rule 37 (else -> ELSE statement .)
    FN              reduce using rule 37 (else -> ELSE statement .)
    $end            reduce using rule 37 (else -> ELSE statement .)
    LLV_D           reduce using rule 37 (else -> ELSE statement .)
    COMA            reduce using rule 37 (else -> ELSE statement .)


state 166

    (38) else -> ELSE if .

    EJECUTAR        reduce using rule 38 (else -> ELSE if .)
    LET             reduce using rule 38 (else -> ELSE if .)
    ID              reduce using rule 38 (else -> ELSE if .)
    IF              reduce using rule 38 (else -> ELSE if .)
    MATCH           reduce using rule 38 (else -> ELSE if .)
    WHILE           reduce using rule 38 (else -> ELSE if .)
    LOOP            reduce using rule 38 (else -> ELSE if .)
    BREAK           reduce using rule 38 (else -> ELSE if .)
    CONTINUE        reduce using rule 38 (else -> ELSE if .)
    RETURN          reduce using rule 38 (else -> ELSE if .)
    PRINT           reduce using rule 38 (else -> ELSE if .)
    FN              reduce using rule 38 (else -> ELSE if .)
    $end            reduce using rule 38 (else -> ELSE if .)
    LLV_D           reduce using rule 38 (else -> ELSE if .)
    COMA            reduce using rule 38 (else -> ELSE if .)


state 167

    (95) expresion -> expresion PUNTO TO_STRING PAR_I . PAR_D

    PAR_D           shift and go to state 191


state 168

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 192


state 169

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 193


state 170

    (87) expresion -> ABS PAR_I expresion PAR_D .

    MAS             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOS           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MULTI           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    DIV             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MODULO          reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    AS              reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    OR              reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    AND             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    COMA            reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    BARRA           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    INT             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    ABS             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    SQRT            reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    TRUE            reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    FALSE           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    CADENA          reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    ID              reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    NOT             reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    IF              reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    MATCH           reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)
    LOOP            reduce using rule 87 (expresion -> ABS PAR_I expresion PAR_D .)


state 171

    (88) expresion -> SQRT PAR_I expresion PAR_D .

    MAS             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOS           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MULTI           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    DIV             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MODULO          reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    AS              reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    OR              reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    AND             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    COMA            reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    BARRA           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    INT             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    ABS             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    SQRT            reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    TRUE            reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    FALSE           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    CADENA          reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    ID              reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    NOT             reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    IF              reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    MATCH           reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)
    LOOP            reduce using rule 88 (expresion -> SQRT PAR_I expresion PAR_D .)


state 172

    (53) exp_list_c -> expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 53 (exp_list_c -> expresion .)
    BARRA           reduce using rule 53 (exp_list_c -> expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 173

    (54) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (55) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (56) case_list_exp -> case_list_exp . case_exp
    (60) default_exp -> . GUION_B IGUAL MAYOR expresion
    (58) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (59) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (52) exp_list_c -> . exp_list_c BARRA expresion
    (53) exp_list_c -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    LLV_D           shift and go to state 194
    GUION_B         shift and go to state 197
    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 172
    default_exp                    shift and go to state 195
    case_exp                       shift and go to state 196
    exp_list_c                     shift and go to state 175
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 174

    (57) case_list_exp -> case_exp .

    LLV_D           reduce using rule 57 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 57 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 57 (case_list_exp -> case_exp .)
    INT             reduce using rule 57 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 57 (case_list_exp -> case_exp .)
    ABS             reduce using rule 57 (case_list_exp -> case_exp .)
    SQRT            reduce using rule 57 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 57 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 57 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 57 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 57 (case_list_exp -> case_exp .)
    CHAR_S          reduce using rule 57 (case_list_exp -> case_exp .)
    CADENA          reduce using rule 57 (case_list_exp -> case_exp .)
    ID              reduce using rule 57 (case_list_exp -> case_exp .)
    NOT             reduce using rule 57 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 57 (case_list_exp -> case_exp .)
    IF              reduce using rule 57 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 57 (case_list_exp -> case_exp .)
    LOOP            reduce using rule 57 (case_list_exp -> case_exp .)


state 175

    (58) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (59) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (52) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 198
    BARRA           shift and go to state 199


state 176

    (44) match -> MATCH expresion LLV_I case_list LLV_D .

    EJECUTAR        reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ID              reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    WHILE           reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LOOP            reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    BREAK           reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CONTINUE        reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    RETURN          reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    PRINT           reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    FN              reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    $end            reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LLV_D           reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 44 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 177

    (45) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 200


state 178

    (46) case_list -> case_list case .

    LLV_D           reduce using rule 46 (case_list -> case_list case .)
    GUION_B         reduce using rule 46 (case_list -> case_list case .)
    MENOS           reduce using rule 46 (case_list -> case_list case .)
    INT             reduce using rule 46 (case_list -> case_list case .)
    FLOAT           reduce using rule 46 (case_list -> case_list case .)
    ABS             reduce using rule 46 (case_list -> case_list case .)
    SQRT            reduce using rule 46 (case_list -> case_list case .)
    ENTERO          reduce using rule 46 (case_list -> case_list case .)
    DECIMAL         reduce using rule 46 (case_list -> case_list case .)
    TRUE            reduce using rule 46 (case_list -> case_list case .)
    FALSE           reduce using rule 46 (case_list -> case_list case .)
    CHAR_S          reduce using rule 46 (case_list -> case_list case .)
    CADENA          reduce using rule 46 (case_list -> case_list case .)
    ID              reduce using rule 46 (case_list -> case_list case .)
    NOT             reduce using rule 46 (case_list -> case_list case .)
    PAR_I           reduce using rule 46 (case_list -> case_list case .)
    IF              reduce using rule 46 (case_list -> case_list case .)
    MATCH           reduce using rule 46 (case_list -> case_list case .)
    LOOP            reduce using rule 46 (case_list -> case_list case .)


state 179

    (50) default -> GUION_B . IGUAL MAYOR statement
    (51) default -> GUION_B . IGUAL MAYOR instruccion

    IGUAL           shift and go to state 201


state 180

    (48) case -> exp_list IGUAL . MAYOR statement
    (49) case -> exp_list IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 202


state 181

    (21) print -> PRINT NOT PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 21 (print -> PRINT NOT PAR_I expresion PAR_D .)


state 182

    (22) print -> PRINT NOT PAR_I CADENA COMA . exp_list PAR_D
    (23) exp_list -> . exp_list COMA expresion
    (24) exp_list -> . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    exp_list                       shift and go to state 203
    expresion                      shift and go to state 78
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 183

    (30) lista_param -> ID D_PUNTO . tipo
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 204

state 184

    (25) funcion -> FN ID PAR_I lista_param PAR_D . statement
    (27) funcion -> FN ID PAR_I lista_param PAR_D . MENOS MAYOR tipo statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    MENOS           shift and go to state 206
    LLV_I           shift and go to state 64

    statement                      shift and go to state 205

state 185

    (29) lista_param -> lista_param COMA . ID D_PUNTO tipo

    ID              shift and go to state 207


state 186

    (26) funcion -> FN ID PAR_I PAR_D statement .

    EJECUTAR        reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    LET             reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    ID              reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    IF              reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    MATCH           reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    WHILE           reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    LOOP            reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    BREAK           reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    CONTINUE        reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    RETURN          reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    PRINT           reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    FN              reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    $end            reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)
    LLV_D           reduce using rule 26 (funcion -> FN ID PAR_I PAR_D statement .)


state 187

    (28) funcion -> FN ID PAR_I PAR_D MENOS . MAYOR tipo statement

    MAYOR           shift and go to state 208


state 188

    (69) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 69 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 69 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 189

    (70) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 209
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 190

    (41) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (42) exp_else -> . ELSE LLV_I expresion LLV_D
    (43) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 211

    exp_else                       shift and go to state 210

state 191

    (95) expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .

    MAS             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOS           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MULTI           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DIV             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MODULO          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTO           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AS              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR_I         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR_I         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    D_IGUAL         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    OR              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AND             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_I           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_D           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COMA            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IGUAL           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_D           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    BARRA           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    GUION_B         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    INT             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FLOAT           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ABS             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    SQRT            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ENTERO          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DECIMAL         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    TRUE            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FALSE           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CHAR_S          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CADENA          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ID              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NOT             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_I           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IF              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MATCH           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LOOP            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)


state 192

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 212
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 193

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 213
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 194

    (54) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    MAS             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTO           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AS              reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ABS             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    SQRT            reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CHAR_S          reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CADENA          reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LOOP            reduce using rule 54 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 195

    (55) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 214


state 196

    (56) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    ABS             reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    SQRT            reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    CHAR_S          reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    CADENA          reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)
    LOOP            reduce using rule 56 (case_list_exp -> case_list_exp case_exp .)


state 197

    (60) default_exp -> GUION_B . IGUAL MAYOR expresion

    IGUAL           shift and go to state 215


state 198

    (58) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (59) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 216


state 199

    (52) exp_list_c -> exp_list_c BARRA . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 217
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 200

    (45) match -> MATCH expresion LLV_I case_list default LLV_D .

    EJECUTAR        reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ID              reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    WHILE           reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LOOP            reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    BREAK           reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CONTINUE        reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    RETURN          reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    PRINT           reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    FN              reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    $end            reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LLV_D           reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 45 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 201

    (50) default -> GUION_B IGUAL . MAYOR statement
    (51) default -> GUION_B IGUAL . MAYOR instruccion

    MAYOR           shift and go to state 218


state 202

    (48) case -> exp_list IGUAL MAYOR . statement
    (49) case -> exp_list IGUAL MAYOR . instruccion_no_pt COMA
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D
    (16) instruccion_no_pt -> . ejecutar
    (17) instruccion_no_pt -> . asignacion
    (18) instruccion_no_pt -> . if
    (19) instruccion_no_pt -> . match
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D

    LLV_I           shift and go to state 64
    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 225
    IF              shift and go to state 19
    MATCH           shift and go to state 20

    statement                      shift and go to state 219
    instruccion_no_pt              shift and go to state 220
    ejecutar                       shift and go to state 221
    asignacion                     shift and go to state 222
    if                             shift and go to state 223
    match                          shift and go to state 224

state 203

    (22) print -> PRINT NOT PAR_I CADENA COMA exp_list . PAR_D
    (23) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 226
    COMA            shift and go to state 125


state 204

    (30) lista_param -> ID D_PUNTO tipo .

    PAR_D           reduce using rule 30 (lista_param -> ID D_PUNTO tipo .)
    COMA            reduce using rule 30 (lista_param -> ID D_PUNTO tipo .)


state 205

    (25) funcion -> FN ID PAR_I lista_param PAR_D statement .

    EJECUTAR        reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    LET             reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    ID              reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    IF              reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    MATCH           reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    WHILE           reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    LOOP            reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    BREAK           reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    CONTINUE        reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    RETURN          reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    PRINT           reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    FN              reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    $end            reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    LLV_D           reduce using rule 25 (funcion -> FN ID PAR_I lista_param PAR_D statement .)


state 206

    (27) funcion -> FN ID PAR_I lista_param PAR_D MENOS . MAYOR tipo statement

    MAYOR           shift and go to state 227


state 207

    (29) lista_param -> lista_param COMA ID . D_PUNTO tipo

    D_PUNTO         shift and go to state 228


state 208

    (28) funcion -> FN ID PAR_I PAR_D MENOS MAYOR . tipo statement
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 229

state 209

    (70) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 70 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 70 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 210

    (41) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    MAS             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTO           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AS              reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ABS             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    SQRT            reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CHAR_S          reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CADENA          reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LOOP            reduce using rule 41 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 211

    (42) exp_else -> ELSE . LLV_I expresion LLV_D
    (43) exp_else -> ELSE . exp_if
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 230
    IF              shift and go to state 39

    exp_if                         shift and go to state 231

state 212

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    COMA            shift and go to state 232
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 213

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    COMA            shift and go to state 233
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 214

    (55) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    MAS             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTO           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AS              reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ABS             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    SQRT            reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CHAR_S          reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CADENA          reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LOOP            reduce using rule 55 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 215

    (60) default_exp -> GUION_B IGUAL . MAYOR expresion

    MAYOR           shift and go to state 234


state 216

    (58) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (59) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 235
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 217

    (52) exp_list_c -> exp_list_c BARRA expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 52 (exp_list_c -> exp_list_c BARRA expresion .)
    BARRA           reduce using rule 52 (exp_list_c -> exp_list_c BARRA expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 218

    (50) default -> GUION_B IGUAL MAYOR . statement
    (51) default -> GUION_B IGUAL MAYOR . instruccion
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D
    (4) instruccion -> . ejecutar PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . if
    (7) instruccion -> . match
    (8) instruccion -> . while
    (9) instruccion -> . loop
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . return PUNTOCOMA
    (13) instruccion -> . print PUNTOCOMA
    (14) instruccion -> . funcion
    (15) instruccion -> . llamada PUNTOCOMA
    (20) ejecutar -> . EJECUTAR PAR_I expresion PAR_D
    (67) asignacion -> . LET ID IGUAL expresion
    (68) asignacion -> . LET MUT ID IGUAL expresion
    (69) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (70) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (71) asignacion -> . ID IGUAL expresion
    (35) if -> . IF expresion statement
    (36) if -> . IF expresion statement else
    (44) match -> . MATCH expresion LLV_I case_list LLV_D
    (45) match -> . MATCH expresion LLV_I case_list default LLV_D
    (61) while -> . WHILE expresion statement
    (65) loop -> . LOOP statement
    (62) break -> . BREAK PUNTOCOMA
    (63) break -> . BREAK expresion PUNTOCOMA
    (64) continue -> . CONTINUE PUNTOCOMA
    (31) return -> . RETURN expresion
    (32) return -> . RETURN
    (21) print -> . PRINT NOT PAR_I expresion PAR_D
    (22) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (25) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (26) funcion -> . FN ID PAR_I PAR_D statement
    (27) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement
    (28) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    LLV_I           shift and go to state 64
    EJECUTAR        shift and go to state 16
    LET             shift and go to state 17
    ID              shift and go to state 18
    IF              shift and go to state 19
    MATCH           shift and go to state 20
    WHILE           shift and go to state 21
    LOOP            shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    FN              shift and go to state 27

    statement                      shift and go to state 236
    instruccion                    shift and go to state 237
    ejecutar                       shift and go to state 4
    asignacion                     shift and go to state 5
    if                             shift and go to state 6
    match                          shift and go to state 7
    while                          shift and go to state 8
    loop                           shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    print                          shift and go to state 13
    funcion                        shift and go to state 14
    llamada                        shift and go to state 15

state 219

    (48) case -> exp_list IGUAL MAYOR statement .

    LLV_D           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    GUION_B         reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    MENOS           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    INT             reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    FLOAT           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    ABS             reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    SQRT            reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    ENTERO          reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    TRUE            reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    FALSE           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    CHAR_S          reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    CADENA          reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    ID              reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    NOT             reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    PAR_I           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    IF              reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    MATCH           reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)
    LOOP            reduce using rule 48 (case -> exp_list IGUAL MAYOR statement .)


state 220

    (49) case -> exp_list IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 238


state 221

    (16) instruccion_no_pt -> ejecutar .

    COMA            reduce using rule 16 (instruccion_no_pt -> ejecutar .)


state 222

    (17) instruccion_no_pt -> asignacion .

    COMA            reduce using rule 17 (instruccion_no_pt -> asignacion .)


state 223

    (18) instruccion_no_pt -> if .

    COMA            reduce using rule 18 (instruccion_no_pt -> if .)


state 224

    (19) instruccion_no_pt -> match .

    COMA            reduce using rule 19 (instruccion_no_pt -> match .)


state 225

    (71) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 37


state 226

    (22) print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .

    PUNTOCOMA       reduce using rule 22 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)


state 227

    (27) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR . tipo statement
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 239

state 228

    (29) lista_param -> lista_param COMA ID D_PUNTO . tipo
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . BOOL
    (75) tipo -> . AMP STR
    (76) tipo -> . STRING
    (77) tipo -> . CHAR
    (78) tipo -> . VOID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    BOOL            shift and go to state 117
    AMP             shift and go to state 118
    STRING          shift and go to state 119
    CHAR            shift and go to state 120
    VOID            shift and go to state 121

    tipo                           shift and go to state 240

state 229

    (28) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo . statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 64

    statement                      shift and go to state 241

state 230

    (42) exp_else -> ELSE LLV_I . expresion LLV_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 242
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 231

    (43) exp_else -> ELSE exp_if .

    MAS             reduce using rule 43 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 43 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 43 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 43 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 43 (exp_else -> ELSE exp_if .)
    PUNTO           reduce using rule 43 (exp_else -> ELSE exp_if .)
    AS              reduce using rule 43 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 43 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 43 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 43 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 43 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 43 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 43 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 43 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 43 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 43 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 43 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 43 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 43 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 43 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 43 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 43 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 43 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 43 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 43 (exp_else -> ELSE exp_if .)
    ABS             reduce using rule 43 (exp_else -> ELSE exp_if .)
    SQRT            reduce using rule 43 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 43 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 43 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 43 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 43 (exp_else -> ELSE exp_if .)
    CHAR_S          reduce using rule 43 (exp_else -> ELSE exp_if .)
    CADENA          reduce using rule 43 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 43 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 43 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 43 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 43 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 43 (exp_else -> ELSE exp_if .)
    LOOP            reduce using rule 43 (exp_else -> ELSE exp_if .)


state 232

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 243
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 233

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 244
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 234

    (60) default_exp -> GUION_B IGUAL MAYOR . expresion
    (79) expresion -> . expresion MAS expresion
    (80) expresion -> . expresion MENOS expresion
    (81) expresion -> . expresion MULTI expresion
    (82) expresion -> . expresion DIV expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (86) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (87) expresion -> . ABS PAR_I expresion PAR_D
    (88) expresion -> . SQRT PAR_I expresion PAR_D
    (89) expresion -> . ENTERO
    (90) expresion -> . DECIMAL
    (91) expresion -> . TRUE
    (92) expresion -> . FALSE
    (93) expresion -> . CHAR_S
    (94) expresion -> . CADENA
    (95) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> . expresion AS tipo
    (97) expresion -> . ID
    (98) expresion -> . expresion MAYOR expresion
    (99) expresion -> . expresion MENOR expresion
    (100) expresion -> . expresion MAYOR_I expresion
    (101) expresion -> . expresion MENOR_I expresion
    (102) expresion -> . expresion D_IGUAL expresion
    (103) expresion -> . expresion NO_IGUAL expresion
    (104) expresion -> . expresion OR expresion
    (105) expresion -> . expresion AND expresion
    (106) expresion -> . NOT expresion
    (107) expresion -> . PAR_I expresion PAR_D
    (108) expresion -> . exp_if
    (109) expresion -> . match_exp
    (110) expresion -> . loop_exp
    (111) expresion -> . llamada
    (41) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (54) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (55) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (66) loop_exp -> . LOOP statement
    (33) llamada -> . ID PAR_I PAR_D
    (34) llamada -> . ID PAR_I exp_list PAR_D

    MENOS           shift and go to state 41
    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    ABS             shift and go to state 45
    SQRT            shift and go to state 46
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    CHAR_S          shift and go to state 51
    CADENA          shift and go to state 52
    ID              shift and go to state 53
    NOT             shift and go to state 54
    PAR_I           shift and go to state 43
    IF              shift and go to state 39
    MATCH           shift and go to state 59
    LOOP            shift and go to state 60

    expresion                      shift and go to state 245
    exp_if                         shift and go to state 55
    match_exp                      shift and go to state 56
    loop_exp                       shift and go to state 57
    llamada                        shift and go to state 58

state 235

    (58) case_exp -> exp_list_c IGUAL MAYOR expresion .
    (59) case_exp -> exp_list_c IGUAL MAYOR expresion . COMA
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    INT             reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ABS             reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    SQRT            reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    TRUE            reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FALSE           reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CHAR_S          reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CADENA          reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ID              reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    NOT             reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    IF              reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    MATCH           reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    LOOP            reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    COMA            shift and go to state 246
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95

  ! MENOS           [ reduce using rule 58 (case_exp -> exp_list_c IGUAL MAYOR expresion .) ]


state 236

    (50) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 50 (default -> GUION_B IGUAL MAYOR statement .)


state 237

    (51) default -> GUION_B IGUAL MAYOR instruccion .

    LLV_D           reduce using rule 51 (default -> GUION_B IGUAL MAYOR instruccion .)


state 238

    (49) case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ABS             reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    SQRT            reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CHAR_S          reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    CADENA          reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)
    LOOP            reduce using rule 49 (case -> exp_list IGUAL MAYOR instruccion_no_pt COMA .)


state 239

    (27) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo . statement
    (39) statement -> . LLV_I instrucciones LLV_D
    (40) statement -> . LLV_I LLV_D

    LLV_I           shift and go to state 64

    statement                      shift and go to state 247

state 240

    (29) lista_param -> lista_param COMA ID D_PUNTO tipo .

    PAR_D           reduce using rule 29 (lista_param -> lista_param COMA ID D_PUNTO tipo .)
    COMA            reduce using rule 29 (lista_param -> lista_param COMA ID D_PUNTO tipo .)


state 241

    (28) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .

    EJECUTAR        reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    LET             reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    ID              reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    IF              reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    MATCH           reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    WHILE           reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    LOOP            reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    BREAK           reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    CONTINUE        reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    RETURN          reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    PRINT           reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    FN              reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    $end            reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)
    LLV_D           reduce using rule 28 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo statement .)


state 242

    (42) exp_else -> ELSE LLV_I expresion . LLV_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_D           shift and go to state 248
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 243

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 249
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 244

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    PAR_D           shift and go to state 250
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 245

    (60) default_exp -> GUION_B IGUAL MAYOR expresion .
    (79) expresion -> expresion . MAS expresion
    (80) expresion -> expresion . MENOS expresion
    (81) expresion -> expresion . MULTI expresion
    (82) expresion -> expresion . DIV expresion
    (83) expresion -> expresion . MODULO expresion
    (95) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (96) expresion -> expresion . AS tipo
    (98) expresion -> expresion . MAYOR expresion
    (99) expresion -> expresion . MENOR expresion
    (100) expresion -> expresion . MAYOR_I expresion
    (101) expresion -> expresion . MENOR_I expresion
    (102) expresion -> expresion . D_IGUAL expresion
    (103) expresion -> expresion . NO_IGUAL expresion
    (104) expresion -> expresion . OR expresion
    (105) expresion -> expresion . AND expresion

    LLV_D           reduce using rule 60 (default_exp -> GUION_B IGUAL MAYOR expresion .)
    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MULTI           shift and go to state 83
    DIV             shift and go to state 84
    MODULO          shift and go to state 85
    PUNTO           shift and go to state 86
    AS              shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYOR_I         shift and go to state 90
    MENOR_I         shift and go to state 91
    D_IGUAL         shift and go to state 92
    NO_IGUAL        shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 246

    (59) case_exp -> exp_list_c IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ABS             reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    SQRT            reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CHAR_S          reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CADENA          reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    LOOP            reduce using rule 59 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)


state 247

    (27) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .

    EJECUTAR        reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    LET             reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    ID              reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    IF              reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    MATCH           reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    WHILE           reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    LOOP            reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    BREAK           reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    CONTINUE        reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    RETURN          reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    PRINT           reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    FN              reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    $end            reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)
    LLV_D           reduce using rule 27 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo statement .)


state 248

    (42) exp_else -> ELSE LLV_I expresion LLV_D .

    MAS             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTO           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AS              reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ABS             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    SQRT            reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CHAR_S          reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CADENA          reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LOOP            reduce using rule 42 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 249

    (85) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 85 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 250

    (86) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    MAS             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTO           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ABS             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    SQRT            reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 86 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PAR_I in state 53 resolved as shift
WARNING: shift/reduce conflict for MAS in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 140 resolved as shift
WARNING: shift/reduce conflict for DIV in state 140 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 140 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 140 resolved as shift
WARNING: shift/reduce conflict for AS in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 140 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
