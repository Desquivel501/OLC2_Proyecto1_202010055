
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMENOSMASleftMULTIDIVleftMODULOPOW_INTPOW_FLOATrightUMENOSCOMA DECIMAL DIV D_IGUAL D_PUNTO EJECUTAR ENTERO FALSE FLOAT INT MAS MAYOR MAYOR_I MENOR MENOR_I MENOS MODULO MULTI NO_IGUAL PAR_D PAR_I POW_FLOAT POW_INT PUNTOCOMA TRUE\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion PUNTOCOMA\t\t\t\t\t\t\n    \n    instrucciones : instruccion PUNTOCOMA\t\t\t\t\t\t\n    \n    instruccion : EJECUTAR PAR_I expresion PAR_D\t\t\t\n    \n    expresion : expresion MAS expresion\n               | expresion MENOS expresion\n               | expresion MULTI expresion\n               | expresion DIV expresion\n               | expresion MODULO expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n    \n    expresion : INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D\n              | FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D\n    \n    expresion : ENTERO \n              | DECIMAL\n    \n    expresion : TRUE \n              | FALSE\n    \n    expresion : PAR_I expresion PAR_D\n    '
    
_lr_action_items = {'EJECUTAR':([0,2,6,8,],[4,4,-3,-2,]),'$end':([1,2,6,8,],[0,-1,-3,-2,]),'PUNTOCOMA':([3,5,19,],[6,8,-4,]),'PAR_I':([4,7,9,11,20,21,22,23,24,36,37,38,39,42,43,],[7,9,9,9,9,9,9,9,9,38,39,9,9,9,9,]),'MENOS':([7,9,10,11,14,15,16,17,18,20,21,22,23,24,25,28,29,30,31,32,33,38,39,40,41,42,43,44,45,46,47,],[11,11,21,11,-13,-14,-15,-16,21,11,11,11,11,11,-10,-17,-5,-6,-7,-8,-9,11,11,21,21,11,11,21,21,-11,-12,]),'INT':([7,9,11,20,21,22,23,24,38,39,42,43,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'FLOAT':([7,9,11,20,21,22,23,24,38,39,42,43,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'ENTERO':([7,9,11,20,21,22,23,24,38,39,42,43,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'DECIMAL':([7,9,11,20,21,22,23,24,38,39,42,43,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'TRUE':([7,9,11,20,21,22,23,24,38,39,42,43,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'FALSE':([7,9,11,20,21,22,23,24,38,39,42,43,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'PAR_D':([10,14,15,16,17,18,25,28,29,30,31,32,33,44,45,46,47,],[19,-13,-14,-15,-16,28,-10,-17,-5,-6,-7,-8,-9,46,47,-11,-12,]),'MAS':([10,14,15,16,17,18,25,28,29,30,31,32,33,40,41,44,45,46,47,],[20,-13,-14,-15,-16,20,-10,-17,-5,-6,-7,-8,-9,20,20,20,20,-11,-12,]),'MULTI':([10,14,15,16,17,18,25,28,29,30,31,32,33,40,41,44,45,46,47,],[22,-13,-14,-15,-16,22,-10,-17,22,22,-7,-8,-9,22,22,22,22,-11,-12,]),'DIV':([10,14,15,16,17,18,25,28,29,30,31,32,33,40,41,44,45,46,47,],[23,-13,-14,-15,-16,23,-10,-17,23,23,-7,-8,-9,23,23,23,23,-11,-12,]),'MODULO':([10,14,15,16,17,18,25,28,29,30,31,32,33,40,41,44,45,46,47,],[24,-13,-14,-15,-16,24,-10,-17,24,24,24,24,-9,24,24,24,24,-11,-12,]),'D_PUNTO':([12,13,26,27,],[26,27,34,35,]),'COMA':([14,15,16,17,25,28,29,30,31,32,33,40,41,46,47,],[-13,-14,-15,-16,-10,-17,-5,-6,-7,-8,-9,42,43,-11,-12,]),'POW_INT':([34,],[36,]),'POW_FLOAT':([35,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,5,]),'expresion':([7,9,11,20,21,22,23,24,38,39,42,43,],[10,18,25,29,30,31,32,33,40,41,44,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_ini','parser.py',20),
  ('instrucciones -> instrucciones instruccion PUNTOCOMA','instrucciones',3,'p_instrucciones','parser.py',27),
  ('instrucciones -> instruccion PUNTOCOMA','instrucciones',2,'p_instrucciones_instruccion','parser.py',34),
  ('instruccion -> EJECUTAR PAR_I expresion PAR_D','instruccion',4,'p_instruccion_ejecutar','parser.py',41),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','parser.py',48),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','parser.py',49),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_expresion_aritmetica','parser.py',50),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_aritmetica','parser.py',51),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','parser.py',52),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unario','parser.py',59),
  ('expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',66),
  ('expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',67),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','parser.py',77),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_numero','parser.py',78),
  ('expresion -> TRUE','expresion',1,'p_expresion_bool','parser.py',86),
  ('expresion -> FALSE','expresion',1,'p_expresion_bool','parser.py',87),
  ('expresion -> PAR_I expresion PAR_D','expresion',3,'p_factor_agrupacion','parser.py',106),
]
