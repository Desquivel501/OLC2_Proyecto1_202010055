
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORNOTleftMAYORMENORMAYOR_IMENOR_IIGUALNO_IGUALleftMENOSMASleftMULTIDIVleftMODULOPOW_INTPOW_FLOATrightUMENOSABS AND BOOL CHAR COMA DECIMAL DIV D_IGUAL D_PUNTO EJECUTAR ELSE ENTERO FALSE FLOAT ID IF IGUAL INT LET LLV_D LLV_I MAS MAYOR MAYOR_I MENOR MENOR_I MENOS MODULO MULTI MUT NOT NO_IGUAL OR PAR_D PAR_I POW_FLOAT POW_INT PRINT PUNTOCOMA SQRT STR STRING TO_OWNED TO_STRING TRUE\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion \t\t\t\t\t\t\n    \n    instrucciones : instruccion \t\t\t\t\t\t\n    \n    instruccion : ejecutar PUNTOCOMA\n                | asignacion PUNTOCOMA\n                | if\n    \n    ejecutar : EJECUTAR PAR_I expresion PAR_D\t\t\t\n    \n    if : IF expresion statement\n    \n    if : IF expresion statement else\n    \n    else : ELSE statement\n         | ELSE if\n    \n    statement : LLV_I instrucciones LLV_D \n    \n    exp_if : IF expresion LLV_I expresion LLV_D exp_else\n    \n    exp_else : ELSE LLV_I expresion LLV_D\n             | ELSE exp_if\n    \n    asignacion : LET ID IGUAL expresion\n    \n    asignacion : LET MUT ID IGUAL expresion\n    \n    asignacion : LET ID D_PUNTO tipo IGUAL expresion\n    \n    asignacion : LET MUT ID D_PUNTO tipo IGUAL expresion\n    \n    tipo : INT\n        | FLOAT\n        | BOOL\n    \n    expresion : expresion MAS expresion\n               | expresion MENOS expresion\n               | expresion MULTI expresion\n               | expresion DIV expresion\n               | expresion MODULO expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n    \n    expresion : INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D\n              | FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D\n              | ABS PAR_I expresion PAR_D\n              | SQRT PAR_I expresion PAR_D\n    \n    expresion : ENTERO \n              | DECIMAL\n    \n    expresion : TRUE \n              | FALSE\n    \n    expresion : ID\n    \n    expresion : expresion MAYOR expresion\n              | expresion MENOR expresion\n              | expresion MAYOR_I expresion\n              | expresion MENOR_I expresion\n              | expresion D_IGUAL expresion\n              | expresion NO_IGUAL expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n    \n    expresion : NOT expresion\n    \n    expresion : PAR_I expresion PAR_D\n    \n    expresion : exp_if\n    '
    
_lr_action_items = {'EJECUTAR':([0,2,3,6,10,11,12,36,50,67,82,92,93,94,],[7,7,-3,-6,-2,-4,-5,-8,7,-9,7,-10,-11,-12,]),'LET':([0,2,3,6,10,11,12,36,50,67,82,92,93,94,],[8,8,-3,-6,-2,-4,-5,-8,8,-9,8,-10,-11,-12,]),'IF':([0,2,3,6,9,10,11,12,13,16,18,20,29,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,56,64,66,67,68,82,88,92,93,94,100,102,103,106,109,111,112,],[9,9,-3,-6,16,-2,-4,-5,16,16,16,16,16,16,-8,16,16,16,16,16,16,16,16,16,16,16,16,16,9,16,16,16,16,-9,9,9,16,-10,-11,-12,16,16,16,16,16,16,16,]),'$end':([1,2,3,6,10,11,12,36,67,92,93,94,],[0,-1,-3,-6,-2,-4,-5,-8,-9,-10,-11,-12,]),'LLV_D':([3,6,10,11,12,24,25,26,27,28,30,36,51,57,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,91,92,93,94,97,98,105,110,113,116,117,118,],[-3,-6,-2,-4,-5,-33,-34,-35,-36,-37,-48,-8,-28,-46,-9,-23,-24,-25,-26,-27,-38,-39,-40,-41,-42,-43,-44,-45,94,-47,101,-10,-11,-12,-31,-32,-13,-15,116,-14,-29,-30,]),'PUNTOCOMA':([4,5,24,25,26,27,28,30,51,57,58,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,89,97,98,99,104,105,110,116,117,118,],[11,12,-33,-34,-35,-36,-37,-48,-28,-46,-7,-16,-23,-24,-25,-26,-27,-38,-39,-40,-41,-42,-43,-44,-45,-47,-17,-31,-32,-18,-19,-13,-15,-14,-29,-30,]),'PAR_I':([7,9,13,16,18,20,22,23,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,95,96,100,102,103,109,111,112,],[13,20,20,20,20,20,55,56,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,102,103,20,20,20,20,20,20,]),'ID':([8,9,13,15,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[14,28,28,34,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'MUT':([8,],[15,]),'MENOS':([9,13,16,17,18,20,24,25,26,27,28,29,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,55,56,57,59,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,88,89,91,97,98,99,100,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,],[18,18,18,38,18,18,-33,-34,-35,-36,-37,18,-48,38,18,38,18,18,18,18,18,18,18,18,18,18,18,18,18,-28,38,18,18,38,38,18,18,-23,-24,-25,-26,-27,38,38,38,38,38,38,38,38,-47,38,38,18,38,38,-31,-32,38,18,18,18,38,-13,38,38,18,-15,18,18,38,38,38,-14,-29,-30,]),'INT':([9,13,16,18,20,29,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,65,66,88,100,102,103,109,111,112,],[19,19,19,19,19,19,19,61,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,61,19,19,19,19,19,19,19,19,]),'FLOAT':([9,13,16,18,20,29,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,65,66,88,100,102,103,109,111,112,],[21,21,21,21,21,21,21,62,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,62,21,21,21,21,21,21,21,21,]),'ABS':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SQRT':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ENTERO':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DECIMAL':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NOT':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'IGUAL':([14,34,60,61,62,63,90,],[32,64,88,-20,-21,-22,100,]),'D_PUNTO':([14,19,21,34,52,54,],[33,52,54,65,83,85,]),'MAS':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[37,-33,-34,-35,-36,-37,-48,37,37,-28,37,37,37,-23,-24,-25,-26,-27,37,37,37,37,37,37,37,37,-47,37,37,37,37,-31,-32,37,37,-13,37,37,-15,37,37,37,-14,-29,-30,]),'MULTI':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[39,-33,-34,-35,-36,-37,-48,39,39,-28,39,39,39,39,39,-25,-26,-27,39,39,39,39,39,39,39,39,-47,39,39,39,39,-31,-32,39,39,-13,39,39,-15,39,39,39,-14,-29,-30,]),'DIV':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[40,-33,-34,-35,-36,-37,-48,40,40,-28,40,40,40,40,40,-25,-26,-27,40,40,40,40,40,40,40,40,-47,40,40,40,40,-31,-32,40,40,-13,40,40,-15,40,40,40,-14,-29,-30,]),'MODULO':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[41,-33,-34,-35,-36,-37,-48,41,41,-28,41,41,41,41,41,41,41,-27,41,41,41,41,41,41,41,41,-47,41,41,41,41,-31,-32,41,41,-13,41,41,-15,41,41,41,-14,-29,-30,]),'MAYOR':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[42,-33,-34,-35,-36,-37,-48,42,42,-28,42,42,42,-23,-24,-25,-26,-27,-38,-39,-40,-41,42,-43,42,42,-47,42,42,42,42,-31,-32,42,42,-13,42,42,-15,42,42,42,-14,-29,-30,]),'MENOR':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[43,-33,-34,-35,-36,-37,-48,43,43,-28,43,43,43,-23,-24,-25,-26,-27,-38,-39,-40,-41,43,-43,43,43,-47,43,43,43,43,-31,-32,43,43,-13,43,43,-15,43,43,43,-14,-29,-30,]),'MAYOR_I':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[44,-33,-34,-35,-36,-37,-48,44,44,-28,44,44,44,-23,-24,-25,-26,-27,-38,-39,-40,-41,44,-43,44,44,-47,44,44,44,44,-31,-32,44,44,-13,44,44,-15,44,44,44,-14,-29,-30,]),'MENOR_I':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[45,-33,-34,-35,-36,-37,-48,45,45,-28,45,45,45,-23,-24,-25,-26,-27,-38,-39,-40,-41,45,-43,45,45,-47,45,45,45,45,-31,-32,45,45,-13,45,45,-15,45,45,45,-14,-29,-30,]),'D_IGUAL':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[46,-33,-34,-35,-36,-37,-48,46,46,-28,46,-46,46,-23,-24,-25,-26,-27,-38,-39,-40,-41,46,-43,-44,-45,-47,46,46,46,46,-31,-32,46,46,-13,46,46,-15,46,46,46,-14,-29,-30,]),'NO_IGUAL':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[47,-33,-34,-35,-36,-37,-48,47,47,-28,47,47,47,-23,-24,-25,-26,-27,-38,-39,-40,-41,47,-43,47,47,-47,47,47,47,47,-31,-32,47,47,-13,47,47,-15,47,47,47,-14,-29,-30,]),'OR':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[48,-33,-34,-35,-36,-37,-48,48,48,-28,48,-46,48,-23,-24,-25,-26,-27,-38,-39,-40,-41,48,-43,-44,-45,-47,48,48,48,48,-31,-32,48,48,-13,48,48,-15,48,48,48,-14,-29,-30,]),'AND':([17,24,25,26,27,28,30,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,89,91,97,98,99,104,105,107,108,110,113,114,115,116,117,118,],[49,-33,-34,-35,-36,-37,-48,49,49,-28,49,-46,49,-23,-24,-25,-26,-27,-38,-39,-40,-41,49,-43,-44,-45,-47,49,49,49,49,-31,-32,49,49,-13,49,49,-15,49,49,49,-14,-29,-30,]),'LLV_I':([17,24,25,26,27,28,30,35,51,57,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,97,98,105,106,110,116,117,118,],[50,-33,-34,-35,-36,-37,-48,66,-28,-46,50,-23,-24,-25,-26,-27,-38,-39,-40,-41,-42,-43,-44,-45,-47,-31,-32,-13,109,-15,-14,-29,-30,]),'PAR_D':([24,25,26,27,28,30,31,51,53,57,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,97,98,105,110,114,115,116,117,118,],[-33,-34,-35,-36,-37,-48,58,-28,84,-46,-23,-24,-25,-26,-27,-38,-39,-40,-41,-42,-43,-44,-45,-47,97,98,-31,-32,-13,-15,117,118,-14,-29,-30,]),'COMA':([24,25,26,27,28,30,51,57,69,70,71,72,73,74,75,76,77,78,79,80,81,84,97,98,105,107,108,110,116,117,118,],[-33,-34,-35,-36,-37,-48,-28,-46,-23,-24,-25,-26,-27,-38,-39,-40,-41,-42,-43,-44,-45,-47,-31,-32,-13,111,112,-15,-14,-29,-30,]),'BOOL':([33,65,],[63,63,]),'ELSE':([36,94,101,],[68,-12,106,]),'POW_INT':([83,],[95,]),'POW_FLOAT':([85,],[96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,50,],[2,82,]),'instruccion':([0,2,50,82,],[3,10,3,10,]),'ejecutar':([0,2,50,82,],[4,4,4,4,]),'asignacion':([0,2,50,82,],[5,5,5,5,]),'if':([0,2,50,68,82,],[6,6,6,93,6,]),'expresion':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,109,111,112,],[17,31,35,51,53,57,59,69,70,71,72,73,74,75,76,77,78,79,80,81,86,87,89,91,99,104,107,108,113,114,115,]),'exp_if':([9,13,16,18,20,29,32,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,64,66,88,100,102,103,106,109,111,112,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,110,30,30,30,]),'statement':([17,68,],[36,92,]),'tipo':([33,65,],[60,90,]),'else':([36,],[67,]),'exp_else':([101,],[105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_ini','parser.py',32),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',39),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',47),
  ('instruccion -> ejecutar PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',53),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',54),
  ('instruccion -> if','instruccion',1,'p_instruccion','parser.py',55),
  ('ejecutar -> EJECUTAR PAR_I expresion PAR_D','ejecutar',4,'p_instruccion_ejecutar','parser.py',62),
  ('if -> IF expresion statement','if',3,'p_instruccion_if','parser.py',69),
  ('if -> IF expresion statement else','if',4,'p_instruccion_if_else','parser.py',76),
  ('else -> ELSE statement','else',2,'p_instruccion_else','parser.py',83),
  ('else -> ELSE if','else',2,'p_instruccion_else','parser.py',84),
  ('statement -> LLV_I instrucciones LLV_D','statement',3,'p_statement','parser.py',91),
  ('exp_if -> IF expresion LLV_I expresion LLV_D exp_else','exp_if',6,'p_expresion_if_else','parser.py',98),
  ('exp_else -> ELSE LLV_I expresion LLV_D','exp_else',4,'p_expresion_else','parser.py',105),
  ('exp_else -> ELSE exp_if','exp_else',2,'p_expresion_else','parser.py',106),
  ('asignacion -> LET ID IGUAL expresion','asignacion',4,'p_asignacion','parser.py',115),
  ('asignacion -> LET MUT ID IGUAL expresion','asignacion',5,'p_asignacion_mut','parser.py',122),
  ('asignacion -> LET ID D_PUNTO tipo IGUAL expresion','asignacion',6,'p_asignacion_tipo','parser.py',129),
  ('asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion','asignacion',7,'p_asignacion_mut_tipo','parser.py',136),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',144),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',145),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',146),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','parser.py',153),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','parser.py',154),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_expresion_aritmetica','parser.py',155),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_aritmetica','parser.py',156),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','parser.py',157),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unario_ar','parser.py',164),
  ('expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',171),
  ('expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',172),
  ('expresion -> ABS PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',173),
  ('expresion -> SQRT PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',174),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','parser.py',190),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_numero','parser.py',191),
  ('expresion -> TRUE','expresion',1,'p_expresion_bool','parser.py',198),
  ('expresion -> FALSE','expresion',1,'p_expresion_bool','parser.py',199),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',208),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','parser.py',214),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','parser.py',215),
  ('expresion -> expresion MAYOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',216),
  ('expresion -> expresion MENOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',217),
  ('expresion -> expresion D_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',218),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',219),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','parser.py',226),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','parser.py',227),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unario_lo','parser.py',234),
  ('expresion -> PAR_I expresion PAR_D','expresion',3,'p_factor_agrupacion','parser.py',241),
  ('expresion -> exp_if','expresion',1,'p_expresion_if_','parser.py',247),
]
