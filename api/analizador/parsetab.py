
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORNOTleftMAYORMENORMAYOR_IMENOR_IIGUALNO_IGUALleftMENOSMASleftMULTIDIVleftMODULOPOW_INTPOW_FLOATrightUMENOSABS AND BARRA BOOL CHAR COMA DECIMAL DIV D_IGUAL D_PUNTO EJECUTAR ELSE ENTERO FALSE FLOAT GUION_B ID ID2 IF IGUAL INT LET LLV_D LLV_I MAS MATCH MAYOR MAYOR_I MENOR MENOR_I MENOS MODULO MULTI MUT NOT NO_IGUAL OR PAR_D PAR_I POW_FLOAT POW_INT PRINT PUNTOCOMA SQRT STR STRING TO_OWNED TO_STRING TRUE\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion \t\t\t\t\t\t\n    \n    instrucciones : instruccion \t\t\t\t\t\t\n    \n    instruccion : ejecutar PUNTOCOMA\n                | asignacion PUNTOCOMA\n                | if\n                | match\n    \n    ejecutar : EJECUTAR PAR_I expresion PAR_D\t\t\t\n    \n    if : IF expresion statement\n    \n    if : IF expresion statement else\n    \n    else : ELSE statement\n         | ELSE if\n    \n    statement : LLV_I instrucciones LLV_D \n    \n    exp_if : IF expresion LLV_I expresion LLV_D exp_else\n    \n    exp_else : ELSE LLV_I expresion LLV_D\n             | ELSE exp_if\n    \n    match : MATCH expresion LLV_I case_list LLV_D\n         | MATCH expresion LLV_I case_list default LLV_D\n    \n    case_list : case_list case\n              | case \n    \n    case : exp_list IGUAL MAYOR statement\n         | exp_list IGUAL MAYOR instruccion COMA\n    \n    default : GUION_B IGUAL MAYOR statement\n            | GUION_B IGUAL MAYOR instruccion\n    \n    exp_list : exp_list BARRA expresion\n             | expresion\n    \n    asignacion : LET ID IGUAL expresion\n    \n    asignacion : LET MUT ID IGUAL expresion\n    \n    asignacion : LET ID D_PUNTO tipo IGUAL expresion\n    \n    asignacion : LET MUT ID D_PUNTO tipo IGUAL expresion\n    \n    tipo : INT\n        | FLOAT\n        | BOOL\n    \n    expresion : expresion MAS expresion\n               | expresion MENOS expresion\n               | expresion MULTI expresion\n               | expresion DIV expresion\n               | expresion MODULO expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n    \n    expresion : INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D\n              | FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D\n              | ABS PAR_I expresion PAR_D\n              | SQRT PAR_I expresion PAR_D\n    \n    expresion : ENTERO \n              | DECIMAL\n    \n    expresion : TRUE \n              | FALSE\n    \n    expresion : ID\n    \n    expresion : expresion MAYOR expresion\n              | expresion MENOR expresion\n              | expresion MAYOR_I expresion\n              | expresion MENOR_I expresion\n              | expresion D_IGUAL expresion\n              | expresion NO_IGUAL expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n    \n    expresion : NOT expresion\n    \n    expresion : PAR_I expresion PAR_D\n    \n    expresion : exp_if\n    '
    
_lr_action_items = {'EJECUTAR':([0,2,3,6,7,12,13,14,39,53,71,86,100,101,102,107,118,120,127,],[8,8,-3,-6,-7,-2,-4,-5,-9,8,-10,8,-11,-12,-13,-17,-18,8,8,]),'LET':([0,2,3,6,7,12,13,14,39,53,71,86,100,101,102,107,118,120,127,],[9,9,-3,-6,-7,-2,-4,-5,-9,9,-10,9,-11,-12,-13,-17,-18,9,9,]),'IF':([0,2,3,6,7,10,11,12,13,14,15,18,20,22,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,61,68,70,71,72,86,93,94,96,100,101,102,107,109,112,114,116,117,118,120,124,127,128,130,132,133,136,],[10,10,-3,-6,-7,18,18,-2,-4,-5,18,18,18,18,18,18,-9,18,18,18,18,18,18,18,18,18,18,18,18,18,10,18,18,18,18,18,-10,10,10,18,-20,18,-11,-12,-13,-17,-19,18,18,18,18,-18,10,18,10,-21,18,18,18,-22,]),'MATCH':([0,2,3,6,7,12,13,14,39,53,71,86,100,101,102,107,118,120,127,],[11,11,-3,-6,-7,-2,-4,-5,-9,11,-10,11,-11,-12,-13,-17,-18,11,11,]),'$end':([1,2,3,6,7,12,13,14,39,71,100,101,102,107,118,],[0,-1,-3,-6,-7,-2,-4,-5,-9,-10,-11,-12,-13,-17,-18,]),'LLV_D':([3,6,7,12,13,14,26,27,28,29,30,32,39,54,60,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,93,94,99,100,101,102,105,106,107,108,109,118,123,128,131,134,135,136,137,140,141,142,],[-3,-6,-7,-2,-4,-5,-44,-45,-46,-47,-48,-59,-9,-39,-57,-10,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,102,-58,107,-20,115,-11,-12,-13,-42,-43,-17,118,-19,-18,-14,-21,-16,-23,-24,-22,140,-15,-40,-41,]),'PUNTOCOMA':([4,5,26,27,28,29,30,32,54,60,62,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,97,105,106,113,122,123,131,140,141,142,],[13,14,-44,-45,-46,-47,-48,-59,-39,-57,-8,-27,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,-28,-42,-43,-29,-30,-14,-16,-15,-40,-41,]),'COMA':([6,7,13,14,26,27,28,29,30,32,39,54,60,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,100,101,102,105,106,107,118,123,125,126,129,131,140,141,142,],[-6,-7,-4,-5,-44,-45,-46,-47,-48,-59,-9,-39,-57,-10,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,-11,-12,-13,-42,-43,-17,-18,-14,132,133,136,-16,-15,-40,-41,]),'PAR_I':([8,10,11,15,18,20,22,24,25,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,103,104,109,112,114,116,117,128,130,132,133,136,],[15,22,22,22,22,22,22,58,59,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-20,22,-13,116,117,-19,22,22,22,22,-21,22,22,22,-22,]),'ID':([9,10,11,15,17,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[16,30,30,30,37,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-20,30,-13,-19,30,30,30,30,-21,30,30,30,-22,]),'MUT':([9,],[17,]),'MENOS':([10,11,15,18,19,20,22,26,27,28,29,30,31,32,33,34,35,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,56,58,59,60,61,63,68,70,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,93,94,96,97,99,102,105,106,109,112,113,114,116,117,121,122,123,125,126,128,130,131,132,133,136,137,138,139,140,141,142,],[20,20,20,20,41,20,20,-44,-45,-46,-47,-48,20,-59,41,41,20,41,20,20,20,20,20,20,20,20,20,20,20,20,20,-39,41,20,20,41,20,41,20,20,-34,-35,-36,-37,-38,41,41,41,41,41,41,41,41,-58,41,41,41,20,-20,20,41,41,-13,-42,-43,-19,20,41,20,20,20,41,41,-14,41,41,-21,20,-16,20,20,-22,41,41,41,-15,-40,-41,]),'INT':([10,11,15,18,20,22,31,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,69,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[21,21,21,21,21,21,21,21,65,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,65,21,21,-20,21,-13,-19,21,21,21,21,-21,21,21,21,-22,]),'FLOAT':([10,11,15,18,20,22,31,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,69,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[23,23,23,23,23,23,23,23,66,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,66,23,23,-20,23,-13,-19,23,23,23,23,-21,23,23,23,-22,]),'ABS':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-20,24,-13,-19,24,24,24,24,-21,24,24,24,-22,]),'SQRT':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-20,25,-13,-19,25,25,25,25,-21,25,25,25,-22,]),'ENTERO':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-20,26,-13,-19,26,26,26,26,-21,26,26,26,-22,]),'DECIMAL':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-20,27,-13,-19,27,27,27,27,-21,27,27,27,-22,]),'TRUE':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-20,28,-13,-19,28,28,28,28,-21,28,28,28,-22,]),'FALSE':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-20,29,-13,-19,29,29,29,29,-21,29,29,29,-22,]),'NOT':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,94,96,102,109,112,114,116,117,128,130,132,133,136,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-20,31,-13,-19,31,31,31,31,-21,31,31,31,-22,]),'IGUAL':([16,26,27,28,29,30,32,37,54,60,64,65,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,95,98,105,106,110,121,123,131,140,141,142,],[35,-44,-45,-46,-47,-48,-59,68,-39,-57,96,-31,-32,-33,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,-26,111,114,-42,-43,119,-25,-14,-16,-15,-40,-41,]),'D_PUNTO':([16,21,23,37,55,57,],[36,55,57,69,87,89,]),'MAS':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[40,-44,-45,-46,-47,-48,-59,40,40,40,-39,40,40,40,-34,-35,-36,-37,-38,40,40,40,40,40,40,40,40,-58,40,40,40,40,40,-42,-43,40,40,40,-14,40,40,-16,40,40,40,-15,-40,-41,]),'MULTI':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[42,-44,-45,-46,-47,-48,-59,42,42,42,-39,42,42,42,42,42,-36,-37,-38,42,42,42,42,42,42,42,42,-58,42,42,42,42,42,-42,-43,42,42,42,-14,42,42,-16,42,42,42,-15,-40,-41,]),'DIV':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[43,-44,-45,-46,-47,-48,-59,43,43,43,-39,43,43,43,43,43,-36,-37,-38,43,43,43,43,43,43,43,43,-58,43,43,43,43,43,-42,-43,43,43,43,-14,43,43,-16,43,43,43,-15,-40,-41,]),'MODULO':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[44,-44,-45,-46,-47,-48,-59,44,44,44,-39,44,44,44,44,44,44,44,-38,44,44,44,44,44,44,44,44,-58,44,44,44,44,44,-42,-43,44,44,44,-14,44,44,-16,44,44,44,-15,-40,-41,]),'MAYOR':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,111,113,119,121,122,123,125,126,131,137,138,139,140,141,142,],[45,-44,-45,-46,-47,-48,-59,45,45,45,-39,45,45,45,-34,-35,-36,-37,-38,-49,-50,-51,-52,45,-54,45,45,-58,45,45,45,45,45,-42,-43,120,45,127,45,45,-14,45,45,-16,45,45,45,-15,-40,-41,]),'MENOR':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[46,-44,-45,-46,-47,-48,-59,46,46,46,-39,46,46,46,-34,-35,-36,-37,-38,-49,-50,-51,-52,46,-54,46,46,-58,46,46,46,46,46,-42,-43,46,46,46,-14,46,46,-16,46,46,46,-15,-40,-41,]),'MAYOR_I':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[47,-44,-45,-46,-47,-48,-59,47,47,47,-39,47,47,47,-34,-35,-36,-37,-38,-49,-50,-51,-52,47,-54,47,47,-58,47,47,47,47,47,-42,-43,47,47,47,-14,47,47,-16,47,47,47,-15,-40,-41,]),'MENOR_I':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[48,-44,-45,-46,-47,-48,-59,48,48,48,-39,48,48,48,-34,-35,-36,-37,-38,-49,-50,-51,-52,48,-54,48,48,-58,48,48,48,48,48,-42,-43,48,48,48,-14,48,48,-16,48,48,48,-15,-40,-41,]),'D_IGUAL':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[49,-44,-45,-46,-47,-48,-59,49,49,49,-39,49,-57,49,-34,-35,-36,-37,-38,-49,-50,-51,-52,49,-54,-55,-56,-58,49,49,49,49,49,-42,-43,49,49,49,-14,49,49,-16,49,49,49,-15,-40,-41,]),'NO_IGUAL':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[50,-44,-45,-46,-47,-48,-59,50,50,50,-39,50,50,50,-34,-35,-36,-37,-38,-49,-50,-51,-52,50,-54,50,50,-58,50,50,50,50,50,-42,-43,50,50,50,-14,50,50,-16,50,50,50,-15,-40,-41,]),'OR':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[51,-44,-45,-46,-47,-48,-59,51,51,51,-39,51,-57,51,-34,-35,-36,-37,-38,-49,-50,-51,-52,51,-54,-55,-56,-58,51,51,51,51,51,-42,-43,51,51,51,-14,51,51,-16,51,51,51,-15,-40,-41,]),'AND':([19,26,27,28,29,30,32,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,97,99,105,106,113,121,122,123,125,126,131,137,138,139,140,141,142,],[52,-44,-45,-46,-47,-48,-59,52,52,52,-39,52,-57,52,-34,-35,-36,-37,-38,-49,-50,-51,-52,52,-54,-55,-56,-58,52,52,52,52,52,-42,-43,52,52,52,-14,52,52,-16,52,52,52,-15,-40,-41,]),'LLV_I':([19,26,27,28,29,30,32,33,38,54,60,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,120,123,124,127,131,140,141,142,],[53,-44,-45,-46,-47,-48,-59,61,70,-39,-57,53,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,-42,-43,53,-14,130,53,-16,-15,-40,-41,]),'PAR_D':([26,27,28,29,30,32,34,54,56,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,105,106,123,131,138,139,140,141,142,],[-44,-45,-46,-47,-48,-59,62,-39,88,-57,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,105,106,-42,-43,-14,-16,141,142,-15,-40,-41,]),'BARRA':([26,27,28,29,30,32,54,60,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,95,105,106,121,123,131,140,141,142,],[-44,-45,-46,-47,-48,-59,-39,-57,-34,-35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-55,-56,-58,-26,112,-42,-43,-25,-14,-16,-15,-40,-41,]),'BOOL':([36,69,],[67,67,]),'ELSE':([39,102,115,],[72,-13,124,]),'POW_INT':([87,],[103,]),'POW_FLOAT':([89,],[104,]),'GUION_B':([93,94,102,109,128,136,],[110,-20,-13,-19,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,53,],[2,86,]),'instruccion':([0,2,53,86,120,127,],[3,12,3,12,129,135,]),'ejecutar':([0,2,53,86,120,127,],[4,4,4,4,4,4,]),'asignacion':([0,2,53,86,120,127,],[5,5,5,5,5,5,]),'if':([0,2,53,72,86,120,127,],[6,6,6,101,6,6,6,]),'match':([0,2,53,86,120,127,],[7,7,7,7,7,7,]),'expresion':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,96,112,114,116,117,130,132,133,],[19,33,34,38,54,56,60,63,73,74,75,76,77,78,79,80,81,82,83,84,85,90,91,92,97,99,92,113,121,122,125,126,137,138,139,]),'exp_if':([10,11,15,18,20,22,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,61,68,70,93,96,112,114,116,117,124,130,132,133,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,131,32,32,32,]),'statement':([19,72,120,127,],[39,100,128,134,]),'tipo':([36,69,],[64,98,]),'else':([39,],[71,]),'case_list':([61,],[93,]),'case':([61,93,],[94,109,]),'exp_list':([61,93,],[95,95,]),'default':([93,],[108,]),'exp_else':([115,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_ini','parser.py',34),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',41),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',49),
  ('instruccion -> ejecutar PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',55),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',56),
  ('instruccion -> if','instruccion',1,'p_instruccion','parser.py',57),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',58),
  ('ejecutar -> EJECUTAR PAR_I expresion PAR_D','ejecutar',4,'p_instruccion_ejecutar','parser.py',65),
  ('if -> IF expresion statement','if',3,'p_instruccion_if','parser.py',72),
  ('if -> IF expresion statement else','if',4,'p_instruccion_if_else','parser.py',79),
  ('else -> ELSE statement','else',2,'p_instruccion_else','parser.py',86),
  ('else -> ELSE if','else',2,'p_instruccion_else','parser.py',87),
  ('statement -> LLV_I instrucciones LLV_D','statement',3,'p_statement','parser.py',94),
  ('exp_if -> IF expresion LLV_I expresion LLV_D exp_else','exp_if',6,'p_expresion_if_else','parser.py',101),
  ('exp_else -> ELSE LLV_I expresion LLV_D','exp_else',4,'p_expresion_else','parser.py',108),
  ('exp_else -> ELSE exp_if','exp_else',2,'p_expresion_else','parser.py',109),
  ('match -> MATCH expresion LLV_I case_list LLV_D','match',5,'p_instruccion_match','parser.py',119),
  ('match -> MATCH expresion LLV_I case_list default LLV_D','match',6,'p_instruccion_match','parser.py',120),
  ('case_list -> case_list case','case_list',2,'p_case_list','parser.py',130),
  ('case_list -> case','case_list',1,'p_case_list','parser.py',131),
  ('case -> exp_list IGUAL MAYOR statement','case',4,'p_case','parser.py',142),
  ('case -> exp_list IGUAL MAYOR instruccion COMA','case',5,'p_case','parser.py',143),
  ('default -> GUION_B IGUAL MAYOR statement','default',4,'p_default','parser.py',150),
  ('default -> GUION_B IGUAL MAYOR instruccion','default',4,'p_default','parser.py',151),
  ('exp_list -> exp_list BARRA expresion','exp_list',3,'p_exp_list','parser.py',158),
  ('exp_list -> expresion','exp_list',1,'p_exp_list','parser.py',159),
  ('asignacion -> LET ID IGUAL expresion','asignacion',4,'p_asignacion','parser.py',171),
  ('asignacion -> LET MUT ID IGUAL expresion','asignacion',5,'p_asignacion_mut','parser.py',178),
  ('asignacion -> LET ID D_PUNTO tipo IGUAL expresion','asignacion',6,'p_asignacion_tipo','parser.py',185),
  ('asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion','asignacion',7,'p_asignacion_mut_tipo','parser.py',192),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',200),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',201),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',202),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','parser.py',209),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','parser.py',210),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_expresion_aritmetica','parser.py',211),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_aritmetica','parser.py',212),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','parser.py',213),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unario_ar','parser.py',220),
  ('expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',227),
  ('expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',228),
  ('expresion -> ABS PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',229),
  ('expresion -> SQRT PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',230),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','parser.py',246),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_numero','parser.py',247),
  ('expresion -> TRUE','expresion',1,'p_expresion_bool','parser.py',254),
  ('expresion -> FALSE','expresion',1,'p_expresion_bool','parser.py',255),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',264),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','parser.py',270),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','parser.py',271),
  ('expresion -> expresion MAYOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',272),
  ('expresion -> expresion MENOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',273),
  ('expresion -> expresion D_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',274),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',275),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','parser.py',282),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','parser.py',283),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unario_lo','parser.py',290),
  ('expresion -> PAR_I expresion PAR_D','expresion',3,'p_factor_agrupacion','parser.py',297),
  ('expresion -> exp_if','expresion',1,'p_expresion_if_','parser.py',303),
]
