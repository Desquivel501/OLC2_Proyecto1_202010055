
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORNOTleftMAYORMENORMAYOR_IMENOR_IIGUALNO_IGUALleftMENOSMASleftMULTIDIVleftMODULOPOW_INTPOW_FLOATrightUMENOSABS AND BARRA BOOL CHAR COMA DECIMAL DIV D_IGUAL D_PUNTO EJECUTAR ELSE ENTERO FALSE FLOAT GUION_B ID IF IGUAL INT LET LLV_D LLV_I MAS MATCH MAYOR MAYOR_I MENOR MENOR_I MENOS MODULO MULTI MUT NOT NO_IGUAL OR PAR_D PAR_I POW_FLOAT POW_INT PRINT PUNTOCOMA SQRT STR STRING TO_OWNED TO_STRING TRUE\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion \t\t\t\t\t\t\n    \n    instrucciones : instruccion \t\t\t\t\t\t\n    \n    instruccion : ejecutar PUNTOCOMA\n                | asignacion PUNTOCOMA\n                | if\n                | match\n    \n    instruccion_no_pt : ejecutar \n                      | asignacion\n                      | if\n                      | match\n    \n    ejecutar : EJECUTAR PAR_I expresion PAR_D\t\t\t\n    \n    if : IF expresion statement\n    \n    if : IF expresion statement else\n    \n    else : ELSE statement\n         | ELSE if\n    \n    statement : LLV_I instrucciones LLV_D \n    \n    exp_if : IF expresion LLV_I expresion LLV_D exp_else\n    \n    exp_else : ELSE LLV_I expresion LLV_D\n             | ELSE exp_if\n    \n    match : MATCH expresion LLV_I case_list LLV_D\n         | MATCH expresion LLV_I case_list default LLV_D\n    \n    case_list : case_list case\n              | case \n    \n    case : exp_list IGUAL MAYOR statement\n         | exp_list IGUAL MAYOR instruccion_no_pt COMA\n    \n    default : GUION_B IGUAL MAYOR statement\n            | GUION_B IGUAL MAYOR instruccion\n    \n    exp_list : exp_list BARRA expresion\n             | expresion\n    \n    match_exp : MATCH expresion LLV_I case_list_exp LLV_D\n              | MATCH expresion LLV_I case_list_exp default_exp LLV_D\n    \n    case_list_exp : case_list_exp case_exp\n                  | case_exp \n    \n    case_exp : exp_list IGUAL MAYOR expresion\n             | exp_list IGUAL MAYOR expresion COMA\n    \n    default_exp : GUION_B IGUAL MAYOR expresion\n    \n    asignacion : LET ID IGUAL expresion\n    \n    asignacion : LET MUT ID IGUAL expresion\n    \n    asignacion : LET ID D_PUNTO tipo IGUAL expresion\n    \n    asignacion : LET MUT ID D_PUNTO tipo IGUAL expresion\n    \n    tipo : INT\n        | FLOAT\n        | BOOL\n    \n    expresion : expresion MAS expresion\n               | expresion MENOS expresion\n               | expresion MULTI expresion\n               | expresion DIV expresion\n               | expresion MODULO expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n    \n    expresion : INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D\n              | FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D\n              | ABS PAR_I expresion PAR_D\n              | SQRT PAR_I expresion PAR_D\n    \n    expresion : ENTERO \n              | DECIMAL\n    \n    expresion : TRUE \n              | FALSE\n    \n    expresion : ID\n    \n    expresion : expresion MAYOR expresion\n              | expresion MENOR expresion\n              | expresion MAYOR_I expresion\n              | expresion MENOR_I expresion\n              | expresion D_IGUAL expresion\n              | expresion NO_IGUAL expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n    \n    expresion : NOT expresion\n    \n    expresion : PAR_I expresion PAR_D\n    \n    expresion : exp_if\n              | match_exp\n    '
    
_lr_action_items = {'EJECUTAR':([0,2,3,6,7,12,13,14,41,55,74,89,104,105,106,114,130,132,142,],[8,8,-3,-6,-7,-2,-4,-5,-13,8,-14,8,-15,-16,-17,-21,-22,8,8,]),'LET':([0,2,3,6,7,12,13,14,41,55,74,89,104,105,106,114,130,132,142,],[9,9,-3,-6,-7,-2,-4,-5,-13,9,-14,9,-15,-16,-17,-21,-22,9,9,]),'IF':([0,2,3,6,7,10,11,12,13,14,15,18,20,22,26,27,28,29,30,31,32,33,34,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,98,100,104,105,106,109,110,111,112,114,116,119,121,123,124,125,127,130,132,135,136,139,141,142,143,149,150,151,152,153,154,157,162,163,164,165,],[10,10,-3,-6,-7,18,18,-2,-4,-5,18,18,18,18,-55,-56,-57,-58,-59,18,-70,-71,18,18,-13,18,18,18,18,18,18,18,18,18,18,18,18,18,10,-50,18,18,-68,18,18,18,-14,10,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,10,-69,18,18,-24,18,-15,-16,-17,-53,-54,18,-34,-21,-23,18,18,18,18,-31,-33,-22,10,-18,18,-32,18,10,-25,18,-20,18,18,18,-35,-26,-36,-19,-51,-52,]),'MATCH':([0,2,3,6,7,10,11,12,13,14,15,18,20,22,26,27,28,29,30,31,32,33,34,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,64,71,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,98,100,104,105,106,109,110,111,112,114,116,119,121,123,124,125,127,130,132,135,139,141,142,143,149,150,151,152,153,154,157,162,163,164,165,],[11,11,-3,-6,-7,34,34,-2,-4,-5,34,34,34,34,-55,-56,-57,-58,-59,34,-70,-71,34,34,-13,34,34,34,34,34,34,34,34,34,34,34,34,34,11,-50,34,34,-68,34,34,34,-14,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,11,-69,34,34,-24,34,-15,-16,-17,-53,-54,34,-34,-21,-23,34,34,34,34,-31,-33,-22,11,-18,-32,34,11,-25,34,-20,34,34,34,-35,-26,-36,-19,-51,-52,]),'$end':([1,2,3,6,7,12,13,14,41,74,104,105,106,114,130,],[0,-1,-3,-6,-7,-2,-4,-5,-13,-14,-15,-16,-17,-21,-22,]),'LLV_D':([3,6,7,12,13,14,26,27,28,29,30,32,33,41,56,62,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,97,98,103,104,105,106,109,110,111,112,114,115,116,125,126,127,130,135,139,143,150,154,155,156,157,158,161,162,163,164,165,],[-3,-6,-7,-2,-4,-5,-55,-56,-57,-58,-59,-70,-71,-13,-50,-68,-14,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,106,-69,114,-24,122,-15,-16,-17,-53,-54,125,-34,-21,130,-23,-31,139,-33,-22,-18,-32,-25,-20,-35,-27,-28,-26,163,-37,-36,-19,-51,-52,]),'PUNTOCOMA':([4,5,26,27,28,29,30,32,33,56,62,65,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,101,109,110,120,125,134,135,139,150,163,164,165,],[13,14,-55,-56,-57,-58,-59,-70,-71,-50,-68,-12,-38,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,-39,-53,-54,-40,-31,-41,-18,-32,-20,-19,-51,-52,]),'PAR_I':([8,10,11,15,18,20,22,24,25,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,107,108,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[15,22,22,22,22,22,22,60,61,-55,-56,-57,-58,-59,22,-70,-71,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-50,22,22,-68,22,22,22,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,22,22,-24,22,-17,123,124,-53,-54,22,-34,-23,22,22,22,22,-31,-33,-18,-32,22,-25,22,-20,22,22,22,-35,-26,-36,-19,-51,-52,]),'ID':([9,10,11,15,17,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[16,30,30,30,39,30,30,30,-55,-56,-57,-58,-59,30,-70,-71,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-50,30,30,-68,30,30,30,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,30,30,-24,30,-17,-53,-54,30,-34,-23,30,30,30,30,-31,-33,-18,-32,30,-25,30,-20,30,30,30,-35,-26,-36,-19,-51,-52,]),'MUT':([9,],[17,]),'MENOS':([10,11,15,18,19,20,22,26,27,28,29,30,31,32,33,34,35,36,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,60,61,62,63,64,66,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,103,106,109,110,111,112,116,119,120,121,123,124,125,127,133,134,135,137,138,139,141,143,149,150,151,152,153,154,157,158,159,160,161,162,163,164,165,],[20,20,20,20,43,20,20,-55,-56,-57,-58,-59,20,-70,-71,20,43,43,20,43,20,20,20,20,20,20,20,20,20,20,20,20,20,-50,43,20,20,43,43,20,43,20,20,-45,-46,-47,-48,-49,43,43,43,43,43,43,43,43,-69,43,43,20,43,20,-24,20,43,43,-17,-53,-54,20,-34,-23,20,43,20,20,20,-31,-33,43,43,-18,43,43,-32,20,-25,20,-20,20,20,20,43,-26,43,43,43,43,-36,-19,-51,-52,]),'INT':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[21,21,21,21,21,21,-55,-56,-57,-58,-59,21,-70,-71,21,21,68,21,21,21,21,21,21,21,21,21,21,21,21,21,-50,21,21,-68,21,21,68,21,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,21,21,-24,21,-17,-53,-54,21,-34,-23,21,21,21,21,-31,-33,-18,-32,21,-25,21,-20,21,21,21,-35,-26,-36,-19,-51,-52,]),'FLOAT':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[23,23,23,23,23,23,-55,-56,-57,-58,-59,23,-70,-71,23,23,69,23,23,23,23,23,23,23,23,23,23,23,23,23,-50,23,23,-68,23,23,69,23,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,23,23,-24,23,-17,-53,-54,23,-34,-23,23,23,23,23,-31,-33,-18,-32,23,-25,23,-20,23,23,23,-35,-26,-36,-19,-51,-52,]),'ABS':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[24,24,24,24,24,24,-55,-56,-57,-58,-59,24,-70,-71,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-50,24,24,-68,24,24,24,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,24,24,-24,24,-17,-53,-54,24,-34,-23,24,24,24,24,-31,-33,-18,-32,24,-25,24,-20,24,24,24,-35,-26,-36,-19,-51,-52,]),'SQRT':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[25,25,25,25,25,25,-55,-56,-57,-58,-59,25,-70,-71,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-50,25,25,-68,25,25,25,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,25,25,-24,25,-17,-53,-54,25,-34,-23,25,25,25,25,-31,-33,-18,-32,25,-25,25,-20,25,25,25,-35,-26,-36,-19,-51,-52,]),'ENTERO':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[26,26,26,26,26,26,-55,-56,-57,-58,-59,26,-70,-71,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-50,26,26,-68,26,26,26,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,26,26,-24,26,-17,-53,-54,26,-34,-23,26,26,26,26,-31,-33,-18,-32,26,-25,26,-20,26,26,26,-35,-26,-36,-19,-51,-52,]),'DECIMAL':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[27,27,27,27,27,27,-55,-56,-57,-58,-59,27,-70,-71,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-50,27,27,-68,27,27,27,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,27,27,-24,27,-17,-53,-54,27,-34,-23,27,27,27,27,-31,-33,-18,-32,27,-25,27,-20,27,27,27,-35,-26,-36,-19,-51,-52,]),'TRUE':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[28,28,28,28,28,28,-55,-56,-57,-58,-59,28,-70,-71,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-50,28,28,-68,28,28,28,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,28,28,-24,28,-17,-53,-54,28,-34,-23,28,28,28,28,-31,-33,-18,-32,28,-25,28,-20,28,28,28,-35,-26,-36,-19,-51,-52,]),'FALSE':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[29,29,29,29,29,29,-55,-56,-57,-58,-59,29,-70,-71,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-50,29,29,-68,29,29,29,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,29,29,-24,29,-17,-53,-54,29,-34,-23,29,29,29,29,-31,-33,-18,-32,29,-25,29,-20,29,29,29,-35,-26,-36,-19,-51,-52,]),'NOT':([10,11,15,18,20,22,26,27,28,29,30,31,32,33,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,100,106,109,110,111,112,116,119,121,123,124,125,127,135,139,141,143,149,150,151,152,153,154,157,162,163,164,165,],[31,31,31,31,31,31,-55,-56,-57,-58,-59,31,-70,-71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-50,31,31,-68,31,31,31,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,31,31,-24,31,-17,-53,-54,31,-34,-23,31,31,31,31,-31,-33,-18,-32,31,-25,31,-20,31,31,31,-35,-26,-36,-19,-51,-52,]),'IGUAL':([16,26,27,28,29,30,32,33,39,56,62,67,68,69,70,76,77,78,79,80,81,82,83,84,85,86,87,88,91,96,99,102,109,110,113,117,125,128,133,135,139,150,163,164,165,],[37,-55,-56,-57,-58,-59,-70,-71,71,-50,-68,100,-42,-43,-44,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,-30,118,121,-53,-54,129,131,-31,140,-29,-18,-32,-20,-19,-51,-52,]),'D_PUNTO':([16,21,23,39,57,59,],[38,57,59,72,90,92,]),'MAS':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[42,-55,-56,-57,-58,-59,-70,-71,42,42,42,-50,42,42,42,42,-45,-46,-47,-48,-49,42,42,42,42,42,42,42,42,-69,42,42,42,42,42,-53,-54,42,-31,42,42,-18,42,42,-32,-20,42,42,42,42,42,-19,-51,-52,]),'MULTI':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[44,-55,-56,-57,-58,-59,-70,-71,44,44,44,-50,44,44,44,44,44,44,-47,-48,-49,44,44,44,44,44,44,44,44,-69,44,44,44,44,44,-53,-54,44,-31,44,44,-18,44,44,-32,-20,44,44,44,44,44,-19,-51,-52,]),'DIV':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[45,-55,-56,-57,-58,-59,-70,-71,45,45,45,-50,45,45,45,45,45,45,-47,-48,-49,45,45,45,45,45,45,45,45,-69,45,45,45,45,45,-53,-54,45,-31,45,45,-18,45,45,-32,-20,45,45,45,45,45,-19,-51,-52,]),'MODULO':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[46,-55,-56,-57,-58,-59,-70,-71,46,46,46,-50,46,46,46,46,46,46,46,46,-49,46,46,46,46,46,46,46,46,-69,46,46,46,46,46,-53,-54,46,-31,46,46,-18,46,46,-32,-20,46,46,46,46,46,-19,-51,-52,]),'MAYOR':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,118,120,125,129,131,133,134,135,137,138,139,140,150,154,158,159,160,161,163,164,165,],[47,-55,-56,-57,-58,-59,-70,-71,47,47,47,-50,47,47,47,47,-45,-46,-47,-48,-49,-60,-61,-62,-63,47,-65,47,47,-69,47,47,47,47,47,-53,-54,132,47,-31,141,142,47,47,-18,47,47,-32,153,-20,47,47,47,47,47,-19,-51,-52,]),'MENOR':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[48,-55,-56,-57,-58,-59,-70,-71,48,48,48,-50,48,48,48,48,-45,-46,-47,-48,-49,-60,-61,-62,-63,48,-65,48,48,-69,48,48,48,48,48,-53,-54,48,-31,48,48,-18,48,48,-32,-20,48,48,48,48,48,-19,-51,-52,]),'MAYOR_I':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[49,-55,-56,-57,-58,-59,-70,-71,49,49,49,-50,49,49,49,49,-45,-46,-47,-48,-49,-60,-61,-62,-63,49,-65,49,49,-69,49,49,49,49,49,-53,-54,49,-31,49,49,-18,49,49,-32,-20,49,49,49,49,49,-19,-51,-52,]),'MENOR_I':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[50,-55,-56,-57,-58,-59,-70,-71,50,50,50,-50,50,50,50,50,-45,-46,-47,-48,-49,-60,-61,-62,-63,50,-65,50,50,-69,50,50,50,50,50,-53,-54,50,-31,50,50,-18,50,50,-32,-20,50,50,50,50,50,-19,-51,-52,]),'D_IGUAL':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[51,-55,-56,-57,-58,-59,-70,-71,51,51,51,-50,51,-68,51,51,-45,-46,-47,-48,-49,-60,-61,-62,-63,51,-65,-66,-67,-69,51,51,51,51,51,-53,-54,51,-31,51,51,-18,51,51,-32,-20,51,51,51,51,51,-19,-51,-52,]),'NO_IGUAL':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[52,-55,-56,-57,-58,-59,-70,-71,52,52,52,-50,52,52,52,52,-45,-46,-47,-48,-49,-60,-61,-62,-63,52,-65,52,52,-69,52,52,52,52,52,-53,-54,52,-31,52,52,-18,52,52,-32,-20,52,52,52,52,52,-19,-51,-52,]),'OR':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[53,-55,-56,-57,-58,-59,-70,-71,53,53,53,-50,53,-68,53,53,-45,-46,-47,-48,-49,-60,-61,-62,-63,53,-65,-66,-67,-69,53,53,53,53,53,-53,-54,53,-31,53,53,-18,53,53,-32,-20,53,53,53,53,53,-19,-51,-52,]),'AND':([19,26,27,28,29,30,32,33,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,101,103,109,110,120,125,133,134,135,137,138,139,150,154,158,159,160,161,163,164,165,],[54,-55,-56,-57,-58,-59,-70,-71,54,54,54,-50,54,-68,54,54,-45,-46,-47,-48,-49,-60,-61,-62,-63,54,-65,-66,-67,-69,54,54,54,54,54,-53,-54,54,-31,54,54,-18,54,54,-32,-20,54,54,54,54,54,-19,-51,-52,]),'LLV_I':([19,26,27,28,29,30,32,33,35,40,56,62,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,109,110,125,132,135,136,139,142,150,163,164,165,],[55,-55,-56,-57,-58,-59,-70,-71,64,73,-50,-68,95,55,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,-53,-54,-31,55,-18,149,-32,55,-20,-19,-51,-52,]),'PAR_D':([26,27,28,29,30,32,33,36,56,58,62,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,109,110,125,135,139,150,159,160,163,164,165,],[-55,-56,-57,-58,-59,-70,-71,65,-50,91,-68,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,109,110,-53,-54,-31,-18,-32,-20,164,165,-19,-51,-52,]),'COMA':([26,27,28,29,30,32,33,41,56,62,65,66,74,76,77,78,79,80,81,82,83,84,85,86,87,88,91,101,104,105,106,109,110,114,120,125,130,134,135,137,138,139,144,145,146,147,148,150,154,163,164,165,],[-55,-56,-57,-58,-59,-70,-71,-13,-50,-68,-12,-38,-14,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,-39,-15,-16,-17,-53,-54,-21,-40,-31,-22,-41,-18,151,152,-32,157,-8,-9,-10,-11,-20,162,-19,-51,-52,]),'BARRA':([26,27,28,29,30,32,33,56,62,76,77,78,79,80,81,82,83,84,85,86,87,88,91,96,99,109,110,113,125,133,135,139,150,163,164,165,],[-55,-56,-57,-58,-59,-70,-71,-50,-68,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,-30,119,-53,-54,119,-31,-29,-18,-32,-20,-19,-51,-52,]),'GUION_B':([26,27,28,29,30,32,33,56,62,76,77,78,79,80,81,82,83,84,85,86,87,88,91,97,98,106,109,110,111,112,116,125,127,135,139,143,150,154,157,162,163,164,165,],[-55,-56,-57,-58,-59,-70,-71,-50,-68,-45,-46,-47,-48,-49,-60,-61,-62,-63,-64,-65,-66,-67,-69,117,-24,-17,-53,-54,128,-34,-23,-31,-33,-18,-32,-25,-20,-35,-26,-36,-19,-51,-52,]),'BOOL':([38,72,],[70,70,]),'ELSE':([41,106,122,],[75,-17,136,]),'POW_INT':([90,],[107,]),'POW_FLOAT':([92,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,55,],[2,89,]),'instruccion':([0,2,55,89,142,],[3,12,3,12,156,]),'ejecutar':([0,2,55,89,132,142,],[4,4,4,4,145,4,]),'asignacion':([0,2,55,89,132,142,],[5,5,5,5,146,5,]),'if':([0,2,55,75,89,132,142,],[6,6,6,105,6,147,6,]),'match':([0,2,55,89,132,142,],[7,7,7,7,148,7,]),'expresion':([10,11,15,18,20,22,31,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,60,61,64,71,73,95,97,100,111,119,121,123,124,141,149,151,152,153,],[19,35,36,40,56,58,62,63,66,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,96,101,103,96,96,120,96,133,134,137,138,154,158,159,160,161,]),'exp_if':([10,11,15,18,20,22,31,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,60,61,64,71,73,95,97,100,111,119,121,123,124,136,141,149,151,152,153,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,150,32,32,32,32,32,]),'match_exp':([10,11,15,18,20,22,31,34,37,42,43,44,45,46,47,48,49,50,51,52,53,54,60,61,64,71,73,95,97,100,111,119,121,123,124,141,149,151,152,153,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'statement':([19,75,132,142,],[41,104,143,155,]),'tipo':([38,72,],[67,102,]),'else':([41,],[74,]),'case_list':([64,],[97,]),'case':([64,97,],[98,116,]),'exp_list':([64,95,97,111,],[99,113,99,113,]),'case_list_exp':([95,],[111,]),'case_exp':([95,111,],[112,127,]),'default':([97,],[115,]),'default_exp':([111,],[126,]),'exp_else':([122,],[135,]),'instruccion_no_pt':([132,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_ini','parser.py',37),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',44),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',52),
  ('instruccion -> ejecutar PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',58),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','parser.py',59),
  ('instruccion -> if','instruccion',1,'p_instruccion','parser.py',60),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',61),
  ('instruccion_no_pt -> ejecutar','instruccion_no_pt',1,'p_instruccion_no_pt','parser.py',68),
  ('instruccion_no_pt -> asignacion','instruccion_no_pt',1,'p_instruccion_no_pt','parser.py',69),
  ('instruccion_no_pt -> if','instruccion_no_pt',1,'p_instruccion_no_pt','parser.py',70),
  ('instruccion_no_pt -> match','instruccion_no_pt',1,'p_instruccion_no_pt','parser.py',71),
  ('ejecutar -> EJECUTAR PAR_I expresion PAR_D','ejecutar',4,'p_instruccion_ejecutar','parser.py',78),
  ('if -> IF expresion statement','if',3,'p_instruccion_if','parser.py',85),
  ('if -> IF expresion statement else','if',4,'p_instruccion_if_else','parser.py',92),
  ('else -> ELSE statement','else',2,'p_instruccion_else','parser.py',99),
  ('else -> ELSE if','else',2,'p_instruccion_else','parser.py',100),
  ('statement -> LLV_I instrucciones LLV_D','statement',3,'p_statement','parser.py',107),
  ('exp_if -> IF expresion LLV_I expresion LLV_D exp_else','exp_if',6,'p_expresion_if_else','parser.py',114),
  ('exp_else -> ELSE LLV_I expresion LLV_D','exp_else',4,'p_expresion_else','parser.py',121),
  ('exp_else -> ELSE exp_if','exp_else',2,'p_expresion_else','parser.py',122),
  ('match -> MATCH expresion LLV_I case_list LLV_D','match',5,'p_instruccion_match','parser.py',132),
  ('match -> MATCH expresion LLV_I case_list default LLV_D','match',6,'p_instruccion_match','parser.py',133),
  ('case_list -> case_list case','case_list',2,'p_case_list','parser.py',143),
  ('case_list -> case','case_list',1,'p_case_list','parser.py',144),
  ('case -> exp_list IGUAL MAYOR statement','case',4,'p_case','parser.py',155),
  ('case -> exp_list IGUAL MAYOR instruccion_no_pt COMA','case',5,'p_case','parser.py',156),
  ('default -> GUION_B IGUAL MAYOR statement','default',4,'p_default','parser.py',163),
  ('default -> GUION_B IGUAL MAYOR instruccion','default',4,'p_default','parser.py',164),
  ('exp_list -> exp_list BARRA expresion','exp_list',3,'p_exp_list','parser.py',172),
  ('exp_list -> expresion','exp_list',1,'p_exp_list','parser.py',173),
  ('match_exp -> MATCH expresion LLV_I case_list_exp LLV_D','match_exp',5,'p_exp_match','parser.py',184),
  ('match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D','match_exp',6,'p_exp_match','parser.py',185),
  ('case_list_exp -> case_list_exp case_exp','case_list_exp',2,'p_exp_case_list','parser.py',195),
  ('case_list_exp -> case_exp','case_list_exp',1,'p_exp_case_list','parser.py',196),
  ('case_exp -> exp_list IGUAL MAYOR expresion','case_exp',4,'p_exp_case','parser.py',207),
  ('case_exp -> exp_list IGUAL MAYOR expresion COMA','case_exp',5,'p_exp_case','parser.py',208),
  ('default_exp -> GUION_B IGUAL MAYOR expresion','default_exp',4,'p_exp_default','parser.py',215),
  ('asignacion -> LET ID IGUAL expresion','asignacion',4,'p_asignacion','parser.py',223),
  ('asignacion -> LET MUT ID IGUAL expresion','asignacion',5,'p_asignacion_mut','parser.py',230),
  ('asignacion -> LET ID D_PUNTO tipo IGUAL expresion','asignacion',6,'p_asignacion_tipo','parser.py',237),
  ('asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion','asignacion',7,'p_asignacion_mut_tipo','parser.py',244),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',252),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',253),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',254),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','parser.py',261),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','parser.py',262),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_expresion_aritmetica','parser.py',263),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_aritmetica','parser.py',264),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','parser.py',265),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unario_ar','parser.py',272),
  ('expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',279),
  ('expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D','expresion',9,'p_expresion_pow','parser.py',280),
  ('expresion -> ABS PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',281),
  ('expresion -> SQRT PAR_I expresion PAR_D','expresion',4,'p_expresion_pow','parser.py',282),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','parser.py',298),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_numero','parser.py',299),
  ('expresion -> TRUE','expresion',1,'p_expresion_bool','parser.py',306),
  ('expresion -> FALSE','expresion',1,'p_expresion_bool','parser.py',307),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',316),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','parser.py',322),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','parser.py',323),
  ('expresion -> expresion MAYOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',324),
  ('expresion -> expresion MENOR_I expresion','expresion',3,'p_expresion_relacional','parser.py',325),
  ('expresion -> expresion D_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',326),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_expresion_relacional','parser.py',327),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','parser.py',334),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','parser.py',335),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unario_lo','parser.py',342),
  ('expresion -> PAR_I expresion PAR_D','expresion',3,'p_factor_agrupacion','parser.py',349),
  ('expresion -> exp_if','expresion',1,'p_expresion_sentencia','parser.py',355),
  ('expresion -> match_exp','expresion',1,'p_expresion_sentencia','parser.py',356),
]
